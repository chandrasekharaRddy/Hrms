import { openBlock as A, createElementBlock as Q, createElementVNode as fe, unref as i, reactive as jt, computed as Z, ref as te, toRef as Vt, watch as rt, h as zn, render as Ja, defineComponent as Ee, renderSlot as ue, createCommentVNode as ee, normalizeClass as Me, createBlock as ke, withModifiers as Ia, nextTick as tt, onMounted as We, onUnmounted as la, normalizeProps as Ie, mergeProps as Ne, Fragment as be, normalizeStyle as Xe, createTextVNode as dt, toDisplayString as He, onBeforeUpdate as Un, renderList as Se, withDirectives as ea, vShow as ta, withCtx as ge, withKeys as jn, createVNode as Je, Transition as Bt, createSlots as Ve, useSlots as At, guardReactiveProps as Ue, resolveDynamicComponent as ra, getCurrentScope as Kn, onScopeDispose as Gn, isRef as Za, Teleport as Qn } from "vue";
import { format as ot, isEqual as Rt, setHours as fn, setMinutes as vn, setSeconds as Na, setMilliseconds as Ea, isAfter as Pt, getYear as me, getMonth as ye, setMonth as qn, setYear as lt, addMonths as Mt, subMonths as Wt, isValid as aa, isBefore as zt, set as Ae, eachDayOfInterval as mn, getHours as ct, getMinutes as gt, getSeconds as Ct, startOfWeek as Fa, endOfWeek as pn, parse as Oa, isDate as Xn, addHours as Jn, addYears as gn, subYears as yn, addDays as wt, getDay as Zn, differenceInCalendarDays as xn, endOfYear as hn, startOfYear as bn, add as kn, sub as el, getWeek as tl, getISOWeek as al, isSameQuarter as xa, eachQuarterOfInterval as nl, startOfQuarter as ll, endOfQuarter as en, getQuarter as tn } from "date-fns";
function Yt() {
  return A(), Q(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z"
      }),
      fe("path", {
        d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      fe("path", {
        d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      fe("path", {
        d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z"
      })
    ]
  );
}
Yt.compatConfig = {
  MODE: 3
};
function wn() {
  return A(), Q(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z"
      }),
      fe("path", {
        d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
wn.compatConfig = {
  MODE: 3
};
function La() {
  return A(), Q(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
La.compatConfig = {
  MODE: 3
};
function Ha() {
  return A(), Q(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z"
      })
    ]
  );
}
Ha.compatConfig = {
  MODE: 3
};
function Va() {
  return A(), Q(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z"
      }),
      fe("path", {
        d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      })
    ]
  );
}
Va.compatConfig = {
  MODE: 3
};
function Wa() {
  return A(), Q(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
Wa.compatConfig = {
  MODE: 3
};
function za() {
  return A(), Q(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
za.compatConfig = {
  MODE: 3
};
const st = (e, t) => t ? new Date(e.toLocaleString("en-US", { timeZone: t })) : new Date(e), Mn = (e, t) => {
  const l = Ba(e, t);
  return l || W();
}, rl = (e, t) => t.dateInTz ? st(new Date(e), t.dateInTz) : W(e), Ba = (e, t) => {
  if (!e)
    return null;
  if (!t)
    return W(e);
  const l = W(e);
  return t.exactMatch ? rl(e, t) : st(l, t.timezone);
}, ol = (e) => {
  if (!e)
    return 0;
  const t = /* @__PURE__ */ new Date(), l = new Date(t.toLocaleString("en-US", { timeZone: "UTC" })), n = new Date(t.toLocaleString("en-US", { timeZone: e })), a = n.getTimezoneOffset() / 60;
  return (+l - +n) / (1e3 * 60 * 60) - a;
};
var xe = /* @__PURE__ */ ((e) => (e.month = "month", e.year = "year", e))(xe || {}), kt = /* @__PURE__ */ ((e) => (e.top = "top", e.bottom = "bottom", e))(kt || {}), Dt = /* @__PURE__ */ ((e) => (e.header = "header", e.calendar = "calendar", e.timePicker = "timePicker", e))(Dt || {}), Le = /* @__PURE__ */ ((e) => (e.month = "month", e.year = "year", e.calendar = "calendar", e.time = "time", e.minutes = "minutes", e.hours = "hours", e.seconds = "seconds", e))(Le || {});
const sl = ["timestamp", "date", "iso"];
var ze = /* @__PURE__ */ ((e) => (e.up = "up", e.down = "down", e.left = "left", e.right = "right", e))(ze || {}), Re = /* @__PURE__ */ ((e) => (e.arrowUp = "ArrowUp", e.arrowDown = "ArrowDown", e.arrowLeft = "ArrowLeft", e.arrowRight = "ArrowRight", e.enter = "Enter", e.space = " ", e.esc = "Escape", e.tab = "Tab", e.home = "Home", e.end = "End", e.pageUp = "PageUp", e.pageDown = "PageDown", e))(Re || {});
function an(e) {
  return (t) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(/* @__PURE__ */ new Date(`2017-01-0${t}T00:00:00+00:00`)).slice(0, 2);
}
function ul(e) {
  return (t) => ot(/* @__PURE__ */ new Date(`2017-01-0${t}T00:00:00+00:00`), "EEEEEE", { locale: e });
}
const il = (e, t, l) => {
  const n = [1, 2, 3, 4, 5, 6, 7];
  let a;
  if (e !== null)
    try {
      a = n.map(ul(e));
    } catch {
      a = n.map(an(t));
    }
  else
    a = n.map(an(t));
  const m = a.slice(0, l), v = a.slice(l + 1, a.length);
  return [a[l]].concat(...v).concat(...m);
}, Ua = (e, t, l) => {
  const n = [];
  for (let a = +e[0]; a <= +e[1]; a++)
    n.push({ value: +a, text: Tn(a, t) });
  return l ? n.reverse() : n;
}, Dn = (e, t, l) => {
  const n = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((m) => {
    const v = m < 10 ? `0${m}` : m;
    return /* @__PURE__ */ new Date(`2017-${v}-01T00:00:00+00:00`);
  });
  if (e !== null)
    try {
      const m = l === "long" ? "MMMM" : "MMM";
      return n.map((v, r) => {
        const P = ot(st(v, "UTC"), m, { locale: e });
        return {
          text: P.charAt(0).toUpperCase() + P.substring(1),
          value: r
        };
      });
    } catch {
    }
  const a = new Intl.DateTimeFormat(t, { month: l, timeZone: "UTC" });
  return n.map((m, v) => {
    const r = a.format(m);
    return {
      text: r.charAt(0).toUpperCase() + r.substring(1),
      value: v
    };
  });
}, dl = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], Ye = (e) => {
  const t = i(e);
  return t != null && t.$el ? t == null ? void 0 : t.$el : t;
}, cl = (e) => ({ type: "dot", ...e ?? {} }), $n = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, ja = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, Be = (e) => e, nn = (e) => e === 0 ? e : !e || isNaN(+e) ? null : +e, ln = (e) => e === null, An = (e) => {
  if (e)
    return [...e.querySelectorAll("input, button, select, textarea, a[href]")][0];
}, fl = (e) => {
  const t = [], l = (n) => n.filter((a) => a);
  for (let n = 0; n < e.length; n += 3) {
    const a = [e[n], e[n + 1], e[n + 2]];
    t.push(l(a));
  }
  return t;
}, Ut = (e, t, l) => {
  const n = l != null, a = t != null;
  if (!n && !a)
    return !1;
  const m = +l, v = +t;
  return n && a ? +e > m || +e < v : n ? +e > m : a ? +e < v : !1;
}, _t = (e, t) => fl(e).map((l) => l.map((n) => {
  const { active: a, disabled: m, isBetween: v, highlighted: r } = t(n);
  return {
    ...n,
    active: a,
    disabled: m,
    className: {
      dp__overlay_cell_active: a,
      dp__overlay_cell: !a,
      dp__overlay_cell_disabled: m,
      dp__overlay_cell_pad: !0,
      dp__overlay_cell_active_disabled: m && a,
      dp__cell_in_between: v,
      "dp--highlighted": r
    }
  };
})), mt = (e, t, l = !1) => {
  e && t.allowStopPropagation && (l && e.stopImmediatePropagation(), e.stopPropagation());
}, vl = () => [
  "a[href]",
  "area[href]",
  "input:not([disabled]):not([type='hidden'])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "[tabindex]:not([tabindex='-1'])",
  "[data-datepicker-instance]"
].join(", ");
function ml(e, t) {
  let l = [...document.querySelectorAll(vl())];
  l = l.filter((a) => !e.contains(a) || a.hasAttribute("data-datepicker-instance"));
  const n = l.indexOf(e);
  if (n >= 0 && (t ? n - 1 >= 0 : n + 1 <= l.length))
    return l[n + (t ? -1 : 1)];
}
const pl = (e, t) => e == null ? void 0 : e.querySelector(`[data-dp-element="${t}"]`), Tn = (e, t) => new Intl.NumberFormat(t, { useGrouping: !1, style: "decimal" }).format(e), Ka = (e) => ot(e, "dd-MM-yyyy"), wa = (e) => Array.isArray(e), na = (e, t) => t.get(Ka(e)), gl = (e, t) => e ? t ? t instanceof Map ? !!na(e, t) : t(W(e)) : !1 : !0, je = (e, t, l = !1) => {
  if (e.key === Re.enter || e.key === Re.space)
    return l && e.preventDefault(), t();
}, rn = (e, t, l, n, a, m) => {
  const v = Oa(e, t.slice(0, e.length), /* @__PURE__ */ new Date(), { locale: m });
  return aa(v) && Xn(v) ? n || a ? v : Ae(v, {
    hours: +l.hours,
    minutes: +(l == null ? void 0 : l.minutes),
    seconds: +(l == null ? void 0 : l.seconds),
    milliseconds: 0
  }) : null;
}, yl = (e, t, l, n, a, m) => {
  const v = Array.isArray(l) ? l[0] : l;
  if (typeof t == "string")
    return rn(e, t, v, n, a, m);
  if (Array.isArray(t)) {
    let r = null;
    for (const P of t)
      if (r = rn(e, P, v, n, a, m), r)
        break;
    return r;
  }
  return typeof t == "function" ? t(e) : null;
}, W = (e) => e ? new Date(e) : /* @__PURE__ */ new Date(), hl = (e, t, l) => {
  if (t) {
    const a = (e.getMonth() + 1).toString().padStart(2, "0"), m = e.getDate().toString().padStart(2, "0"), v = e.getHours().toString().padStart(2, "0"), r = e.getMinutes().toString().padStart(2, "0"), P = l ? e.getSeconds().toString().padStart(2, "0") : "00";
    return `${e.getFullYear()}-${a}-${m}T${v}:${r}:${P}.000Z`;
  }
  const n = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(n).toISOString();
}, qe = (e) => {
  let t = W(JSON.parse(JSON.stringify(e)));
  return t = fn(t, 0), t = vn(t, 0), t = Na(t, 0), t = Ea(t, 0), t;
}, pt = (e, t, l, n) => {
  let a = e ? W(e) : W();
  return (t || t === 0) && (a = fn(a, +t)), (l || l === 0) && (a = vn(a, +l)), (n || n === 0) && (a = Na(a, +n)), Ea(a, 0);
}, Ce = (e, t) => !e || !t ? !1 : zt(qe(e), qe(t)), he = (e, t) => !e || !t ? !1 : Rt(qe(e), qe(t)), Oe = (e, t) => !e || !t ? !1 : Pt(qe(e), qe(t)), oa = (e, t, l) => e != null && e[0] && (e != null && e[1]) ? Oe(l, e[0]) && Ce(l, e[1]) : e != null && e[0] && t ? Oe(l, e[0]) && Ce(l, t) || Ce(l, e[0]) && Oe(l, t) : !1, et = (e) => {
  const t = Ae(new Date(e), { date: 1 });
  return qe(t);
}, Ma = (e, t, l) => t && (l || l === 0) ? Object.fromEntries(
  ["hours", "minutes", "seconds"].map((n) => n === t ? [n, l] : [n, isNaN(+e[n]) ? void 0 : +e[n]])
) : {
  hours: isNaN(+e.hours) ? void 0 : +e.hours,
  minutes: isNaN(+e.minutes) ? void 0 : +e.minutes,
  seconds: isNaN(+e.seconds) ? void 0 : +e.seconds
}, $t = (e) => ({
  hours: ct(e),
  minutes: gt(e),
  seconds: Ct(e)
}), Sn = (e, t) => {
  if (t) {
    const l = me(W(t));
    if (l > e)
      return 12;
    if (l === e)
      return ye(W(t));
  }
}, Rn = (e, t) => {
  if (t) {
    const l = me(W(t));
    return l < e ? -1 : l === e ? ye(W(t)) : void 0;
  }
}, Ot = (e) => {
  if (e)
    return me(W(e));
}, Pn = (e, t) => {
  const l = Oe(e, t) ? t : e, n = Oe(t, e) ? t : e;
  return mn({ start: l, end: n });
}, bl = (e) => {
  const t = Mt(e, 1);
  return { month: ye(t), year: me(t) };
}, ut = (e, t) => {
  const l = Fa(e, { weekStartsOn: +t }), n = pn(e, { weekStartsOn: +t });
  return [l, n];
}, Cn = (e, t) => {
  const l = {
    hours: ct(W()),
    minutes: gt(W()),
    seconds: t ? Ct(W()) : 0
  };
  return Object.assign(l, e);
}, vt = (e, t, l) => [Ae(W(e), { date: 1 }), Ae(W(), { month: t, year: l, date: 1 })], it = (e, t, l) => {
  let n = e ? W(e) : W();
  return (t || t === 0) && (n = qn(n, t)), l && (n = lt(n, l)), n;
}, _n = (e, t, l, n, a) => {
  if (!n || a && !t || !a && !l)
    return !1;
  const m = a ? Mt(e, 1) : Wt(e, 1), v = [ye(m), me(m)];
  return a ? !wl(...v, t) : !kl(...v, l);
}, kl = (e, t, l) => Ce(...vt(l, e, t)) || he(...vt(l, e, t)), wl = (e, t, l) => Oe(...vt(l, e, t)) || he(...vt(l, e, t)), On = (e, t, l, n, a, m, v) => {
  if (typeof t == "function" && !v)
    return t(e);
  const r = l ? { locale: l } : void 0;
  return Array.isArray(e) ? `${ot(e[0], m, r)}${a && !e[1] ? "" : n}${e[1] ? ot(e[1], m, r) : ""}` : ot(e, m, r);
}, Tt = (e) => {
  if (e)
    return null;
  throw new Error(ja.prop("partial-range"));
}, Zt = (e, t) => {
  if (t)
    return e();
  throw new Error(ja.prop("range"));
}, Ya = (e) => Array.isArray(e) ? aa(e[0]) && (e[1] ? aa(e[1]) : !0) : e ? aa(e) : !1, Ml = (e, t) => Ae(t ?? W(), {
  hours: +e.hours || 0,
  minutes: +e.minutes || 0,
  seconds: +e.seconds || 0
}), Da = (e, t, l, n) => {
  if (!e)
    return !0;
  if (n) {
    const a = l === "max" ? zt(e, t) : Pt(e, t), m = { seconds: 0, milliseconds: 0 };
    return a || Rt(Ae(e, m), Ae(t, m));
  }
  return l === "max" ? e.getTime() <= t.getTime() : e.getTime() >= t.getTime();
}, $a = (e, t, l) => e ? Ml(e, t) : W(l ?? t), on = (e, t, l, n, a) => {
  if (Array.isArray(n)) {
    const v = $a(e, n[0], t), r = $a(e, n[1], t);
    return Da(n[0], v, l, !!t) && Da(n[1], r, l, !!t) && a;
  }
  const m = $a(e, n, t);
  return Da(n, m, l, !!t) && a;
}, Aa = (e) => Ae(W(), $t(e)), Dl = (e, t) => e instanceof Map ? Array.from(e.values()).filter((l) => me(W(l)) === t).map((l) => ye(l)) : [], Bn = (e, t, l) => typeof e == "function" ? e({ month: t, year: l }) : !!e.months.find((n) => n.month === t && n.year === l), Ga = (e, t) => typeof e == "function" ? e(t) : e.years.includes(t), Lt = jt({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), Yn = () => {
  const e = (n) => {
    Lt.menuFocused = n;
  }, t = (n) => {
    Lt.shiftKeyInMenu !== n && (Lt.shiftKeyInMenu = n);
  };
  return {
    control: Z(() => ({ shiftKeyInMenu: Lt.shiftKeyInMenu, menuFocused: Lt.menuFocused })),
    setMenuFocused: e,
    setShiftKey: t
  };
}, Te = jt({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), Ta = te(null), xt = te(!1), Sa = te(!1), Ra = te(!1), Pa = te(!1), Fe = te(0), _e = te(0), yt = () => {
  const e = Z(() => xt.value ? [...Te.selectionGrid, Te.actionRow].filter((b) => b.length) : Sa.value ? [
    ...Te.timePicker[0],
    ...Te.timePicker[1],
    Pa.value ? [] : [Ta.value],
    Te.actionRow
  ].filter((b) => b.length) : Ra.value ? [...Te.monthPicker, Te.actionRow] : [Te.monthYear, ...Te.calendar, Te.time, Te.actionRow].filter((b) => b.length)), t = (b) => {
    Fe.value = b ? Fe.value + 1 : Fe.value - 1;
    let E = null;
    e.value[_e.value] && (E = e.value[_e.value][Fe.value]), !E && e.value[_e.value + (b ? 1 : -1)] ? (_e.value = _e.value + (b ? 1 : -1), Fe.value = b ? 0 : e.value[_e.value].length - 1) : E || (Fe.value = b ? Fe.value - 1 : Fe.value + 1);
  }, l = (b) => {
    if (_e.value === 0 && !b || _e.value === e.value.length && b)
      return;
    _e.value = b ? _e.value + 1 : _e.value - 1, e.value[_e.value] ? e.value[_e.value] && !e.value[_e.value][Fe.value] && Fe.value !== 0 && (Fe.value = e.value[_e.value].length - 1) : _e.value = b ? _e.value - 1 : _e.value + 1;
  }, n = (b) => {
    let E = null;
    e.value[_e.value] && (E = e.value[_e.value][Fe.value]), E ? E.focus({ preventScroll: !xt.value }) : Fe.value = b ? Fe.value - 1 : Fe.value + 1;
  }, a = () => {
    t(!0), n(!0);
  }, m = () => {
    t(!1), n(!1);
  }, v = () => {
    l(!1), n(!0);
  }, r = () => {
    l(!0), n(!0);
  }, P = (b, E) => {
    Te[E] = b;
  }, C = (b, E) => {
    Te[E] = b;
  }, k = () => {
    Fe.value = 0, _e.value = 0;
  };
  return {
    buildMatrix: P,
    buildMultiLevelMatrix: C,
    setTimePickerBackRef: (b) => {
      Ta.value = b;
    },
    setSelectionGrid: (b) => {
      xt.value = b, k(), b || (Te.selectionGrid = []);
    },
    setTimePicker: (b, E = !1) => {
      Sa.value = b, Pa.value = E, k(), b || (Te.timePicker[0] = [], Te.timePicker[1] = []);
    },
    setTimePickerElements: (b, E = 0) => {
      Te.timePicker[E] = b;
    },
    arrowRight: a,
    arrowLeft: m,
    arrowUp: v,
    arrowDown: r,
    clearArrowNav: () => {
      Te.monthYear = [], Te.calendar = [], Te.time = [], Te.actionRow = [], Te.selectionGrid = [], Te.timePicker[0] = [], Te.timePicker[1] = [], xt.value = !1, Sa.value = !1, Pa.value = !1, Ra.value = !1, k(), Ta.value = null;
    },
    setMonthPicker: (b) => {
      Ra.value = b, k();
    },
    refSets: Te
    // exposed for testing
  };
}, sn = (e) => ({
  menuAppearTop: "dp-menu-appear-top",
  menuAppearBottom: "dp-menu-appear-bottom",
  open: "dp-slide-down",
  close: "dp-slide-up",
  next: "calendar-next",
  previous: "calendar-prev",
  vNext: "dp-slide-up",
  vPrevious: "dp-slide-down",
  ...e ?? {}
}), $l = (e) => ({
  toggleOverlay: "Toggle overlay",
  menu: "Datepicker menu",
  input: "Datepicker input",
  calendarWrap: "Calendar wrapper",
  calendarDays: "Calendar days",
  openTimePicker: "Open time picker",
  closeTimePicker: "Close time Picker",
  incrementValue: (t) => `Increment ${t}`,
  decrementValue: (t) => `Decrement ${t}`,
  openTpOverlay: (t) => `Open ${t} overlay`,
  amPmButton: "Switch AM/PM mode",
  openYearsOverlay: "Open years overlay",
  openMonthsOverlay: "Open months overlay",
  nextMonth: "Next month",
  prevMonth: "Previous month",
  nextYear: "Next year",
  prevYear: "Previous year",
  day: void 0,
  weekDay: void 0,
  ...e ?? {}
}), un = (e) => e ? typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2 : 0, Al = (e) => {
  const t = typeof e == "object" && e, l = {
    static: !0,
    solo: !1
  };
  if (!e)
    return { ...l, count: un(!1) };
  const n = t ? e : {}, a = t ? n.count ?? !0 : e, m = un(a);
  return Object.assign(l, n, { count: m });
}, Tl = (e, t, l) => e || (typeof l == "string" ? l : t), Sl = (e) => typeof e == "boolean" ? e ? sn({}) : !1 : sn(e), Rl = (e) => {
  const t = {
    enterSubmit: !0,
    tabSubmit: !0,
    openMenu: !0,
    selectOnFocus: !1,
    rangeSeparator: " - "
  };
  return typeof e == "object" ? { ...t, ...e ?? {}, enabled: !0 } : { ...t, enabled: e };
}, Pl = (e) => ({
  months: [],
  years: [],
  times: { hours: [], minutes: [], seconds: [] },
  ...e ?? {}
}), Cl = (e) => ({
  showSelect: !0,
  showCancel: !0,
  showNow: !1,
  showPreview: !0,
  ...e ?? {}
}), _l = (e) => {
  const t = { input: !1 };
  return typeof e == "object" ? { ...t, ...e ?? {}, enabled: !0 } : {
    enabled: e,
    ...t
  };
}, Ol = (e) => ({ ...{
  allowStopPropagation: !0,
  closeOnScroll: !1,
  modeHeight: 255,
  allowPreventDefault: !1,
  closeOnClearValue: !0,
  closeOnAutoApply: !0,
  noSwipe: !1,
  keepActionRow: !1,
  onClickOutside: void 0,
  tabOutClosesMenu: !0,
  arrowLeft: void 0,
  keepViewOnOffsetClick: !1,
  timeArrowHoldThreshold: 0
}, ...e ?? {} }), Bl = (e) => {
  const t = {
    dates: Array.isArray(e) ? e.map((l) => W(l)) : [],
    years: [],
    months: [],
    quarters: [],
    weeks: [],
    weekdays: [],
    options: { highlightDisabled: !1 }
  };
  return typeof e == "function" ? e : { ...t, ...e ?? {} };
}, Yl = (e) => typeof e == "object" ? {
  type: (e == null ? void 0 : e.type) ?? "local",
  hideOnOffsetDates: (e == null ? void 0 : e.hideOnOffsetDates) ?? !1
} : {
  type: e,
  hideOnOffsetDates: !1
}, Il = (e, t) => {
  const l = {
    noDisabledRange: !1,
    showLastInRange: !0,
    minMaxRawRange: !1,
    partialRange: !0,
    disableTimeRangeValidation: !1,
    maxRange: void 0,
    minRange: void 0,
    autoRange: void 0,
    fixedStart: !1,
    fixedEnd: !1
  };
  return typeof e == "object" ? { enabled: !0, ...l, ...e } : {
    enabled: e,
    noDisabledRange: t.noDisabledRange,
    showLastInRange: t.showLastInRange,
    minMaxRawRange: t.minMaxRawRange,
    partialRange: t.partialRange,
    disableTimeRangeValidation: t.disableTimeRangeValidation,
    maxRange: t.maxRange,
    minRange: t.minRange,
    autoRange: t.autoRange,
    fixedStart: t.fixedStart,
    fixedEnd: t.fixedEnd
  };
}, Nl = (e, t) => e ? typeof e == "string" ? { timezone: e, exactMatch: !1, dateInTz: void 0, emitTimezone: t, convertModel: !0 } : {
  timezone: e.timezone,
  exactMatch: e.exactMatch ?? !1,
  dateInTz: e.dateInTz ?? void 0,
  emitTimezone: t ?? e.emitTimezone,
  convertModel: e.convertModel ?? !0
} : { timezone: void 0, exactMatch: !1, emitTimezone: t }, Ca = (e, t) => new Map(
  e.map((l) => {
    const n = Mn(l, t);
    return [Ka(n), n];
  })
), El = (e, t) => e.length ? new Map(
  e.map((l) => {
    const n = Mn(l.date, t);
    return [Ka(n), l];
  })
) : null, Fl = (e, t, l, n, a, m, v) => ({
  minDate: Ba(e, v),
  maxDate: Ba(t, v),
  disabledDates: wa(l) ? Ca(l, v) : l,
  allowedDates: wa(n) ? Ca(n, v) : null,
  highlight: typeof a == "object" && wa(a == null ? void 0 : a.dates) ? Ca(a.dates, v) : a,
  markers: El(m, v)
}), Ll = (e, t) => typeof e == "boolean" ? { enabled: e, dragSelect: !0, limit: +t } : {
  enabled: !!e,
  limit: e.limit ? +e.limit : null,
  dragSelect: e.dragSelect ?? !0
}, Pe = (e) => {
  const t = () => {
    const F = e.enableSeconds ? ":ss" : "", B = e.enableMinutes ? ":mm" : "";
    return e.is24 ? `HH${B}${F}` : `hh${B}${F} aa`;
  }, l = () => {
    var F;
    return e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? t() : e.weekPicker ? `${((F = O.value) == null ? void 0 : F.type) === "iso" ? "RR" : "ww"}-yyyy` : e.yearPicker ? "yyyy" : e.quarterPicker ? "QQQ/yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${t()}` : "MM/dd/yyyy";
  }, n = (F) => Cn(F, e.enableSeconds), a = () => X.value.enabled ? e.startTime && Array.isArray(e.startTime) ? [n(e.startTime[0]), n(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? n(e.startTime) : null, m = Z(() => Al(e.multiCalendars)), v = Z(() => a()), r = Z(() => $l(e.ariaLabels)), P = Z(() => Pl(e.filters)), C = Z(() => Sl(e.transitions)), k = Z(() => Cl(e.actionRow)), g = Z(
    () => Tl(e.previewFormat, e.format, l())
  ), h = Z(() => Rl(e.textInput)), _ = Z(() => _l(e.inline)), j = Z(() => Ol(e.config)), T = Z(() => Bl(e.highlight)), O = Z(() => Yl(e.weekNumbers)), b = Z(() => Nl(e.timezone, e.emitTimezone)), E = Z(() => Ll(e.multiDates, e.multiDatesLimit)), I = Z(
    () => Fl(
      e.minDate,
      e.maxDate,
      e.disabledDates,
      e.allowedDates,
      T.value,
      e.markers,
      b.value
    )
  ), X = Z(
    () => Il(e.range, {
      minMaxRawRange: !1,
      maxRange: e.maxRange,
      minRange: e.minRange,
      noDisabledRange: e.noDisabledRange,
      showLastInRange: e.showLastInRange,
      partialRange: e.partialRange,
      disableTimeRangeValidation: e.disableTimeRangeValidation,
      autoRange: e.autoRange,
      fixedStart: e.fixedStart,
      fixedEnd: e.fixedEnd
    })
  );
  return {
    defaultedTransitions: C,
    defaultedMultiCalendars: m,
    defaultedStartTime: v,
    defaultedAriaLabels: r,
    defaultedFilters: P,
    defaultedActionRow: k,
    defaultedPreviewFormat: g,
    defaultedTextInput: h,
    defaultedInline: _,
    defaultedConfig: j,
    defaultedHighlight: T,
    defaultedWeekNumbers: O,
    defaultedRange: X,
    propDates: I,
    defaultedTz: b,
    defaultedMultiDates: E,
    getDefaultPattern: l,
    getDefaultStartTime: a
  };
}, Hl = (e, t, l) => {
  const n = te(), { defaultedTextInput: a, defaultedRange: m, defaultedTz: v, defaultedMultiDates: r, getDefaultPattern: P } = Pe(t), C = te(""), k = Vt(t, "format"), g = Vt(t, "formatLocale");
  rt(
    n,
    () => {
      typeof t.onInternalModelChange == "function" && e("internal-model-change", n.value, $(!0));
    },
    { deep: !0 }
  ), rt(m, (c, ae) => {
    c.enabled !== ae.enabled && (n.value = null);
  }), rt(k, () => {
    f();
  });
  const h = (c) => v.value.timezone && v.value.convertModel ? st(c, v.value.timezone) : c, _ = (c) => {
    if (v.value.timezone && v.value.convertModel) {
      const ae = ol(v.value.timezone);
      return Jn(c, ae);
    }
    return c;
  }, j = (c, ae, V = !1) => On(
    c,
    t.format,
    t.formatLocale,
    a.value.rangeSeparator,
    t.modelAuto,
    ae ?? P(),
    V
  ), T = (c) => c ? t.modelType ? oe(c) : {
    hours: ct(c),
    minutes: gt(c),
    seconds: t.enableSeconds ? Ct(c) : 0
  } : null, O = (c) => t.modelType ? oe(c) : { month: ye(c), year: me(c) }, b = (c) => Array.isArray(c) ? r.value.enabled ? c.map((ae) => E(ae, lt(W(), ae))) : Zt(
    () => [
      lt(W(), c[0]),
      c[1] ? lt(W(), c[1]) : Tt(m.value.partialRange)
    ],
    m.value.enabled
  ) : lt(W(), +c), E = (c, ae) => (typeof c == "string" || typeof c == "number") && t.modelType ? J(c) : ae, I = (c) => Array.isArray(c) ? [
    E(
      c[0],
      pt(null, +c[0].hours, +c[0].minutes, c[0].seconds)
    ),
    E(
      c[1],
      pt(null, +c[1].hours, +c[1].minutes, c[1].seconds)
    )
  ] : E(c, pt(null, c.hours, c.minutes, c.seconds)), X = (c) => {
    const ae = Ae(W(), { date: 1 });
    return Array.isArray(c) ? r.value.enabled ? c.map((V) => E(V, it(ae, +V.month, +V.year))) : Zt(
      () => [
        E(c[0], it(ae, +c[0].month, +c[0].year)),
        E(
          c[1],
          c[1] ? it(ae, +c[1].month, +c[1].year) : Tt(m.value.partialRange)
        )
      ],
      m.value.enabled
    ) : E(c, it(ae, +c.month, +c.year));
  }, F = (c) => {
    if (Array.isArray(c))
      return c.map((ae) => J(ae));
    throw new Error(ja.dateArr("multi-dates"));
  }, B = (c) => {
    if (Array.isArray(c) && m.value.enabled) {
      const ae = c[0], V = c[1];
      return [
        W(Array.isArray(ae) ? ae[0] : null),
        W(Array.isArray(V) ? V[0] : null)
      ];
    }
    return W(c[0]);
  }, U = (c) => t.modelAuto ? Array.isArray(c) ? [J(c[0]), J(c[1])] : t.autoApply ? [J(c)] : [J(c), null] : Array.isArray(c) ? Zt(
    () => c[1] ? [
      J(c[0]),
      c[1] ? J(c[1]) : Tt(m.value.partialRange)
    ] : [J(c[0])],
    m.value.enabled
  ) : J(c), y = () => {
    Array.isArray(n.value) && m.value.enabled && n.value.length === 1 && n.value.push(Tt(m.value.partialRange));
  }, ie = () => {
    const c = n.value;
    return [
      oe(c[0]),
      c[1] ? oe(c[1]) : Tt(m.value.partialRange)
    ];
  }, se = () => n.value[1] ? ie() : oe(Be(n.value[0])), re = () => (n.value || []).map((c) => oe(c)), Y = (c = !1) => (c || y(), t.modelAuto ? se() : r.value.enabled ? re() : Array.isArray(n.value) ? Zt(() => ie(), m.value.enabled) : oe(Be(n.value))), H = (c) => !c || Array.isArray(c) && !c.length ? null : t.timePicker ? I(Be(c)) : t.monthPicker ? X(Be(c)) : t.yearPicker ? b(Be(c)) : r.value.enabled ? F(Be(c)) : t.weekPicker ? B(Be(c)) : U(Be(c)), ne = (c) => {
    const ae = H(c);
    Ya(Be(ae)) ? (n.value = Be(ae), f()) : (n.value = null, C.value = "");
  }, L = () => {
    const c = (ae) => ot(ae, a.value.format);
    return `${c(n.value[0])} ${a.value.rangeSeparator} ${n.value[1] ? c(n.value[1]) : ""}`;
  }, R = () => l.value && n.value ? Array.isArray(n.value) ? L() : ot(n.value, a.value.format) : j(n.value), p = () => n.value ? r.value.enabled ? n.value.map((c) => j(c)).join("; ") : a.value.enabled && typeof a.value.format == "string" ? R() : j(n.value) : "", f = () => {
    !t.format || typeof t.format == "string" || a.value.enabled && typeof a.value.format == "string" ? C.value = p() : C.value = t.format(n.value);
  }, J = (c) => {
    if (t.utc) {
      const ae = new Date(c);
      return t.utc === "preserve" ? new Date(ae.getTime() + ae.getTimezoneOffset() * 6e4) : ae;
    }
    return t.modelType ? sl.includes(t.modelType) ? h(new Date(c)) : t.modelType === "format" && (typeof t.format == "string" || !t.format) ? h(
      Oa(c, P(), /* @__PURE__ */ new Date(), { locale: g.value })
    ) : h(
      Oa(c, t.modelType, /* @__PURE__ */ new Date(), { locale: g.value })
    ) : h(new Date(c));
  }, oe = (c) => c ? t.utc ? hl(c, t.utc === "preserve", t.enableSeconds) : t.modelType ? t.modelType === "timestamp" ? +_(c) : t.modelType === "iso" ? _(c).toISOString() : t.modelType === "format" && (typeof t.format == "string" || !t.format) ? j(_(c)) : j(_(c), t.modelType, !0) : _(c) : "", w = (c, ae = !1, V = !1) => {
    if (V)
      return c;
    if (e("update:model-value", c), v.value.emitTimezone && ae) {
      const pe = Array.isArray(c) ? c.map((s) => st(Be(s), v.value.emitTimezone)) : st(Be(c), v.value.emitTimezone);
      e("update:model-timezone-value", pe);
    }
  }, M = (c) => Array.isArray(n.value) ? r.value.enabled ? n.value.map((ae) => c(ae)) : [
    c(n.value[0]),
    n.value[1] ? c(n.value[1]) : Tt(m.value.partialRange)
  ] : c(Be(n.value)), z = () => {
    if (Array.isArray(n.value)) {
      const c = ut(n.value[0], t.weekStart), ae = n.value[1] ? ut(n.value[1], t.weekStart) : [];
      return [c.map((V) => W(V)), ae.map((V) => W(V))];
    }
    return ut(n.value, t.weekStart).map((c) => W(c));
  }, d = (c, ae) => w(Be(M(c)), !1, ae), S = (c) => {
    const ae = z();
    return c ? ae : e("update:model-value", z());
  }, $ = (c = !1) => (c || f(), t.monthPicker ? d(O, c) : t.timePicker ? d(T, c) : t.yearPicker ? d(me, c) : t.weekPicker ? S(c) : w(Y(c), !0, c));
  return {
    inputValue: C,
    internalModelValue: n,
    checkBeforeEmit: () => n.value ? m.value.enabled ? m.value.partialRange ? n.value.length >= 1 : n.value.length === 2 : !!n.value : !1,
    parseExternalModelValue: ne,
    formatInputValue: f,
    emitModelValue: $
  };
}, Vl = (e, t) => {
  const { defaultedFilters: l, propDates: n } = Pe(e), { validateMonthYearInRange: a } = ht(e), m = (k, g) => {
    let h = k;
    return l.value.months.includes(ye(h)) ? (h = g ? Mt(k, 1) : Wt(k, 1), m(h, g)) : h;
  }, v = (k, g) => {
    let h = k;
    return l.value.years.includes(me(h)) ? (h = g ? gn(k, 1) : yn(k, 1), v(h, g)) : h;
  }, r = (k, g = !1) => {
    const h = Ae(W(), { month: e.month, year: e.year });
    let _ = k ? Mt(h, 1) : Wt(h, 1);
    e.disableYearSelect && (_ = lt(_, e.year));
    let j = ye(_), T = me(_);
    l.value.months.includes(j) && (_ = m(_, k), j = ye(_), T = me(_)), l.value.years.includes(T) && (_ = v(_, k), T = me(_)), a(j, T, k, e.preventMinMaxNavigation) && P(j, T, g);
  }, P = (k, g, h) => {
    t("update-month-year", { month: k, year: g, fromNav: h });
  }, C = Z(() => (k) => _n(
    Ae(W(), { month: e.month, year: e.year }),
    n.value.maxDate,
    n.value.minDate,
    e.preventMinMaxNavigation,
    k
  ));
  return { handleMonthYearChange: r, isDisabled: C, updateMonthYear: P };
};
var St = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(St || {});
const Wl = ({
  menuRef: e,
  menuRefInner: t,
  inputRef: l,
  pickerWrapperRef: n,
  inline: a,
  emit: m,
  props: v,
  slots: r
}) => {
  const P = te({}), C = te(!1), k = te({
    top: "0",
    left: "0"
  }), g = te(!1), h = Vt(v, "teleportCenter");
  rt(h, () => {
    k.value = JSON.parse(JSON.stringify({})), X();
  });
  const _ = (R) => {
    if (v.teleport) {
      const p = R.getBoundingClientRect();
      return {
        left: p.left + window.scrollX,
        top: p.top + window.scrollY
      };
    }
    return { top: 0, left: 0 };
  }, j = (R, p) => {
    k.value.left = `${R + p - P.value.width}px`;
  }, T = (R) => {
    k.value.left = `${R}px`;
  }, O = (R, p) => {
    v.position === St.left && T(R), v.position === St.right && j(R, p), v.position === St.center && (k.value.left = `${R + p / 2 - P.value.width / 2}px`);
  }, b = (R) => {
    const { width: p, height: f } = R.getBoundingClientRect(), { top: J, left: oe } = v.altPosition ? v.altPosition(R) : _(R);
    return { top: +J, left: +oe, width: p, height: f };
  }, E = () => {
    k.value.left = "50%", k.value.top = "50%", k.value.transform = "translate(-50%, -50%)", k.value.position = "fixed", delete k.value.opacity;
  }, I = () => {
    const R = Ye(l), { top: p, left: f, transform: J } = v.altPosition(R);
    k.value = { top: `${p}px`, left: `${f}px`, transform: J ?? "" };
  }, X = (R = !0) => {
    var p;
    if (!a.value.enabled) {
      if (h.value)
        return E();
      if (v.altPosition !== null)
        return I();
      if (R) {
        const f = v.teleport ? (p = t.value) == null ? void 0 : p.$el : e.value;
        f && (P.value = f.getBoundingClientRect()), m("recalculate-position");
      }
      return re();
    }
  }, F = ({ inputEl: R, left: p, width: f }) => {
    window.screen.width > 768 && !C.value && O(p, f), y(R);
  }, B = (R) => {
    const { top: p, left: f, height: J, width: oe } = b(R);
    k.value.top = `${J + p + +v.offset}px`, g.value = !1, C.value || (k.value.left = `${f + oe / 2 - P.value.width / 2}px`), F({ inputEl: R, left: f, width: oe });
  }, U = (R) => {
    const { top: p, left: f, width: J } = b(R);
    k.value.top = `${p - +v.offset - P.value.height}px`, g.value = !0, F({ inputEl: R, left: f, width: J });
  }, y = (R) => {
    if (v.autoPosition) {
      const { left: p, width: f } = b(R), { left: J, right: oe } = P.value;
      if (!C.value) {
        if (Math.abs(J) !== Math.abs(oe)) {
          if (J <= 0)
            return C.value = !0, T(p);
          if (oe >= document.documentElement.clientWidth)
            return C.value = !0, j(p, f);
        }
        return O(p, f);
      }
    }
  }, ie = () => {
    const R = Ye(l);
    if (R) {
      const { height: p } = P.value, { top: f, height: J } = R.getBoundingClientRect(), w = window.innerHeight - f - J, M = f;
      return p <= w ? kt.bottom : p > w && p <= M ? kt.top : w >= M ? kt.bottom : kt.top;
    }
    return kt.bottom;
  }, se = (R) => ie() === kt.bottom ? B(R) : U(R), re = () => {
    const R = Ye(l);
    if (R)
      return v.autoPosition ? se(R) : B(R);
  }, Y = function(R) {
    if (R) {
      const p = R.scrollHeight > R.clientHeight, J = window.getComputedStyle(R).overflowY.indexOf("hidden") !== -1;
      return p && !J;
    }
    return !0;
  }, H = function(R) {
    return !R || R === document.body || R.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? window : Y(R) ? R : H(R.assignedSlot ? R.assignedSlot.parentNode : R.parentNode);
  }, ne = (R) => {
    if (R)
      switch (v.position) {
        case St.left:
          return { left: 0, transform: "translateX(0)" };
        case St.right:
          return { left: `${R.width}px`, transform: "translateX(-100%)" };
        default:
          return { left: `${R.width / 2}px`, transform: "translateX(-50%)" };
      }
    return {};
  };
  return {
    openOnTop: g,
    menuStyle: k,
    xCorrect: C,
    setMenuPosition: X,
    getScrollableParent: H,
    shadowRender: (R, p) => {
      var z, d, S;
      const f = document.createElement("div"), J = (z = Ye(l)) == null ? void 0 : z.getBoundingClientRect();
      f.setAttribute("id", "dp--temp-container");
      const oe = (d = n.value) != null && d.clientWidth ? n.value : document.body;
      oe.append(f);
      const w = ne(J), M = zn(
        R,
        {
          ...p,
          shadow: !0,
          style: { opacity: 0, position: "absolute", ...w }
        },
        Object.fromEntries(
          Object.keys(r).filter(($) => ["right-sidebar", "left-sidebar", "top-extra", "action-extra"].includes($)).map(($) => [$, r[$]])
        )
      );
      Ja(M, f), P.value = (S = M.el) == null ? void 0 : S.getBoundingClientRect(), Ja(null, f), oe.removeChild(f);
    }
  };
}, ft = [
  { name: "clock-icon", use: ["time", "calendar", "shared"] },
  { name: "arrow-left", use: ["month-year", "calendar", "shared", "year-mode"] },
  { name: "arrow-right", use: ["month-year", "calendar", "shared", "year-mode"] },
  { name: "arrow-up", use: ["time", "calendar", "month-year", "shared"] },
  { name: "arrow-down", use: ["time", "calendar", "month-year", "shared"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar", "shared", "year-mode"] },
  { name: "day", use: ["calendar", "shared"] },
  { name: "month-overlay-value", use: ["calendar", "month-year", "shared"] },
  { name: "year-overlay-value", use: ["calendar", "month-year", "shared", "year-mode"] },
  { name: "year-overlay", use: ["month-year", "shared"] },
  { name: "month-overlay", use: ["month-year", "shared"] },
  { name: "month-overlay-header", use: ["month-year", "shared"] },
  { name: "year-overlay-header", use: ["month-year", "shared"] },
  { name: "hours-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "hours-overlay-header", use: ["calendar", "time", "shared"] },
  { name: "minutes-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "minutes-overlay-header", use: ["calendar", "time", "shared"] },
  { name: "seconds-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "seconds-overlay-header", use: ["calendar", "time", "shared"] },
  { name: "hours", use: ["calendar", "time", "shared"] },
  { name: "minutes", use: ["calendar", "time", "shared"] },
  { name: "month", use: ["calendar", "month-year", "shared"] },
  { name: "year", use: ["calendar", "month-year", "shared", "year-mode"] },
  { name: "action-buttons", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar", "shared"] },
  { name: "marker-tooltip", use: ["calendar", "shared"] },
  { name: "action-extra", use: ["menu"] },
  { name: "time-picker-overlay", use: ["calendar", "time", "shared"] },
  { name: "am-pm-button", use: ["calendar", "time", "shared"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year", "shared"] },
  { name: "time-picker", use: ["menu", "shared"] },
  { name: "action-row", use: ["action"] },
  { name: "marker", use: ["calendar", "shared"] },
  { name: "quarter", use: ["shared"] },
  { name: "top-extra", use: ["shared", "month-year"] }
], zl = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], Ul = {
  all: () => ft,
  monthYear: () => ft.filter((e) => e.use.includes("month-year")),
  input: () => zl,
  timePicker: () => ft.filter((e) => e.use.includes("time")),
  action: () => ft.filter((e) => e.use.includes("action")),
  calendar: () => ft.filter((e) => e.use.includes("calendar")),
  menu: () => ft.filter((e) => e.use.includes("menu")),
  shared: () => ft.filter((e) => e.use.includes("shared")),
  yearMode: () => ft.filter((e) => e.use.includes("year-mode"))
}, Qe = (e, t, l) => {
  const n = [];
  return Ul[t]().forEach((a) => {
    e[a.name] && n.push(a.name);
  }), l != null && l.length && l.forEach((a) => {
    a.slot && n.push(a.slot);
  }), n;
}, Kt = (e) => {
  const t = Z(() => (n) => e.value ? n ? e.value.open : e.value.close : ""), l = Z(() => (n) => e.value ? n ? e.value.menuAppearTop : e.value.menuAppearBottom : "");
  return { transitionName: t, showTransition: !!e.value, menuTransition: l };
}, Gt = (e, t) => {
  const { defaultedRange: l, defaultedTz: n } = Pe(e), a = W(st(W(), n.value.timezone)), m = te([{ month: ye(a), year: me(a) }]), v = (g) => {
    const h = {
      hours: ct(a),
      minutes: gt(a),
      seconds: 0
    };
    return l.value.enabled ? [h[g], h[g]] : h[g];
  }, r = jt({
    hours: v("hours"),
    minutes: v("minutes"),
    seconds: v("seconds")
  });
  rt(
    l,
    (g, h) => {
      g.enabled !== h.enabled && (r.hours = v("hours"), r.minutes = v("minutes"), r.seconds = v("seconds"));
    },
    { deep: !0 }
  );
  const P = Z({
    get: () => e.internalModelValue,
    set: (g) => {
      !e.readonly && !e.disabled && t("update:internal-model-value", g);
    }
  }), C = Z(
    () => (g) => m.value[g] ? m.value[g].month : 0
  ), k = Z(
    () => (g) => m.value[g] ? m.value[g].year : 0
  );
  return {
    calendars: m,
    time: r,
    modelValue: P,
    month: C,
    year: k,
    today: a
  };
}, jl = (e, t) => {
  const { defaultedMultiCalendars: l, defaultedMultiDates: n, defaultedHighlight: a, defaultedTz: m, propDates: v, defaultedRange: r } = Pe(t), { isDisabled: P } = ht(t), C = te(null), k = te(st(/* @__PURE__ */ new Date(), m.value.timezone)), g = (d) => {
    !d.current && t.hideOffsetDates || (C.value = d.value);
  }, h = () => {
    C.value = null;
  }, _ = (d) => Array.isArray(e.value) && r.value.enabled && e.value[0] && C.value ? d ? Oe(C.value, e.value[0]) : Ce(C.value, e.value[0]) : !0, j = (d, S) => {
    const $ = () => e.value ? S ? e.value[0] || null : e.value[1] : null, de = e.value && Array.isArray(e.value) ? $() : null;
    return he(W(d.value), de);
  }, T = (d) => {
    const S = Array.isArray(e.value) ? e.value[0] : null;
    return d ? !Ce(C.value ?? null, S) : !0;
  }, O = (d, S = !0) => (r.value.enabled || t.weekPicker) && Array.isArray(e.value) && e.value.length === 2 ? t.hideOffsetDates && !d.current ? !1 : he(W(d.value), e.value[S ? 0 : 1]) : r.value.enabled ? j(d, S) && T(S) || he(d.value, Array.isArray(e.value) ? e.value[0] : null) && _(S) : !1, b = (d, S) => {
    if (Array.isArray(e.value) && e.value[0] && e.value.length === 1) {
      const $ = he(d.value, C.value);
      return S ? Oe(e.value[0], d.value) && $ : Ce(e.value[0], d.value) && $;
    }
    return !1;
  }, E = (d) => !e.value || t.hideOffsetDates && !d.current ? !1 : r.value.enabled ? t.modelAuto && Array.isArray(e.value) ? he(d.value, e.value[0] ? e.value[0] : k.value) : !1 : n.value.enabled && Array.isArray(e.value) ? e.value.some((S) => he(S, d.value)) : he(d.value, e.value ? e.value : k.value), I = (d) => {
    if (r.value.autoRange || t.weekPicker) {
      if (C.value) {
        if (t.hideOffsetDates && !d.current)
          return !1;
        const S = wt(C.value, +r.value.autoRange), $ = ut(W(C.value), t.weekStart);
        return t.weekPicker ? he($[1], W(d.value)) : he(S, W(d.value));
      }
      return !1;
    }
    return !1;
  }, X = (d) => {
    if (r.value.autoRange || t.weekPicker) {
      if (C.value) {
        const S = wt(C.value, +r.value.autoRange);
        if (t.hideOffsetDates && !d.current)
          return !1;
        const $ = ut(W(C.value), t.weekStart);
        return t.weekPicker ? Oe(d.value, $[0]) && Ce(d.value, $[1]) : Oe(d.value, C.value) && Ce(d.value, S);
      }
      return !1;
    }
    return !1;
  }, F = (d) => {
    if (r.value.autoRange || t.weekPicker) {
      if (C.value) {
        if (t.hideOffsetDates && !d.current)
          return !1;
        const S = ut(W(C.value), t.weekStart);
        return t.weekPicker ? he(S[0], d.value) : he(C.value, d.value);
      }
      return !1;
    }
    return !1;
  }, B = (d) => oa(e.value, C.value, d.value), U = () => t.modelAuto && Array.isArray(t.internalModelValue) ? !!t.internalModelValue[0] : !1, y = () => t.modelAuto ? $n(t.internalModelValue) : !0, ie = (d) => {
    if (t.weekPicker)
      return !1;
    const S = r.value.enabled ? !O(d) && !O(d, !1) : !0;
    return !P(d.value) && !E(d) && !(!d.current && t.hideOffsetDates) && S;
  }, se = (d) => r.value.enabled ? t.modelAuto ? U() && E(d) : !1 : E(d), re = (d) => a.value ? gl(d.value, v.value.highlight) : !1, Y = (d) => {
    const S = P(d.value);
    return S && (typeof a.value == "function" ? !a.value(d.value, S) : !a.value.options.highlightDisabled);
  }, H = (d) => {
    var S;
    return typeof a.value == "function" ? a.value(d.value) : (S = a.value.weekdays) == null ? void 0 : S.includes(d.value.getDay());
  }, ne = (d) => (r.value.enabled || t.weekPicker) && (!(l.value.count > 0) || d.current) && y() && !(!d.current && t.hideOffsetDates) && !E(d) ? B(d) : !1, L = (d) => {
    const { isRangeStart: S, isRangeEnd: $ } = J(d), de = r.value.enabled ? S || $ : !1;
    return {
      dp__cell_offset: !d.current,
      dp__pointer: !t.disabled && !(!d.current && t.hideOffsetDates) && !P(d.value),
      dp__cell_disabled: P(d.value),
      dp__cell_highlight: !Y(d) && (re(d) || H(d)) && !se(d) && !de && !F(d) && !(ne(d) && t.weekPicker) && !$,
      dp__cell_highlight_active: !Y(d) && (re(d) || H(d)) && se(d),
      dp__today: !t.noToday && he(d.value, k.value) && d.current,
      "dp--past": Ce(d.value, k.value),
      "dp--future": Oe(d.value, k.value)
    };
  }, R = (d) => ({
    dp__active_date: se(d),
    dp__date_hover: ie(d)
  }), p = (d) => {
    if (e.value && !Array.isArray(e.value)) {
      const S = ut(e.value, t.weekStart);
      return {
        ...w(d),
        dp__range_start: he(S[0], d.value),
        dp__range_end: he(S[1], d.value),
        dp__range_between_week: Oe(d.value, S[0]) && Ce(d.value, S[1])
      };
    }
    return {
      ...w(d)
    };
  }, f = (d) => {
    if (e.value && Array.isArray(e.value)) {
      const S = ut(e.value[0], t.weekStart), $ = e.value[1] ? ut(e.value[1], t.weekStart) : [];
      return {
        ...w(d),
        dp__range_start: he(S[0], d.value) || he($[0], d.value),
        dp__range_end: he(S[1], d.value) || he($[1], d.value),
        dp__range_between_week: Oe(d.value, S[0]) && Ce(d.value, S[1]) || Oe(d.value, $[0]) && Ce(d.value, $[1]),
        dp__range_between: Oe(d.value, S[1]) && Ce(d.value, $[0])
      };
    }
    return {
      ...w(d)
    };
  }, J = (d) => {
    const S = l.value.count > 0 ? d.current && O(d) && y() : O(d) && y(), $ = l.value.count > 0 ? d.current && O(d, !1) && y() : O(d, !1) && y();
    return { isRangeStart: S, isRangeEnd: $ };
  }, oe = (d) => {
    const { isRangeStart: S, isRangeEnd: $ } = J(d);
    return {
      dp__range_start: S,
      dp__range_end: $,
      dp__range_between: ne(d),
      dp__date_hover: he(d.value, C.value) && !S && !$ && !t.weekPicker,
      dp__date_hover_start: b(d, !0),
      dp__date_hover_end: b(d, !1)
    };
  }, w = (d) => ({
    ...oe(d),
    dp__cell_auto_range: X(d),
    dp__cell_auto_range_start: F(d),
    dp__cell_auto_range_end: I(d)
  }), M = (d) => r.value.enabled ? r.value.autoRange ? w(d) : t.modelAuto ? { ...R(d), ...oe(d) } : t.weekPicker ? f(d) : oe(d) : t.weekPicker ? p(d) : R(d);
  return {
    setHoverDate: g,
    clearHoverDate: h,
    getDayClassData: (d) => t.hideOffsetDates && !d.current ? {} : {
      ...L(d),
      ...M(d),
      [t.dayClass ? t.dayClass(d.value) : ""]: !0,
      [t.calendarCellClassName]: !!t.calendarCellClassName
    }
  };
}, ht = (e) => {
  const { defaultedFilters: t, defaultedRange: l, propDates: n, defaultedMultiDates: a } = Pe(e), m = (Y) => n.value.disabledDates ? typeof n.value.disabledDates == "function" ? n.value.disabledDates(W(Y)) : !!na(Y, n.value.disabledDates) : !1, v = (Y) => {
    const H = n.value.maxDate ? Oe(Y, n.value.maxDate) : !1, ne = n.value.minDate ? Ce(Y, n.value.minDate) : !1, L = m(Y), p = t.value.months.map((M) => +M).includes(ye(Y)), f = e.disabledWeekDays.length ? e.disabledWeekDays.some((M) => +M === Zn(Y)) : !1, J = g(Y), oe = me(Y), w = oe < +e.yearRange[0] || oe > +e.yearRange[1];
    return !(H || ne || L || p || w || f || J);
  }, r = (Y, H) => Ce(...vt(n.value.minDate, Y, H)) || he(...vt(n.value.minDate, Y, H)), P = (Y, H) => Oe(...vt(n.value.maxDate, Y, H)) || he(...vt(n.value.maxDate, Y, H)), C = (Y, H, ne) => {
    let L = !1;
    return n.value.maxDate && ne && P(Y, H) && (L = !0), n.value.minDate && !ne && r(Y, H) && (L = !0), L;
  }, k = (Y, H, ne, L) => {
    let R = !1;
    return L ? n.value.minDate && n.value.maxDate ? R = C(Y, H, ne) : (n.value.minDate && r(Y, H) || n.value.maxDate && P(Y, H)) && (R = !0) : R = !0, R;
  }, g = (Y) => Array.isArray(n.value.allowedDates) && !n.value.allowedDates.length ? !0 : n.value.allowedDates ? !na(Y, n.value.allowedDates) : !1, h = (Y) => !v(Y), _ = (Y) => l.value.noDisabledRange ? !mn({ start: Y[0], end: Y[1] }).some((ne) => h(ne)) : !0, j = (Y) => {
    if (Y) {
      const H = me(Y);
      return H >= +e.yearRange[0] && H <= e.yearRange[1];
    }
    return !0;
  }, T = (Y, H) => !!(Array.isArray(Y) && Y[H] && (l.value.maxRange || l.value.minRange) && j(Y[H])), O = (Y, H, ne = 0) => {
    if (T(H, ne) && j(Y)) {
      const L = xn(Y, H[ne]), R = Pn(H[ne], Y), p = R.length === 1 ? 0 : R.filter((J) => h(J)).length, f = Math.abs(L) - (l.value.minMaxRawRange ? 0 : p);
      if (l.value.minRange && l.value.maxRange)
        return f >= +l.value.minRange && f <= +l.value.maxRange;
      if (l.value.minRange)
        return f >= +l.value.minRange;
      if (l.value.maxRange)
        return f <= +l.value.maxRange;
    }
    return !0;
  }, b = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, E = (Y) => Array.isArray(Y) ? [Y[0] ? Aa(Y[0]) : null, Y[1] ? Aa(Y[1]) : null] : Aa(Y), I = (Y, H, ne) => Y.find(
    (L) => +L.hours === ct(H) && L.minutes === "*" ? !0 : +L.minutes === gt(H) && +L.hours === ct(H)
  ) && ne, X = (Y, H, ne) => {
    const [L, R] = Y, [p, f] = H;
    return !I(L, p, ne) && !I(R, f, ne) && ne;
  }, F = (Y, H) => {
    const ne = Array.isArray(H) ? H : [H];
    return Array.isArray(e.disabledTimes) ? Array.isArray(e.disabledTimes[0]) ? X(e.disabledTimes, ne, Y) : !ne.some((L) => I(e.disabledTimes, L, Y)) : Y;
  }, B = (Y, H) => {
    const ne = Array.isArray(H) ? [$t(H[0]), H[1] ? $t(H[1]) : void 0] : $t(H), L = !e.disabledTimes(ne);
    return Y && L;
  }, U = (Y, H) => e.disabledTimes ? Array.isArray(e.disabledTimes) ? F(H, Y) : B(H, Y) : H, y = (Y) => {
    let H = !0;
    if (!Y || b())
      return !0;
    const ne = !n.value.minDate && !n.value.maxDate ? E(Y) : Y;
    return (e.maxTime || n.value.maxDate) && (H = on(
      e.maxTime,
      n.value.maxDate,
      "max",
      Be(ne),
      H
    )), (e.minTime || n.value.minDate) && (H = on(
      e.minTime,
      n.value.minDate,
      "min",
      Be(ne),
      H
    )), U(Y, H);
  }, ie = (Y) => {
    if (!e.monthPicker)
      return !0;
    let H = !0;
    const ne = W(et(Y));
    if (n.value.minDate && n.value.maxDate) {
      const L = W(et(n.value.minDate)), R = W(et(n.value.maxDate));
      return Oe(ne, L) && Ce(ne, R) || he(ne, L) || he(ne, R);
    }
    if (n.value.minDate) {
      const L = W(et(n.value.minDate));
      H = Oe(ne, L) || he(ne, L);
    }
    if (n.value.maxDate) {
      const L = W(et(n.value.maxDate));
      H = Ce(ne, L) || he(ne, L);
    }
    return H;
  }, se = Z(() => (Y) => !e.enableTimePicker || e.ignoreTimeValidation ? !0 : y(Y)), re = Z(() => (Y) => e.monthPicker ? Array.isArray(Y) && (l.value.enabled || a.value.enabled) ? !Y.filter((ne) => !ie(ne)).length : ie(Y) : !0);
  return {
    isDisabled: h,
    validateDate: v,
    validateMonthYearInRange: k,
    isDateRangeAllowed: _,
    checkMinMaxRange: O,
    isValidTime: y,
    isTimeValid: se,
    isMonthValid: re
  };
}, sa = () => {
  const e = Z(() => (n, a) => n == null ? void 0 : n.includes(a)), t = Z(() => (n, a) => n.count ? n.solo ? !0 : a === 0 : !0), l = Z(() => (n, a) => n.count ? n.solo ? !0 : a === n.count - 1 : !0);
  return { hideNavigationButtons: e, showLeftIcon: t, showRightIcon: l };
}, Kl = (e, t, l) => {
  const n = te(0), a = jt({
    [Dt.timePicker]: !e.enableTimePicker || e.timePicker || e.monthPicker,
    [Dt.calendar]: !1,
    [Dt.header]: !1
  }), m = Z(() => e.monthPicker || e.timePicker), v = (g) => {
    var h;
    if ((h = e.flow) != null && h.length) {
      if (!g && m.value)
        return k();
      a[g] = !0, Object.keys(a).filter((_) => !a[_]).length || k();
    }
  }, r = () => {
    var g;
    (g = e.flow) != null && g.length && n.value !== -1 && (n.value += 1, t("flow-step", n.value), k());
  }, P = () => {
    n.value = -1;
  }, C = (g, h, ..._) => {
    var j, T;
    e.flow[n.value] === g && l.value && ((T = (j = l.value)[h]) == null || T.call(j, ..._));
  }, k = () => {
    C(Le.month, "toggleMonthPicker", !0), C(Le.year, "toggleYearPicker", !0), C(Le.calendar, "toggleTimePicker", !1, !0), C(Le.time, "toggleTimePicker", !0, !0);
    const g = e.flow[n.value];
    (g === Le.hours || g === Le.minutes || g === Le.seconds) && C(g, "toggleTimePicker", !0, !0, g);
  };
  return { childMount: v, updateFlowStep: r, resetFlow: P, flowStep: n };
}, ua = {
  multiCalendars: { type: [Boolean, Number, String, Object], default: void 0 },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  autoPosition: { type: Boolean, default: !0 },
  altPosition: { type: Function, default: null },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: [String, Object], default: null },
  emitTimezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  disableYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: null },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetDates: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  partialFlow: { type: Boolean, default: !1 },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Function, Object],
    default: null
  },
  teleport: { type: [Boolean, String, Object], default: null },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: {
    type: [String, Function, Object],
    default: null
  },
  calendarClassName: { type: String, default: null },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: [Object, Boolean], default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: [Boolean, Object], default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: [Boolean, Object], default: !1 },
  textInput: { type: [Boolean, Object], default: !1 },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: [Boolean, String], default: !1 },
  actionRow: { type: Object, default: () => ({}) },
  focusStartDate: { type: Boolean, default: !1 },
  disabledTimes: { type: [Function, Array], default: void 0 },
  showLastInRange: { type: Boolean, default: !0 },
  timePickerInline: { type: Boolean, default: !1 },
  calendar: { type: Function, default: null },
  config: { type: Object, default: void 0 },
  quarterPicker: { type: Boolean, default: !1 },
  yearFirst: { type: Boolean, default: !1 },
  loading: { type: Boolean, default: !1 },
  onInternalModelChange: { type: [Function, Object], default: null },
  enableMinutes: { type: Boolean, default: !0 }
}, at = {
  ...ua,
  shadow: { type: Boolean, default: !1 },
  flowStep: { type: Number, default: 0 },
  internalModelValue: { type: [Date, Array], default: null },
  noOverlayFocus: { type: Boolean, default: !1 },
  collapse: { type: Boolean, default: !1 },
  menuWrapRef: { type: Object, default: null },
  getInputRect: { type: Function, default: () => ({}) }
}, Gl = {
  key: 1,
  class: "dp__input_wrap"
}, Ql = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "aria-label", "aria-disabled", "aria-invalid"], ql = {
  key: 2,
  class: "dp__clear_icon"
}, Xl = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...ua
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur",
    "real-blur"
  ],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = e, {
      defaultedTextInput: m,
      defaultedAriaLabels: v,
      defaultedInline: r,
      defaultedConfig: P,
      defaultedRange: C,
      defaultedMultiDates: k,
      getDefaultPattern: g,
      getDefaultStartTime: h
    } = Pe(a), { checkMinMaxRange: _ } = ht(a), j = te(), T = te(null), O = te(!1), b = te(!1), E = Z(
      () => ({
        dp__pointer: !a.disabled && !a.readonly && !m.value.enabled,
        dp__disabled: a.disabled,
        dp__input_readonly: !m.value.enabled,
        dp__input: !0,
        dp__input_icon_pad: !a.hideInputIcon,
        dp__input_valid: !!a.state,
        dp__input_invalid: a.state === !1,
        dp__input_focus: O.value || a.isMenuOpen,
        dp__input_reg: !m.value.enabled,
        [a.inputClassName]: !!a.inputClassName
      })
    ), I = () => {
      n("set-input-date", null), a.clearable && a.autoApply && (n("set-empty-date"), j.value = null);
    }, X = (f) => {
      const J = h();
      return yl(
        f,
        m.value.format ?? g(),
        J ?? Cn({}, a.enableSeconds),
        a.inputValue,
        b.value,
        a.formatLocale
      );
    }, F = (f) => {
      const { rangeSeparator: J } = m.value, [oe, w] = f.split(`${J}`);
      if (oe) {
        const M = X(oe.trim()), z = w ? X(w.trim()) : null;
        if (Pt(M, z))
          return;
        const d = M && z ? [M, z] : [M];
        _(z, d, 0) && (j.value = M ? d : null);
      }
    }, B = () => {
      b.value = !0;
    }, U = (f) => {
      if (C.value.enabled)
        F(f);
      else if (k.value.enabled) {
        const J = f.split(";");
        j.value = J.map((oe) => X(oe.trim())).filter((oe) => oe);
      } else
        j.value = X(f);
    }, y = (f) => {
      var oe;
      const J = typeof f == "string" ? f : (oe = f.target) == null ? void 0 : oe.value;
      J !== "" ? (m.value.openMenu && !a.isMenuOpen && n("open"), U(J), n("set-input-date", j.value)) : I(), b.value = !1, n("update:input-value", J);
    }, ie = (f) => {
      m.value.enabled ? (U(f.target.value), m.value.enterSubmit && Ya(j.value) && a.inputValue !== "" ? (n("set-input-date", j.value, !0), j.value = null) : m.value.enterSubmit && a.inputValue === "" && (j.value = null, n("clear"))) : Y(f);
    }, se = (f) => {
      m.value.enabled && m.value.tabSubmit && U(f.target.value), m.value.tabSubmit && Ya(j.value) && a.inputValue !== "" ? (n("set-input-date", j.value, !0, !0), j.value = null) : m.value.tabSubmit && a.inputValue === "" && (j.value = null, n("clear", !0));
    }, re = () => {
      O.value = !0, n("focus"), tt().then(() => {
        var f;
        m.value.enabled && m.value.selectOnFocus && ((f = T.value) == null || f.select());
      });
    }, Y = (f) => {
      f.preventDefault(), mt(f, P.value, !0), m.value.enabled && m.value.openMenu && !r.value.input && !a.isMenuOpen ? n("open") : m.value.enabled || n("toggle");
    }, H = () => {
      n("real-blur"), O.value = !1, (!a.isMenuOpen || r.value.enabled && r.value.input) && n("blur"), a.autoApply && m.value.enabled && j.value && !a.isMenuOpen && (n("set-input-date", j.value), n("select-date"), j.value = null);
    }, ne = (f) => {
      mt(f, P.value, !0), n("clear");
    }, L = (f) => {
      if (f.key === "Tab" && se(f), f.key === "Enter" && ie(f), !m.value.enabled) {
        if (f.code === "Tab")
          return;
        f.preventDefault();
      }
    };
    return t({
      focusInput: () => {
        var f;
        (f = T.value) == null || f.focus({ preventScroll: !0 });
      },
      setParsedDate: (f) => {
        j.value = f;
      }
    }), (f, J) => {
      var oe;
      return A(), Q("div", { onClick: Y }, [
        f.$slots.trigger && !f.$slots["dp-input"] && !i(r).enabled ? ue(f.$slots, "trigger", { key: 0 }) : ee("", !0),
        !f.$slots.trigger && (!i(r).enabled || i(r).input) ? (A(), Q("div", Gl, [
          f.$slots["dp-input"] && !f.$slots.trigger && (!i(r).enabled || i(r).enabled && i(r).input) ? ue(f.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            isMenuOpen: e.isMenuOpen,
            onInput: y,
            onEnter: ie,
            onTab: se,
            onClear: ne,
            onBlur: H,
            onKeypress: L,
            onPaste: B,
            openMenu: () => f.$emit("open"),
            closeMenu: () => f.$emit("close"),
            toggleMenu: () => f.$emit("toggle")
          }) : ee("", !0),
          f.$slots["dp-input"] ? ee("", !0) : (A(), Q("input", {
            key: 1,
            id: f.uid ? `dp-input-${f.uid}` : void 0,
            ref_key: "inputRef",
            ref: T,
            "data-test": "dp-input",
            name: f.name,
            class: Me(E.value),
            inputmode: i(m).enabled ? "text" : "none",
            placeholder: f.placeholder,
            disabled: f.disabled,
            readonly: f.readonly,
            required: f.required,
            value: e.inputValue,
            autocomplete: f.autocomplete,
            "aria-label": (oe = i(v)) == null ? void 0 : oe.input,
            "aria-disabled": f.disabled || void 0,
            "aria-invalid": f.state === !1 ? !0 : void 0,
            onInput: y,
            onBlur: H,
            onFocus: re,
            onKeypress: L,
            onKeydown: L,
            onPaste: B
          }, null, 42, Ql)),
          fe("div", {
            onClick: J[2] || (J[2] = (w) => n("toggle"))
          }, [
            f.$slots["input-icon"] && !f.hideInputIcon ? (A(), Q("span", {
              key: 0,
              class: "dp__input_icon",
              onClick: J[0] || (J[0] = (w) => n("toggle"))
            }, [
              ue(f.$slots, "input-icon")
            ])) : ee("", !0),
            !f.$slots["input-icon"] && !f.hideInputIcon && !f.$slots["dp-input"] ? (A(), ke(i(Yt), {
              key: 1,
              class: "dp__input_icon dp__input_icons",
              onClick: J[1] || (J[1] = (w) => n("toggle"))
            })) : ee("", !0)
          ]),
          f.$slots["clear-icon"] && e.inputValue && f.clearable && !f.disabled && !f.readonly ? (A(), Q("span", ql, [
            ue(f.$slots, "clear-icon", { clear: ne })
          ])) : ee("", !0),
          f.clearable && !f.$slots["clear-icon"] && e.inputValue && !f.disabled && !f.readonly ? (A(), ke(i(wn), {
            key: 3,
            class: "dp__clear_icon dp__input_icons",
            "data-test": "clear-icon",
            onClick: J[3] || (J[3] = Ia((w) => ne(w), ["prevent"]))
          })) : ee("", !0)
        ])) : ee("", !0)
      ]);
    };
  }
}), Jl = ["title"], Zl = ["disabled"], xl = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "ActionRow",
  props: {
    menuMount: { type: Boolean, default: !1 },
    calendarWidth: { type: Number, default: 0 },
    ...at
  },
  emits: ["close-picker", "select-date", "select-now", "invalid-select"],
  setup(e, { emit: t }) {
    const l = t, n = e, {
      defaultedActionRow: a,
      defaultedPreviewFormat: m,
      defaultedMultiCalendars: v,
      defaultedTextInput: r,
      defaultedInline: P,
      defaultedRange: C,
      defaultedMultiDates: k,
      getDefaultPattern: g
    } = Pe(n), { isTimeValid: h, isMonthValid: _ } = ht(n), { buildMatrix: j } = yt(), T = te(null), O = te(null), b = te(!1), E = te({}), I = te(null), X = te(null);
    We(() => {
      n.arrowNavigation && j([Ye(T), Ye(O)], "actionRow"), F(), window.addEventListener("resize", F);
    }), la(() => {
      window.removeEventListener("resize", F);
    });
    const F = () => {
      b.value = !1, setTimeout(() => {
        var p, f;
        const L = (p = I.value) == null ? void 0 : p.getBoundingClientRect(), R = (f = X.value) == null ? void 0 : f.getBoundingClientRect();
        L && R && (E.value.maxWidth = `${R.width - L.width - 20}px`), b.value = !0;
      }, 0);
    }, B = Z(() => C.value.enabled && !C.value.partialRange && n.internalModelValue ? n.internalModelValue.length === 2 : !0), U = Z(
      () => !h.value(n.internalModelValue) || !_.value(n.internalModelValue) || !B.value
    ), y = () => {
      const L = m.value;
      return n.timePicker || n.monthPicker, L(Be(n.internalModelValue));
    }, ie = () => {
      const L = n.internalModelValue;
      return v.value.count > 0 ? `${se(L[0])} - ${se(L[1])}` : [se(L[0]), se(L[1])];
    }, se = (L) => On(
      L,
      m.value,
      n.formatLocale,
      r.value.rangeSeparator,
      n.modelAuto,
      g()
    ), re = Z(() => !n.internalModelValue || !n.menuMount ? "" : typeof m.value == "string" ? Array.isArray(n.internalModelValue) ? n.internalModelValue.length === 2 && n.internalModelValue[1] ? ie() : k.value.enabled ? n.internalModelValue.map((L) => `${se(L)}`) : n.modelAuto ? `${se(n.internalModelValue[0])}` : `${se(n.internalModelValue[0])} -` : se(n.internalModelValue) : y()), Y = () => k.value.enabled ? "; " : " - ", H = Z(
      () => Array.isArray(re.value) ? re.value.join(Y()) : re.value
    ), ne = () => {
      h.value(n.internalModelValue) && _.value(n.internalModelValue) && B.value ? l("select-date") : l("invalid-select");
    };
    return (L, R) => (A(), Q("div", {
      ref_key: "actionRowRef",
      ref: X,
      class: "dp__action_row"
    }, [
      L.$slots["action-row"] ? ue(L.$slots, "action-row", Ie(Ne({ key: 0 }, {
        internalModelValue: L.internalModelValue,
        disabled: U.value,
        selectDate: () => L.$emit("select-date"),
        closePicker: () => L.$emit("close-picker")
      }))) : (A(), Q(be, { key: 1 }, [
        i(a).showPreview ? (A(), Q("div", {
          key: 0,
          class: "dp__selection_preview",
          title: H.value,
          style: Xe(E.value)
        }, [
          L.$slots["action-preview"] && b.value ? ue(L.$slots, "action-preview", {
            key: 0,
            value: L.internalModelValue
          }) : ee("", !0),
          !L.$slots["action-preview"] && b.value ? (A(), Q(be, { key: 1 }, [
            dt(He(H.value), 1)
          ], 64)) : ee("", !0)
        ], 12, Jl)) : ee("", !0),
        fe("div", {
          ref_key: "actionBtnContainer",
          ref: I,
          class: "dp__action_buttons",
          "data-dp-element": "action-row"
        }, [
          L.$slots["action-buttons"] ? ue(L.$slots, "action-buttons", {
            key: 0,
            value: L.internalModelValue
          }) : ee("", !0),
          L.$slots["action-buttons"] ? ee("", !0) : (A(), Q(be, { key: 1 }, [
            !i(P).enabled && i(a).showCancel ? (A(), Q("button", {
              key: 0,
              ref_key: "cancelButtonRef",
              ref: T,
              type: "button",
              class: "dp__action_button dp__action_cancel",
              onClick: R[0] || (R[0] = (p) => L.$emit("close-picker")),
              onKeydown: R[1] || (R[1] = (p) => i(je)(p, () => L.$emit("close-picker")))
            }, He(L.cancelText), 545)) : ee("", !0),
            i(a).showNow ? (A(), Q("button", {
              key: 1,
              type: "button",
              class: "dp__action_button dp__action_cancel",
              onClick: R[2] || (R[2] = (p) => L.$emit("select-now")),
              onKeydown: R[3] || (R[3] = (p) => i(je)(p, () => L.$emit("select-now")))
            }, He(L.nowButtonLabel), 33)) : ee("", !0),
            i(a).showSelect ? (A(), Q("button", {
              key: 2,
              ref_key: "selectButtonRef",
              ref: O,
              type: "button",
              class: "dp__action_button dp__action_select",
              disabled: U.value,
              "data-test": "select-button",
              onKeydown: R[4] || (R[4] = (p) => i(je)(p, () => ne())),
              onClick: ne
            }, He(L.selectText), 41, Zl)) : ee("", !0)
          ], 64))
        ], 512)
      ], 64))
    ], 512));
  }
}), er = { class: "dp__selection_grid_header" }, tr = ["aria-selected", "aria-disabled", "data-test", "onClick", "onKeydown", "onMouseover"], ar = ["aria-label"], Qt = /* @__PURE__ */ Ee({
  __name: "SelectionOverlay",
  props: {
    items: {},
    type: {},
    isLast: { type: Boolean },
    arrowNavigation: { type: Boolean },
    skipButtonRef: { type: Boolean },
    headerRefs: {},
    hideNavigation: {},
    escClose: { type: Boolean },
    useRelative: { type: Boolean },
    height: {},
    textInput: { type: [Boolean, Object] },
    config: {},
    noOverlayFocus: { type: Boolean },
    focusValue: {},
    menuWrapRef: {},
    ariaLabels: {}
  },
  emits: ["selected", "toggle", "reset-flow", "hover-value"],
  setup(e, { expose: t, emit: l }) {
    const { setSelectionGrid: n, buildMultiLevelMatrix: a, setMonthPicker: m } = yt(), v = l, r = e, { defaultedAriaLabels: P, defaultedTextInput: C, defaultedConfig: k } = Pe(
      r
    ), { hideNavigationButtons: g } = sa(), h = te(!1), _ = te(null), j = te(null), T = te([]), O = te(), b = te(null), E = te(0), I = te(null);
    Un(() => {
      _.value = null;
    }), We(() => {
      tt().then(() => re()), r.noOverlayFocus || F(), X(!0);
    }), la(() => X(!1));
    const X = (M) => {
      var z;
      r.arrowNavigation && ((z = r.headerRefs) != null && z.length ? m(M) : n(M));
    }, F = () => {
      var z;
      const M = Ye(j);
      M && (C.value.enabled || (_.value ? (z = _.value) == null || z.focus({ preventScroll: !0 }) : M.focus({ preventScroll: !0 })), h.value = M.clientHeight < M.scrollHeight);
    }, B = Z(
      () => ({
        dp__overlay: !0,
        "dp--overlay-absolute": !r.useRelative,
        "dp--overlay-relative": r.useRelative
      })
    ), U = Z(
      () => r.useRelative ? { height: `${r.height}px`, width: "260px" } : void 0
    ), y = Z(() => ({
      dp__overlay_col: !0
    })), ie = Z(
      () => ({
        dp__btn: !0,
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: h.value,
        dp__button_bottom: r.isLast
      })
    ), se = Z(() => {
      var M, z;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((M = r.items) == null ? void 0 : M.length) <= 6,
        dp__container_block: ((z = r.items) == null ? void 0 : z.length) > 6
      };
    });
    rt(
      () => r.items,
      () => re(!1),
      { deep: !0 }
    );
    const re = (M = !0) => {
      tt().then(() => {
        const z = Ye(_), d = Ye(j), S = Ye(b), $ = Ye(I), de = S ? S.getBoundingClientRect().height : 0;
        d && (d.getBoundingClientRect().height ? E.value = d.getBoundingClientRect().height - de : E.value = k.value.modeHeight - de), z && $ && M && ($.scrollTop = z.offsetTop - $.offsetTop - (E.value / 2 - z.getBoundingClientRect().height) - de);
      });
    }, Y = (M) => {
      M.disabled || v("selected", M.value);
    }, H = () => {
      v("toggle"), v("reset-flow");
    }, ne = () => {
      r.escClose && H();
    }, L = (M, z, d, S) => {
      M && ((z.active || z.value === r.focusValue) && (_.value = M), r.arrowNavigation && (Array.isArray(T.value[d]) ? T.value[d][S] = M : T.value[d] = [M], R()));
    }, R = () => {
      var z, d;
      const M = (z = r.headerRefs) != null && z.length ? [r.headerRefs].concat(T.value) : T.value.concat([r.skipButtonRef ? [] : [b.value]]);
      a(Be(M), (d = r.headerRefs) != null && d.length ? "monthPicker" : "selectionGrid");
    }, p = (M) => {
      r.arrowNavigation || mt(M, k.value, !0);
    }, f = (M) => {
      O.value = M, v("hover-value", M);
    }, J = () => {
      if (H(), !r.isLast) {
        const M = pl(r.menuWrapRef ?? null, "action-row");
        if (M) {
          const z = An(M);
          z == null || z.focus();
        }
      }
    }, oe = (M) => {
      switch (M.key) {
        case Re.esc:
          return ne();
        case Re.arrowLeft:
          return p(M);
        case Re.arrowRight:
          return p(M);
        case Re.arrowUp:
          return p(M);
        case Re.arrowDown:
          return p(M);
        default:
          return;
      }
    }, w = (M) => {
      if (M.key === Re.enter)
        return H();
      if (M.key === Re.tab)
        return J();
    };
    return t({ focusGrid: F }), (M, z) => {
      var d;
      return A(), Q("div", {
        ref_key: "gridWrapRef",
        ref: j,
        class: Me(B.value),
        style: Xe(U.value),
        role: "dialog",
        tabindex: "0",
        onKeydown: oe
      }, [
        fe("div", {
          ref_key: "containerRef",
          ref: I,
          class: Me(se.value),
          role: "grid",
          style: Xe({ "--dp-overlay-height": `${E.value}px` })
        }, [
          fe("div", er, [
            ue(M.$slots, "header")
          ]),
          M.$slots.overlay ? ue(M.$slots, "overlay", { key: 0 }) : (A(!0), Q(be, { key: 1 }, Se(M.items, (S, $) => (A(), Q("div", {
            key: $,
            class: Me(["dp__overlay_row", { dp__flex_row: M.items.length >= 3 }]),
            role: "row"
          }, [
            (A(!0), Q(be, null, Se(S, (de, c) => (A(), Q("div", {
              key: de.value,
              ref_for: !0,
              ref: (ae) => L(ae, de, $, c),
              role: "gridcell",
              class: Me(y.value),
              "aria-selected": de.active || void 0,
              "aria-disabled": de.disabled || void 0,
              tabindex: "0",
              "data-test": de.text,
              onClick: (ae) => Y(de),
              onKeydown: (ae) => i(je)(ae, () => Y(de), !0),
              onMouseover: (ae) => f(de.value)
            }, [
              fe("div", {
                class: Me(de.className)
              }, [
                M.$slots.item ? ue(M.$slots, "item", {
                  key: 0,
                  item: de
                }) : ee("", !0),
                M.$slots.item ? ee("", !0) : (A(), Q(be, { key: 1 }, [
                  dt(He(de.text), 1)
                ], 64))
              ], 2)
            ], 42, tr))), 128))
          ], 2))), 128))
        ], 6),
        M.$slots["button-icon"] ? ea((A(), Q("button", {
          key: 0,
          ref_key: "toggleButton",
          ref: b,
          type: "button",
          "aria-label": (d = i(P)) == null ? void 0 : d.toggleOverlay,
          class: Me(ie.value),
          tabindex: "0",
          onClick: H,
          onKeydown: w
        }, [
          ue(M.$slots, "button-icon")
        ], 42, ar)), [
          [ta, !i(g)(M.hideNavigation, M.type)]
        ]) : ee("", !0)
      ], 38);
    };
  }
}), ia = /* @__PURE__ */ Ee({
  __name: "InstanceWrap",
  props: {
    multiCalendars: {},
    stretch: { type: Boolean },
    collapse: { type: Boolean }
  },
  setup(e) {
    const t = e, l = Z(
      () => t.multiCalendars > 0 ? [...Array(t.multiCalendars).keys()] : [0]
    ), n = Z(() => ({
      dp__instance_calendar: t.multiCalendars > 0
    }));
    return (a, m) => (A(), Q("div", {
      class: Me({
        dp__menu_inner: !a.stretch,
        "dp--menu--inner-stretched": a.stretch,
        dp__flex_display: a.multiCalendars > 0,
        "dp--flex-display-collapsed": a.collapse
      })
    }, [
      (A(!0), Q(be, null, Se(l.value, (v, r) => (A(), Q("div", {
        key: v,
        class: Me(n.value)
      }, [
        ue(a.$slots, "default", {
          instance: v,
          index: r
        })
      ], 2))), 128))
    ], 2));
  }
}), nr = ["aria-label", "aria-disabled"], Ht = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "ArrowBtn",
  props: {
    ariaLabel: {},
    disabled: { type: Boolean }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: t }) {
    const l = t, n = te(null);
    return We(() => l("set-ref", n)), (a, m) => (A(), Q("button", {
      ref_key: "elRef",
      ref: n,
      type: "button",
      class: "dp__btn dp--arrow-btn-nav",
      tabindex: "0",
      "aria-label": a.ariaLabel,
      "aria-disabled": a.disabled || void 0,
      onClick: m[0] || (m[0] = (v) => a.$emit("activate")),
      onKeydown: m[1] || (m[1] = (v) => i(je)(v, () => a.$emit("activate"), !0))
    }, [
      fe("span", {
        class: Me(["dp__inner_nav", { dp__inner_nav_disabled: a.disabled }])
      }, [
        ue(a.$slots, "default")
      ], 2)
    ], 40, nr));
  }
}), lr = { class: "dp--year-mode-picker" }, rr = ["aria-label", "data-test"], In = /* @__PURE__ */ Ee({
  __name: "YearModePicker",
  props: {
    ...at,
    showYearPicker: { type: Boolean, default: !1 },
    items: { type: Array, default: () => [] },
    instance: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    isDisabled: { type: Function, default: () => !1 }
  },
  emits: ["toggle-year-picker", "year-select", "handle-year"],
  setup(e, { emit: t }) {
    const l = t, n = e, { showRightIcon: a, showLeftIcon: m } = sa(), { defaultedConfig: v, defaultedMultiCalendars: r, defaultedAriaLabels: P, defaultedTransitions: C } = Pe(n), { showTransition: k, transitionName: g } = Kt(C), h = (T = !1, O) => {
      l("toggle-year-picker", { flow: T, show: O });
    }, _ = (T) => {
      l("year-select", T);
    }, j = (T = !1) => {
      l("handle-year", T);
    };
    return (T, O) => {
      var b, E, I;
      return A(), Q("div", lr, [
        i(m)(i(r), e.instance) ? (A(), ke(Ht, {
          key: 0,
          ref: "mpPrevIconRef",
          "aria-label": (b = i(P)) == null ? void 0 : b.prevYear,
          disabled: e.isDisabled(!1),
          onActivate: O[0] || (O[0] = (X) => j(!1))
        }, {
          default: ge(() => [
            T.$slots["arrow-left"] ? ue(T.$slots, "arrow-left", { key: 0 }) : ee("", !0),
            T.$slots["arrow-left"] ? ee("", !0) : (A(), ke(i(La), { key: 1 }))
          ]),
          _: 3
        }, 8, ["aria-label", "disabled"])) : ee("", !0),
        fe("button", {
          ref: "mpYearButtonRef",
          class: "dp__btn dp--year-select",
          type: "button",
          "aria-label": (E = i(P)) == null ? void 0 : E.openYearsOverlay,
          "data-test": `year-mode-btn-${e.instance}`,
          onClick: O[1] || (O[1] = () => h(!1)),
          onKeydown: O[2] || (O[2] = jn(() => h(!1), ["enter"]))
        }, [
          T.$slots.year ? ue(T.$slots, "year", {
            key: 0,
            year: e.year
          }) : ee("", !0),
          T.$slots.year ? ee("", !0) : (A(), Q(be, { key: 1 }, [
            dt(He(e.year), 1)
          ], 64))
        ], 40, rr),
        i(a)(i(r), e.instance) ? (A(), ke(Ht, {
          key: 1,
          ref: "mpNextIconRef",
          "aria-label": (I = i(P)) == null ? void 0 : I.nextYear,
          disabled: e.isDisabled(!0),
          onActivate: O[3] || (O[3] = (X) => j(!0))
        }, {
          default: ge(() => [
            T.$slots["arrow-right"] ? ue(T.$slots, "arrow-right", { key: 0 }) : ee("", !0),
            T.$slots["arrow-right"] ? ee("", !0) : (A(), ke(i(Ha), { key: 1 }))
          ]),
          _: 3
        }, 8, ["aria-label", "disabled"])) : ee("", !0),
        Je(Bt, {
          name: i(g)(e.showYearPicker),
          css: i(k)
        }, {
          default: ge(() => [
            e.showYearPicker ? (A(), ke(Qt, {
              key: 0,
              items: e.items,
              "text-input": T.textInput,
              "esc-close": T.escClose,
              config: T.config,
              "is-last": T.autoApply && !i(v).keepActionRow,
              "hide-navigation": T.hideNavigation,
              "aria-labels": T.ariaLabels,
              type: "year",
              onToggle: h,
              onSelected: O[4] || (O[4] = (X) => _(X))
            }, Ve({
              "button-icon": ge(() => [
                T.$slots["calendar-icon"] ? ue(T.$slots, "calendar-icon", { key: 0 }) : ee("", !0),
                T.$slots["calendar-icon"] ? ee("", !0) : (A(), ke(i(Yt), { key: 1 }))
              ]),
              _: 2
            }, [
              T.$slots["year-overlay-value"] ? {
                name: "item",
                fn: ge(({ item: X }) => [
                  ue(T.$slots, "year-overlay-value", {
                    text: X.text,
                    value: X.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "text-input", "esc-close", "config", "is-last", "hide-navigation", "aria-labels"])) : ee("", !0)
          ]),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Qa = (e, t, l) => {
  if (t.value && Array.isArray(t.value))
    if (t.value.some((n) => he(e, n))) {
      const n = t.value.filter((a) => !he(a, e));
      t.value = n.length ? n : null;
    } else
      (l && +l > t.value.length || !l) && t.value.push(e);
  else
    t.value = [e];
}, qa = (e, t, l) => {
  let n = e.value ? e.value.slice() : [];
  return n.length === 2 && n[1] !== null && (n = []), n.length ? Ce(t, n[0]) ? (n.unshift(t), l("range-start", n[0]), l("range-start", n[1])) : (n[1] = t, l("range-end", t)) : (n = [t], l("range-start", t)), n;
}, da = (e, t, l, n) => {
  e && (e[0] && e[1] && l && t("auto-apply"), e[0] && !e[1] && n && l && t("auto-apply"));
}, Nn = (e) => {
  Array.isArray(e.value) && e.value.length <= 2 && e.range ? e.modelValue.value = e.value.map((t) => st(W(t), e.timezone)) : Array.isArray(e.value) || (e.modelValue.value = st(W(e.value), e.timezone));
}, En = (e, t, l, n) => Array.isArray(t.value) && (t.value.length === 2 || t.value.length === 1 && n.value.partialRange) ? n.value.fixedStart && (Oe(e, t.value[0]) || he(e, t.value[0])) ? [t.value[0], e] : n.value.fixedEnd && (Ce(e, t.value[1]) || he(e, t.value[1])) ? [e, t.value[1]] : (l("invalid-fixed-range", e), t.value) : [], Fn = ({
  multiCalendars: e,
  highlight: t,
  propDates: l,
  calendars: n,
  modelValue: a,
  props: m,
  filters: v,
  year: r,
  month: P,
  emit: C
}) => {
  const k = Z(() => Ua(m.yearRange, m.locale, m.reverseYears)), g = te([!1]), h = Z(() => (B, U) => {
    const y = Ae(et(/* @__PURE__ */ new Date()), {
      month: P.value(B),
      year: r.value(B)
    }), ie = U ? hn(y) : bn(y);
    return _n(
      ie,
      l.value.maxDate,
      l.value.minDate,
      m.preventMinMaxNavigation,
      U
    );
  }), _ = () => {
    for (let B = 0; B < e.value.count; B++)
      if (B === 0)
        n.value[B] = n.value[0];
      else {
        const U = Ae(W(), n.value[B - 1]);
        n.value[B] = { month: ye(U), year: me(gn(U, 1)) };
      }
  }, j = (B) => {
    if (!B)
      return _();
    const U = Ae(W(), n.value[B]);
    return n.value[0].year = me(yn(U, e.value.count - 1)), _();
  }, T = (B) => m.focusStartDate ? B[0] : B[1] ? B[1] : B[0], O = () => {
    if (a.value) {
      const B = Array.isArray(a.value) ? T(a.value) : a.value;
      n.value[0] = { month: ye(B), year: me(B) };
    }
  };
  We(() => {
    O(), e.value.count && _();
  });
  const b = (B, U) => {
    n.value[U].year = B, C("update-month-year", { instance: U, year: B, month: n.value[U].month }), e.value.count && !e.value.solo && j(U);
  }, E = Z(() => (B) => _t(k.value, (U) => {
    var re;
    const y = r.value(B) === U.value, ie = Ut(
      U.value,
      Ot(l.value.minDate),
      Ot(l.value.maxDate)
    ) || ((re = v.value.years) == null ? void 0 : re.includes(r.value(B))), se = Ga(t.value, U.value);
    return { active: y, disabled: ie, highlighted: se };
  })), I = (B, U) => {
    b(B, U), F(U);
  }, X = (B, U = !1) => {
    if (!h.value(B, U)) {
      const y = U ? r.value(B) + 1 : r.value(B) - 1;
      b(y, B);
    }
  }, F = (B, U = !1, y) => {
    U || C("reset-flow"), y !== void 0 ? g.value[B] = y : g.value[B] = !g.value[B], g.value[B] ? C("overlay-toggle", { open: !0, overlay: Le.year }) : (C("overlay-closed"), C("overlay-toggle", { open: !1, overlay: Le.year }));
  };
  return {
    isDisabled: h,
    groupedYears: E,
    showYearPicker: g,
    selectYear: b,
    toggleYearPicker: F,
    handleYearSelect: I,
    handleYear: X
  };
}, or = (e, t) => {
  const {
    defaultedMultiCalendars: l,
    defaultedAriaLabels: n,
    defaultedTransitions: a,
    defaultedConfig: m,
    defaultedRange: v,
    defaultedHighlight: r,
    propDates: P,
    defaultedTz: C,
    defaultedFilters: k,
    defaultedMultiDates: g
  } = Pe(e), { modelValue: h, year: _, month: j, calendars: T } = Gt(e, t), O = Z(() => Dn(e.formatLocale, e.locale, e.monthNameFormat)), b = te(null), { checkMinMaxRange: E } = ht(e), {
    selectYear: I,
    groupedYears: X,
    showYearPicker: F,
    toggleYearPicker: B,
    handleYearSelect: U,
    handleYear: y,
    isDisabled: ie
  } = Fn({
    modelValue: h,
    multiCalendars: l,
    highlight: r,
    calendars: T,
    year: _,
    propDates: P,
    month: j,
    filters: k,
    props: e,
    emit: t
  });
  We(() => {
    e.startDate && (h.value && e.focusStartDate || !h.value) && I(me(W(e.startDate)), 0);
  });
  const se = (S) => S ? { month: ye(S), year: me(S) } : { month: null, year: null }, re = () => h.value ? Array.isArray(h.value) ? h.value.map((S) => se(S)) : se(h.value) : se(), Y = (S, $) => {
    const de = T.value[S], c = re();
    return Array.isArray(c) ? c.some((ae) => ae.year === (de == null ? void 0 : de.year) && ae.month === $) : (de == null ? void 0 : de.year) === c.year && $ === c.month;
  }, H = (S, $, de) => {
    var ae, V;
    const c = re();
    return Array.isArray(c) ? _.value($) === ((ae = c[de]) == null ? void 0 : ae.year) && S === ((V = c[de]) == null ? void 0 : V.month) : !1;
  }, ne = (S, $) => {
    if (v.value.enabled) {
      const de = re();
      if (Array.isArray(h.value) && Array.isArray(de)) {
        const c = H(S, $, 0) || H(S, $, 1), ae = it(et(W()), S, _.value($));
        return oa(h.value, b.value, ae) && !c;
      }
      return !1;
    }
    return !1;
  }, L = Z(() => (S) => _t(O.value, ($) => {
    var pe;
    const de = Y(S, $.value), c = Ut(
      $.value,
      Sn(_.value(S), P.value.minDate),
      Rn(_.value(S), P.value.maxDate)
    ) || Dl(P.value.disabledDates, _.value(S)).includes($.value) || ((pe = k.value.months) == null ? void 0 : pe.includes($.value)), ae = ne($.value, S), V = Bn(r.value, $.value, _.value(S));
    return { active: de, disabled: c, isBetween: ae, highlighted: V };
  })), R = (S, $) => it(et(W()), S, _.value($)), p = (S, $) => {
    const de = h.value ? h.value : et(/* @__PURE__ */ new Date());
    h.value = it(de, S, _.value($)), t("auto-apply"), t("update-flow-step");
  }, f = (S, $) => {
    const de = R(S, $);
    v.value.fixedEnd || v.value.fixedStart ? h.value = En(de, h, t, v) : h.value ? E(de, h.value) && (h.value = qa(h, R(S, $), t)) : h.value = [R(S, $)], tt().then(() => {
      da(h.value, t, e.autoApply, e.modelAuto);
    });
  }, J = (S, $) => {
    Qa(R(S, $), h, g.value.limit), t("auto-apply", !0);
  }, oe = (S, $) => (T.value[$].month = S, M($, T.value[$].year, S), g.value.enabled ? J(S, $) : v.value.enabled ? f(S, $) : p(S, $)), w = (S, $) => {
    I(S, $), M($, S, null);
  }, M = (S, $, de) => {
    let c = de;
    if (!c && c !== 0) {
      const ae = re();
      c = Array.isArray(ae) ? ae[S].month : ae.month;
    }
    t("update-month-year", { instance: S, year: $, month: c });
  };
  return {
    groupedMonths: L,
    groupedYears: X,
    year: _,
    isDisabled: ie,
    defaultedMultiCalendars: l,
    defaultedAriaLabels: n,
    defaultedTransitions: a,
    defaultedConfig: m,
    showYearPicker: F,
    modelValue: h,
    presetDate: (S, $) => {
      Nn({
        value: S,
        modelValue: h,
        range: v.value.enabled,
        timezone: $ ? void 0 : C.value.timezone
      }), t("auto-apply");
    },
    setHoverDate: (S, $) => {
      b.value = R(S, $);
    },
    selectMonth: oe,
    selectYear: w,
    toggleYearPicker: B,
    handleYearSelect: U,
    handleYear: y,
    getModelMonthYear: re
  };
}, sr = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "MonthPicker",
  props: {
    ...at
  },
  emits: [
    "update:internal-model-value",
    "overlay-closed",
    "reset-flow",
    "range-start",
    "range-end",
    "auto-apply",
    "update-month-year",
    "update-flow-step",
    "mount",
    "invalid-fixed-range",
    "overlay-toggle"
  ],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = At(), m = Qe(a, "yearMode"), v = e;
    We(() => {
      v.shadow || n("mount", null);
    });
    const {
      groupedMonths: r,
      groupedYears: P,
      year: C,
      isDisabled: k,
      defaultedMultiCalendars: g,
      defaultedConfig: h,
      showYearPicker: _,
      modelValue: j,
      presetDate: T,
      setHoverDate: O,
      selectMonth: b,
      selectYear: E,
      toggleYearPicker: I,
      handleYearSelect: X,
      handleYear: F,
      getModelMonthYear: B
    } = or(v, n);
    return t({ getSidebarProps: () => ({
      modelValue: j,
      year: C,
      getModelMonthYear: B,
      selectMonth: b,
      selectYear: E,
      handleYear: F
    }), presetDate: T, toggleYearPicker: (y) => I(0, y) }), (y, ie) => (A(), ke(ia, {
      "multi-calendars": i(g).count,
      collapse: y.collapse,
      stretch: ""
    }, {
      default: ge(({ instance: se }) => [
        y.$slots["top-extra"] ? ue(y.$slots, "top-extra", {
          key: 0,
          value: y.internalModelValue
        }) : ee("", !0),
        y.$slots["month-year"] ? ue(y.$slots, "month-year", Ie(Ne({ key: 1 }, {
          year: i(C),
          months: i(r)(se),
          years: i(P)(se),
          selectMonth: i(b),
          selectYear: i(E),
          instance: se
        }))) : (A(), ke(Qt, {
          key: 2,
          items: i(r)(se),
          "arrow-navigation": y.arrowNavigation,
          "is-last": y.autoApply && !i(h).keepActionRow,
          "esc-close": y.escClose,
          height: i(h).modeHeight,
          config: y.config,
          "no-overlay-focus": !!(y.noOverlayFocus || y.textInput),
          "use-relative": "",
          type: "month",
          onSelected: (re) => i(b)(re, se),
          onHoverValue: (re) => i(O)(re, se)
        }, Ve({
          header: ge(() => [
            Je(In, Ne(y.$props, {
              items: i(P)(se),
              instance: se,
              "show-year-picker": i(_)[se],
              year: i(C)(se),
              "is-disabled": (re) => i(k)(se, re),
              onHandleYear: (re) => i(F)(se, re),
              onYearSelect: (re) => i(X)(re, se),
              onToggleYearPicker: (re) => i(I)(se, re == null ? void 0 : re.flow, re == null ? void 0 : re.show)
            }), Ve({ _: 2 }, [
              Se(i(m), (re, Y) => ({
                name: re,
                fn: ge((H) => [
                  ue(y.$slots, re, Ie(Ue(H)))
                ])
              }))
            ]), 1040, ["items", "instance", "show-year-picker", "year", "is-disabled", "onHandleYear", "onYearSelect", "onToggleYearPicker"])
          ]),
          _: 2
        }, [
          y.$slots["month-overlay-value"] ? {
            name: "item",
            fn: ge(({ item: re }) => [
              ue(y.$slots, "month-overlay-value", {
                text: re.text,
                value: re.value
              })
            ]),
            key: "0"
          } : void 0
        ]), 1032, ["items", "arrow-navigation", "is-last", "esc-close", "height", "config", "no-overlay-focus", "onSelected", "onHoverValue"]))
      ]),
      _: 3
    }, 8, ["multi-calendars", "collapse"]));
  }
}), ur = (e, t) => {
  const { modelValue: l } = Gt(e, t), n = te(null), { defaultedHighlight: a, defaultedMultiDates: m, defaultedFilters: v, defaultedRange: r, propDates: P } = Pe(e), C = te();
  We(() => {
    e.startDate && (l.value && e.focusStartDate || !l.value) && (C.value = me(W(e.startDate)));
  });
  const k = (O) => Array.isArray(l.value) ? l.value.some((b) => me(b) === O) : l.value ? me(l.value) === O : !1, g = (O) => r.value.enabled && Array.isArray(l.value) ? oa(l.value, n.value, _(O)) : !1, h = Z(() => _t(Ua(e.yearRange, e.locale, e.reverseYears), (O) => {
    const b = k(O.value), E = Ut(
      O.value,
      Ot(P.value.minDate),
      Ot(P.value.maxDate)
    ) || v.value.years.includes(O.value), I = g(O.value) && !b, X = Ga(a.value, O.value);
    return { active: b, disabled: E, isBetween: I, highlighted: X };
  })), _ = (O) => lt(et(/* @__PURE__ */ new Date()), O);
  return {
    groupedYears: h,
    modelValue: l,
    focusYear: C,
    setHoverValue: (O) => {
      n.value = lt(et(/* @__PURE__ */ new Date()), O);
    },
    selectYear: (O) => {
      var b;
      if (t("update-month-year", { instance: 0, year: O }), m.value.enabled)
        return l.value ? Array.isArray(l.value) && (((b = l.value) == null ? void 0 : b.map((I) => me(I))).includes(O) ? l.value = l.value.filter((I) => me(I) !== O) : l.value.push(lt(qe(W()), O))) : l.value = [lt(qe(W()), O)], t("auto-apply", !0);
      r.value.enabled ? (l.value = qa(l, _(O), t), tt().then(() => {
        da(l.value, t, e.autoApply, e.modelAuto);
      })) : (l.value = _(O), t("auto-apply"));
    }
  };
}, ir = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "YearPicker",
  props: {
    ...at
  },
  emits: [
    "update:internal-model-value",
    "reset-flow",
    "range-start",
    "range-end",
    "auto-apply",
    "update-month-year"
  ],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = e, { groupedYears: m, modelValue: v, focusYear: r, selectYear: P, setHoverValue: C } = ur(a, n), { defaultedConfig: k } = Pe(a);
    return t({ getSidebarProps: () => ({
      modelValue: v,
      selectYear: P
    }) }), (h, _) => (A(), Q("div", null, [
      h.$slots["top-extra"] ? ue(h.$slots, "top-extra", {
        key: 0,
        value: h.internalModelValue
      }) : ee("", !0),
      h.$slots["month-year"] ? ue(h.$slots, "month-year", Ie(Ne({ key: 1 }, {
        years: i(m),
        selectYear: i(P)
      }))) : (A(), ke(Qt, {
        key: 2,
        items: i(m),
        "is-last": h.autoApply && !i(k).keepActionRow,
        height: i(k).modeHeight,
        config: h.config,
        "no-overlay-focus": !!(h.noOverlayFocus || h.textInput),
        "focus-value": i(r),
        type: "year",
        "use-relative": "",
        onSelected: i(P),
        onHoverValue: i(C)
      }, Ve({ _: 2 }, [
        h.$slots["year-overlay-value"] ? {
          name: "item",
          fn: ge(({ item: j }) => [
            ue(h.$slots, "year-overlay-value", {
              text: j.text,
              value: j.value
            })
          ]),
          key: "0"
        } : void 0
      ]), 1032, ["items", "is-last", "height", "config", "no-overlay-focus", "focus-value", "onSelected", "onHoverValue"]))
    ]));
  }
}), dr = {
  key: 0,
  class: "dp__time_input"
}, cr = ["data-test", "aria-label", "onKeydown", "onClick", "onMousedown"], fr = /* @__PURE__ */ fe("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_l" }, null, -1), vr = /* @__PURE__ */ fe("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_r" }, null, -1), mr = ["aria-label", "disabled", "data-test", "onKeydown", "onClick"], pr = ["data-test", "aria-label", "onKeydown", "onClick", "onMousedown"], gr = /* @__PURE__ */ fe("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_l" }, null, -1), yr = /* @__PURE__ */ fe("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_r" }, null, -1), hr = { key: 0 }, br = ["aria-label"], kr = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    disabledTimesConfig: { type: Function, default: null },
    validateTime: { type: Function, default: () => !1 },
    ...at
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed",
    "overlay-opened",
    "am-pm-change"
  ],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = e, { setTimePickerElements: m, setTimePickerBackRef: v } = yt(), { defaultedAriaLabels: r, defaultedTransitions: P, defaultedFilters: C, defaultedConfig: k, defaultedRange: g } = Pe(a), { transitionName: h, showTransition: _ } = Kt(P), j = jt({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), T = te("AM"), O = te(null), b = te([]), E = te();
    We(() => {
      n("mounted");
    });
    const I = (s) => Ae(/* @__PURE__ */ new Date(), {
      hours: s.hours,
      minutes: s.minutes,
      seconds: a.enableSeconds ? s.seconds : 0,
      milliseconds: 0
    }), X = Z(
      () => (s) => R(s, a[s]) || B(s, a[s])
    ), F = Z(() => ({ hours: a.hours, minutes: a.minutes, seconds: a.seconds })), B = (s, N) => g.value.enabled && !g.value.disableTimeRangeValidation ? !a.validateTime(s, N) : !1, U = (s, N) => {
      if (g.value.enabled && !g.value.disableTimeRangeValidation) {
        const x = N ? +a[`${s}Increment`] : -+a[`${s}Increment`], q = a[s] + x;
        return !a.validateTime(s, q);
      }
      return !1;
    }, y = Z(() => (s) => !w(+a[s] + +a[`${s}Increment`], s) || U(s, !0)), ie = Z(() => (s) => !w(+a[s] - +a[`${s}Increment`], s) || U(s, !1)), se = (s, N) => kn(Ae(W(), s), N), re = (s, N) => el(Ae(W(), s), N), Y = Z(
      () => ({
        dp__time_col: !0,
        dp__time_col_block: !a.timePickerInline,
        dp__time_col_reg_block: !a.enableSeconds && a.is24 && !a.timePickerInline,
        dp__time_col_reg_inline: !a.enableSeconds && a.is24 && a.timePickerInline,
        dp__time_col_reg_with_button: !a.enableSeconds && !a.is24,
        dp__time_col_sec: a.enableSeconds && a.is24,
        dp__time_col_sec_with_button: a.enableSeconds && !a.is24
      })
    ), H = Z(() => {
      const s = [{ type: "hours" }];
      return a.enableMinutes && s.push({ type: "", separator: !0 }, {
        type: "minutes"
      }), a.enableSeconds && s.push({ type: "", separator: !0 }, {
        type: "seconds"
      }), s;
    }), ne = Z(() => H.value.filter((s) => !s.separator)), L = Z(() => (s) => {
      if (s === "hours") {
        const N = de(+a.hours);
        return { text: N < 10 ? `0${N}` : `${N}`, value: N };
      }
      return { text: a[s] < 10 ? `0${a[s]}` : `${a[s]}`, value: a[s] };
    }), R = (s, N) => {
      var q;
      if (!a.disabledTimesConfig)
        return !1;
      const x = a.disabledTimesConfig(a.order, s === "hours" ? N : void 0);
      return x[s] ? !!((q = x[s]) != null && q.includes(N)) : !0;
    }, p = (s, N) => N !== "hours" || T.value === "AM" ? s : s + 12, f = (s) => {
      const N = a.is24 ? 24 : 12, x = s === "hours" ? N : 60, q = +a[`${s}GridIncrement`], u = s === "hours" && !a.is24 ? q : 0, K = [];
      for (let ce = u; ce < x; ce += q)
        K.push({ value: a.is24 ? ce : p(ce, s), text: ce < 10 ? `0${ce}` : `${ce}` });
      return s === "hours" && !a.is24 && K.unshift({ value: T.value === "PM" ? 12 : 0, text: "12" }), _t(K, (ce) => ({ active: !1, disabled: C.value.times[s].includes(ce.value) || !w(ce.value, s) || R(s, ce.value) || B(s, ce.value) }));
    }, J = (s) => s >= 0 ? s : 59, oe = (s) => s >= 0 ? s : 23, w = (s, N) => {
      const x = a.minTime ? I(Ma(a.minTime)) : null, q = a.maxTime ? I(Ma(a.maxTime)) : null, u = I(
        Ma(
          F.value,
          N,
          N === "minutes" || N === "seconds" ? J(s) : oe(s)
        )
      );
      return x && q ? (zt(u, q) || Rt(u, q)) && (Pt(u, x) || Rt(u, x)) : x ? Pt(u, x) || Rt(u, x) : q ? zt(u, q) || Rt(u, q) : !0;
    }, M = (s) => a[`no${s[0].toUpperCase() + s.slice(1)}Overlay`], z = (s) => {
      M(s) || (j[s] = !j[s], j[s] ? n("overlay-opened", s) : n("overlay-closed", s));
    }, d = (s) => s === "hours" ? ct : s === "minutes" ? gt : Ct, S = () => {
      E.value && clearTimeout(E.value);
    }, $ = (s, N = !0, x) => {
      const q = N ? se : re, u = N ? +a[`${s}Increment`] : -+a[`${s}Increment`];
      w(+a[s] + u, s) && n(
        `update:${s}`,
        d(s)(q({ [s]: +a[s] }, { [s]: +a[`${s}Increment`] }))
      ), !(x != null && x.keyboard) && k.value.timeArrowHoldThreshold && (E.value = setTimeout(() => {
        $(s, N);
      }, k.value.timeArrowHoldThreshold));
    }, de = (s) => a.is24 ? s : (s >= 12 ? T.value = "PM" : T.value = "AM", dl(s)), c = () => {
      T.value === "PM" ? (T.value = "AM", n("update:hours", a.hours - 12)) : (T.value = "PM", n("update:hours", a.hours + 12)), n("am-pm-change", T.value);
    }, ae = (s) => {
      j[s] = !0;
    }, V = (s, N, x) => {
      if (s && a.arrowNavigation) {
        Array.isArray(b.value[N]) ? b.value[N][x] = s : b.value[N] = [s];
        const q = b.value.reduce(
          (u, K) => K.map((ce, $e) => [...u[$e] || [], K[$e]]),
          []
        );
        v(a.closeTimePickerBtn), O.value && (q[1] = q[1].concat(O.value)), m(q, a.order);
      }
    }, pe = (s, N) => (z(s), n(`update:${s}`, N));
    return t({ openChildCmp: ae }), (s, N) => {
      var x;
      return s.disabled ? ee("", !0) : (A(), Q("div", dr, [
        (A(!0), Q(be, null, Se(H.value, (q, u) => {
          var K, ce, $e;
          return A(), Q("div", {
            key: u,
            class: Me(Y.value)
          }, [
            q.separator ? (A(), Q(be, { key: 0 }, [
              dt(" : ")
            ], 64)) : (A(), Q(be, { key: 1 }, [
              fe("button", {
                ref_for: !0,
                ref: (we) => V(we, u, 0),
                type: "button",
                class: Me({
                  dp__btn: !0,
                  dp__inc_dec_button: !s.timePickerInline,
                  dp__inc_dec_button_inline: s.timePickerInline,
                  dp__tp_inline_btn_top: s.timePickerInline,
                  dp__inc_dec_button_disabled: y.value(q.type)
                }),
                "data-test": `${q.type}-time-inc-btn-${a.order}`,
                "aria-label": (K = i(r)) == null ? void 0 : K.incrementValue(q.type),
                tabindex: "0",
                onKeydown: (we) => i(je)(we, () => $(q.type, !0, { keyboard: !0 }), !0),
                onClick: (we) => i(k).timeArrowHoldThreshold ? void 0 : $(q.type, !0),
                onMousedown: (we) => i(k).timeArrowHoldThreshold ? $(q.type, !0) : void 0,
                onMouseup: S
              }, [
                a.timePickerInline ? (A(), Q(be, { key: 1 }, [
                  fr,
                  vr
                ], 64)) : (A(), Q(be, { key: 0 }, [
                  s.$slots["arrow-up"] ? ue(s.$slots, "arrow-up", { key: 0 }) : ee("", !0),
                  s.$slots["arrow-up"] ? ee("", !0) : (A(), ke(i(Wa), { key: 1 }))
                ], 64))
              ], 42, cr),
              fe("button", {
                ref_for: !0,
                ref: (we) => V(we, u, 1),
                type: "button",
                "aria-label": (ce = i(r)) == null ? void 0 : ce.openTpOverlay(q.type),
                class: Me({
                  dp__time_display: !0,
                  dp__time_display_block: !s.timePickerInline,
                  dp__time_display_inline: s.timePickerInline,
                  "dp--time-invalid": X.value(q.type),
                  "dp--time-overlay-btn": !X.value(q.type)
                }),
                disabled: M(q.type),
                tabindex: "0",
                "data-test": `${q.type}-toggle-overlay-btn-${a.order}`,
                onKeydown: (we) => i(je)(we, () => z(q.type), !0),
                onClick: (we) => z(q.type)
              }, [
                s.$slots[q.type] ? ue(s.$slots, q.type, {
                  key: 0,
                  text: L.value(q.type).text,
                  value: L.value(q.type).value
                }) : ee("", !0),
                s.$slots[q.type] ? ee("", !0) : (A(), Q(be, { key: 1 }, [
                  dt(He(L.value(q.type).text), 1)
                ], 64))
              ], 42, mr),
              fe("button", {
                ref_for: !0,
                ref: (we) => V(we, u, 2),
                type: "button",
                class: Me({
                  dp__btn: !0,
                  dp__inc_dec_button: !s.timePickerInline,
                  dp__inc_dec_button_inline: s.timePickerInline,
                  dp__tp_inline_btn_bottom: s.timePickerInline,
                  dp__inc_dec_button_disabled: ie.value(q.type)
                }),
                "data-test": `${q.type}-time-dec-btn-${a.order}`,
                "aria-label": ($e = i(r)) == null ? void 0 : $e.decrementValue(q.type),
                tabindex: "0",
                onKeydown: (we) => i(je)(we, () => $(q.type, !1, { keyboard: !0 }), !0),
                onClick: (we) => i(k).timeArrowHoldThreshold ? void 0 : $(q.type, !1),
                onMousedown: (we) => i(k).timeArrowHoldThreshold ? $(q.type, !1) : void 0,
                onMouseup: S
              }, [
                a.timePickerInline ? (A(), Q(be, { key: 1 }, [
                  gr,
                  yr
                ], 64)) : (A(), Q(be, { key: 0 }, [
                  s.$slots["arrow-down"] ? ue(s.$slots, "arrow-down", { key: 0 }) : ee("", !0),
                  s.$slots["arrow-down"] ? ee("", !0) : (A(), ke(i(za), { key: 1 }))
                ], 64))
              ], 42, pr)
            ], 64))
          ], 2);
        }), 128)),
        s.is24 ? ee("", !0) : (A(), Q("div", hr, [
          s.$slots["am-pm-button"] ? ue(s.$slots, "am-pm-button", {
            key: 0,
            toggle: c,
            value: T.value
          }) : ee("", !0),
          s.$slots["am-pm-button"] ? ee("", !0) : (A(), Q("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: O,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (x = i(r)) == null ? void 0 : x.amPmButton,
            tabindex: "0",
            onClick: c,
            onKeydown: N[0] || (N[0] = (q) => i(je)(q, () => c(), !0))
          }, He(T.value), 41, br))
        ])),
        (A(!0), Q(be, null, Se(ne.value, (q, u) => (A(), ke(Bt, {
          key: u,
          name: i(h)(j[q.type]),
          css: i(_)
        }, {
          default: ge(() => [
            j[q.type] ? (A(), ke(Qt, {
              key: 0,
              items: f(q.type),
              "is-last": s.autoApply && !i(k).keepActionRow,
              "esc-close": s.escClose,
              type: q.type,
              "text-input": s.textInput,
              config: s.config,
              "arrow-navigation": s.arrowNavigation,
              "aria-labels": s.ariaLabels,
              onSelected: (K) => pe(q.type, K),
              onToggle: (K) => z(q.type),
              onResetFlow: N[1] || (N[1] = (K) => s.$emit("reset-flow"))
            }, Ve({
              "button-icon": ge(() => [
                s.$slots["clock-icon"] ? ue(s.$slots, "clock-icon", { key: 0 }) : ee("", !0),
                s.$slots["clock-icon"] ? ee("", !0) : (A(), ke(ra(s.timePickerInline ? i(Yt) : i(Va)), { key: 1 }))
              ]),
              _: 2
            }, [
              s.$slots[`${q.type}-overlay-value`] ? {
                name: "item",
                fn: ge(({ item: K }) => [
                  ue(s.$slots, `${q.type}-overlay-value`, {
                    text: K.text,
                    value: K.value
                  })
                ]),
                key: "0"
              } : void 0,
              s.$slots[`${q.type}-overlay-header`] ? {
                name: "header",
                fn: ge(() => [
                  ue(s.$slots, `${q.type}-overlay-header`, {
                    toggle: () => z(q.type)
                  })
                ]),
                key: "1"
              } : void 0
            ]), 1032, ["items", "is-last", "esc-close", "type", "text-input", "config", "arrow-navigation", "aria-labels", "onSelected", "onToggle"])) : ee("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), wr = { class: "dp--tp-wrap" }, Mr = ["aria-label", "tabindex"], Dr = ["tabindex"], $r = ["aria-label"], Ln = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    disabledTimesConfig: { type: Function, default: null },
    validateTime: {
      type: Function,
      default: () => !1
    },
    ...at
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-opened",
    "overlay-closed",
    "am-pm-change"
  ],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = e, { buildMatrix: m, setTimePicker: v } = yt(), r = At(), { defaultedTransitions: P, defaultedAriaLabels: C, defaultedTextInput: k, defaultedConfig: g, defaultedRange: h } = Pe(a), { transitionName: _, showTransition: j } = Kt(P), { hideNavigationButtons: T } = sa(), O = te(null), b = te(null), E = te([]), I = te(null);
    We(() => {
      n("mount"), !a.timePicker && a.arrowNavigation ? m([Ye(O.value)], "time") : v(!0, a.timePicker);
    });
    const X = Z(() => h.value.enabled && a.modelAuto ? $n(a.internalModelValue) : !0), F = te(!1), B = (p) => ({
      hours: Array.isArray(a.hours) ? a.hours[p] : a.hours,
      minutes: Array.isArray(a.minutes) ? a.minutes[p] : a.minutes,
      seconds: Array.isArray(a.seconds) ? a.seconds[p] : a.seconds
    }), U = Z(() => {
      const p = [];
      if (h.value.enabled)
        for (let f = 0; f < 2; f++)
          p.push(B(f));
      else
        p.push(B(0));
      return p;
    }), y = (p, f = !1, J = "") => {
      f || n("reset-flow"), F.value = p, n(p ? "overlay-opened" : "overlay-closed", Le.time), a.arrowNavigation && v(p), tt(() => {
        J !== "" && E.value[0] && E.value[0].openChildCmp(J);
      });
    }, ie = Z(() => ({
      dp__btn: !0,
      dp__button: !0,
      dp__button_bottom: a.autoApply && !g.value.keepActionRow
    })), se = Qe(r, "timePicker"), re = (p, f, J) => h.value.enabled ? f === 0 ? [p, U.value[1][J]] : [U.value[0][J], p] : p, Y = (p) => {
      n("update:hours", p);
    }, H = (p) => {
      n("update:minutes", p);
    }, ne = (p) => {
      n("update:seconds", p);
    }, L = () => {
      if (I.value && !k.value.enabled && !a.noOverlayFocus) {
        const p = An(I.value);
        p && p.focus({ preventScroll: !0 });
      }
    }, R = (p) => {
      n("overlay-closed", p);
    };
    return t({ toggleTimePicker: y }), (p, f) => {
      var J;
      return A(), Q("div", wr, [
        !p.timePicker && !p.timePickerInline ? ea((A(), Q("button", {
          key: 0,
          ref_key: "openTimePickerBtn",
          ref: O,
          type: "button",
          class: Me(ie.value),
          "aria-label": (J = i(C)) == null ? void 0 : J.openTimePicker,
          tabindex: p.noOverlayFocus ? void 0 : 0,
          "data-test": "open-time-picker-btn",
          onKeydown: f[0] || (f[0] = (oe) => i(je)(oe, () => y(!0))),
          onClick: f[1] || (f[1] = (oe) => y(!0))
        }, [
          p.$slots["clock-icon"] ? ue(p.$slots, "clock-icon", { key: 0 }) : ee("", !0),
          p.$slots["clock-icon"] ? ee("", !0) : (A(), ke(i(Va), { key: 1 }))
        ], 42, Mr)), [
          [ta, !i(T)(p.hideNavigation, "time")]
        ]) : ee("", !0),
        Je(Bt, {
          name: i(_)(F.value),
          css: i(j) && !p.timePickerInline
        }, {
          default: ge(() => {
            var oe;
            return [
              F.value || p.timePicker || p.timePickerInline ? (A(), Q("div", {
                key: 0,
                ref_key: "overlayRef",
                ref: I,
                class: Me({
                  dp__overlay: !p.timePickerInline,
                  "dp--overlay-absolute": !a.timePicker && !p.timePickerInline,
                  "dp--overlay-relative": a.timePicker
                }),
                style: Xe(p.timePicker ? { height: `${i(g).modeHeight}px` } : void 0),
                tabindex: p.timePickerInline ? void 0 : 0
              }, [
                fe("div", {
                  class: Me(
                    p.timePickerInline ? "dp__time_picker_inline_container" : "dp__overlay_container dp__container_flex dp__time_picker_overlay_container"
                  ),
                  style: { display: "flex" }
                }, [
                  p.$slots["time-picker-overlay"] ? ue(p.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: Y,
                    setMinutes: H,
                    setSeconds: ne
                  }) : ee("", !0),
                  p.$slots["time-picker-overlay"] ? ee("", !0) : (A(), Q("div", {
                    key: 1,
                    class: Me(p.timePickerInline ? "dp__flex" : "dp__overlay_row dp__flex_row")
                  }, [
                    (A(!0), Q(be, null, Se(U.value, (w, M) => ea((A(), ke(kr, Ne({
                      key: M,
                      ref_for: !0
                    }, {
                      ...p.$props,
                      order: M,
                      hours: w.hours,
                      minutes: w.minutes,
                      seconds: w.seconds,
                      closeTimePickerBtn: b.value,
                      disabledTimesConfig: e.disabledTimesConfig,
                      disabled: M === 0 ? p.fixedStart : p.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: E,
                      "validate-time": (z, d) => e.validateTime(z, re(d, M, z)),
                      "onUpdate:hours": (z) => Y(re(z, M, "hours")),
                      "onUpdate:minutes": (z) => H(re(z, M, "minutes")),
                      "onUpdate:seconds": (z) => ne(re(z, M, "seconds")),
                      onMounted: L,
                      onOverlayClosed: R,
                      onOverlayOpened: f[2] || (f[2] = (z) => p.$emit("overlay-opened", z)),
                      onAmPmChange: f[3] || (f[3] = (z) => p.$emit("am-pm-change", z))
                    }), Ve({ _: 2 }, [
                      Se(i(se), (z, d) => ({
                        name: z,
                        fn: ge((S) => [
                          ue(p.$slots, z, Ne({ ref_for: !0 }, S))
                        ])
                      }))
                    ]), 1040, ["validate-time", "onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [ta, M === 0 ? !0 : X.value]
                    ])), 128))
                  ], 2)),
                  !p.timePicker && !p.timePickerInline ? ea((A(), Q("button", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: b,
                    type: "button",
                    class: Me(ie.value),
                    "aria-label": (oe = i(C)) == null ? void 0 : oe.closeTimePicker,
                    tabindex: "0",
                    onKeydown: f[4] || (f[4] = (w) => i(je)(w, () => y(!1))),
                    onClick: f[5] || (f[5] = (w) => y(!1))
                  }, [
                    p.$slots["calendar-icon"] ? ue(p.$slots, "calendar-icon", { key: 0 }) : ee("", !0),
                    p.$slots["calendar-icon"] ? ee("", !0) : (A(), ke(i(Yt), { key: 1 }))
                  ], 42, $r)), [
                    [ta, !i(T)(p.hideNavigation, "time")]
                  ]) : ee("", !0)
                ], 2)
              ], 14, Dr)) : ee("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Hn = (e, t, l, n) => {
  const { defaultedRange: a } = Pe(e), m = (I, X) => Array.isArray(t[I]) ? t[I][X] : t[I], v = (I) => e.enableSeconds ? Array.isArray(t.seconds) ? t.seconds[I] : t.seconds : 0, r = (I, X) => I ? X !== void 0 ? pt(I, m("hours", X), m("minutes", X), v(X)) : pt(I, t.hours, t.minutes, v()) : Na(W(), v(X)), P = (I, X) => {
    t[I] = X;
  }, C = Z(() => e.modelAuto && a.value.enabled ? Array.isArray(l.value) ? l.value.length > 1 : !1 : a.value.enabled), k = (I, X) => {
    const F = Object.fromEntries(
      Object.keys(t).map((B) => B === I ? [B, X] : [B, t[B]].slice())
    );
    if (C.value && !a.value.disableTimeRangeValidation) {
      const B = (y) => l.value ? pt(
        l.value[y],
        F.hours[y],
        F.minutes[y],
        F.seconds[y]
      ) : null, U = (y) => Ea(l.value[y], 0);
      return !(he(B(0), B(1)) && (Pt(B(0), U(1)) || zt(B(1), U(0))));
    }
    return !0;
  }, g = (I, X) => {
    k(I, X) && (P(I, X), n && n());
  }, h = (I) => {
    g("hours", I);
  }, _ = (I) => {
    g("minutes", I);
  }, j = (I) => {
    g("seconds", I);
  }, T = (I, X, F, B) => {
    X && h(I), !X && !F && _(I), F && j(I), l.value && B(l.value);
  }, O = (I) => {
    if (I) {
      const X = Array.isArray(I), F = X ? [+I[0].hours, +I[1].hours] : +I.hours, B = X ? [+I[0].minutes, +I[1].minutes] : +I.minutes, U = X ? [+I[0].seconds, +I[1].seconds] : +I.seconds;
      P("hours", F), P("minutes", B), e.enableSeconds && P("seconds", U);
    }
  }, b = (I, X) => {
    const F = {
      hours: Array.isArray(t.hours) ? t.hours[I] : t.hours,
      disabledArr: []
    };
    return (X || X === 0) && (F.hours = X), Array.isArray(e.disabledTimes) && (F.disabledArr = a.value.enabled && Array.isArray(e.disabledTimes[I]) ? e.disabledTimes[I] : e.disabledTimes), F;
  }, E = Z(() => (I, X) => {
    var F;
    if (Array.isArray(e.disabledTimes)) {
      const { disabledArr: B, hours: U } = b(I, X), y = B.filter((ie) => +ie.hours === U);
      return ((F = y[0]) == null ? void 0 : F.minutes) === "*" ? { hours: [U], minutes: void 0, seconds: void 0 } : {
        hours: [],
        minutes: (y == null ? void 0 : y.map((ie) => +ie.minutes)) ?? [],
        seconds: (y == null ? void 0 : y.map((ie) => ie.seconds ? +ie.seconds : void 0)) ?? []
      };
    }
    return { hours: [], minutes: [], seconds: [] };
  });
  return {
    setTime: P,
    updateHours: h,
    updateMinutes: _,
    updateSeconds: j,
    getSetDateTime: r,
    updateTimeValues: T,
    getSecondsValue: v,
    assignStartTime: O,
    validateTime: k,
    disabledTimesConfig: E
  };
}, Ar = (e, t) => {
  const { modelValue: l, time: n } = Gt(e, t), { defaultedStartTime: a, defaultedRange: m } = Pe(e), { updateTimeValues: v, getSetDateTime: r, setTime: P, assignStartTime: C, disabledTimesConfig: k, validateTime: g } = Hn(e, n, l, h);
  function h() {
    t("update-flow-step");
  }
  const _ = (F) => {
    const { hours: B, minutes: U, seconds: y } = F;
    return { hours: +B, minutes: +U, seconds: y ? +y : 0 };
  }, j = () => {
    if (e.startTime) {
      if (Array.isArray(e.startTime)) {
        const B = _(e.startTime[0]), U = _(e.startTime[1]);
        return [Ae(W(), B), Ae(W(), U)];
      }
      const F = _(e.startTime);
      return Ae(W(), F);
    }
    return m.value.enabled ? [null, null] : null;
  }, T = () => {
    if (m.value.enabled) {
      const [F, B] = j();
      l.value = [r(F, 0), r(B, 1)];
    } else
      l.value = r(j());
  }, O = (F) => Array.isArray(F) ? [$t(W(F[0])), $t(W(F[1]))] : [$t(F ?? W())], b = (F, B, U) => {
    P("hours", F), P("minutes", B), P("seconds", e.enableSeconds ? U : 0);
  }, E = () => {
    const [F, B] = O(l.value);
    return m.value.enabled ? b(
      [F.hours, B.hours],
      [F.minutes, B.minutes],
      [F.seconds, B.seconds]
    ) : b(F.hours, F.minutes, F.seconds);
  };
  We(() => {
    if (!e.shadow)
      return C(a.value), l.value ? E() : T();
  });
  const I = () => {
    Array.isArray(l.value) ? l.value = l.value.map((F, B) => F && r(F, B)) : l.value = r(l.value), t("time-update");
  };
  return {
    modelValue: l,
    time: n,
    disabledTimesConfig: k,
    updateTime: (F, B = !0, U = !1) => {
      v(F, B, U, I);
    },
    validateTime: g
  };
}, Tr = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "TimePickerSolo",
  props: {
    ...at
  },
  emits: [
    "update:internal-model-value",
    "time-update",
    "am-pm-change",
    "mount",
    "reset-flow",
    "update-flow-step",
    "overlay-toggle"
  ],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = e, m = At(), v = Qe(m, "timePicker"), r = te(null), { time: P, modelValue: C, disabledTimesConfig: k, updateTime: g, validateTime: h } = Ar(a, n);
    return We(() => {
      a.shadow || n("mount", null);
    }), t({ getSidebarProps: () => ({
      modelValue: C,
      time: P,
      updateTime: g
    }), toggleTimePicker: (T, O = !1, b = "") => {
      var E;
      (E = r.value) == null || E.toggleTimePicker(T, O, b);
    } }), (T, O) => (A(), ke(ia, {
      "multi-calendars": 0,
      stretch: ""
    }, {
      default: ge(() => [
        Je(Ln, Ne({
          ref_key: "tpRef",
          ref: r
        }, T.$props, {
          hours: i(P).hours,
          minutes: i(P).minutes,
          seconds: i(P).seconds,
          "internal-model-value": T.internalModelValue,
          "disabled-times-config": i(k),
          "validate-time": i(h),
          "onUpdate:hours": O[0] || (O[0] = (b) => i(g)(b)),
          "onUpdate:minutes": O[1] || (O[1] = (b) => i(g)(b, !1)),
          "onUpdate:seconds": O[2] || (O[2] = (b) => i(g)(b, !1, !0)),
          onAmPmChange: O[3] || (O[3] = (b) => T.$emit("am-pm-change", b)),
          onResetFlow: O[4] || (O[4] = (b) => T.$emit("reset-flow")),
          onOverlayClosed: O[5] || (O[5] = (b) => T.$emit("overlay-toggle", { open: !1, overlay: b })),
          onOverlayOpened: O[6] || (O[6] = (b) => T.$emit("overlay-toggle", { open: !0, overlay: b }))
        }), Ve({ _: 2 }, [
          Se(i(v), (b, E) => ({
            name: b,
            fn: ge((I) => [
              ue(T.$slots, b, Ie(Ue(I)))
            ])
          }))
        ]), 1040, ["hours", "minutes", "seconds", "internal-model-value", "disabled-times-config", "validate-time"])
      ]),
      _: 3
    }));
  }
}), Sr = { class: "dp--header-wrap" }, Rr = {
  key: 0,
  class: "dp__month_year_wrap"
}, Pr = { key: 0 }, Cr = { class: "dp__month_year_wrap" }, _r = ["aria-label", "data-test", "onClick", "onKeydown"], Or = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "DpHeader",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    ...at
  },
  emits: ["update-month-year", "mount", "reset-flow", "overlay-closed", "overlay-opened"],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = e, {
      defaultedTransitions: m,
      defaultedAriaLabels: v,
      defaultedMultiCalendars: r,
      defaultedFilters: P,
      defaultedConfig: C,
      defaultedHighlight: k,
      propDates: g
    } = Pe(a), { transitionName: h, showTransition: _ } = Kt(m), { buildMatrix: j } = yt(), { handleMonthYearChange: T, isDisabled: O, updateMonthYear: b } = Vl(a, n), { showLeftIcon: E, showRightIcon: I } = sa(), X = te(!1), F = te(!1), B = te([null, null, null, null]);
    We(() => {
      n("mount");
    });
    const U = (w) => ({
      get: () => a[w],
      set: (M) => {
        const z = w === xe.month ? xe.year : xe.month;
        n("update-month-year", { [w]: M, [z]: a[z] }), w === xe.month ? L(!0) : R(!0);
      }
    }), y = Z(U(xe.month)), ie = Z(U(xe.year)), se = Z(() => (w) => ({
      month: a.month,
      year: a.year,
      items: w === xe.month ? a.months : a.years,
      instance: a.instance,
      updateMonthYear: b,
      toggle: w === xe.month ? L : R
    })), re = Z(() => {
      const w = a.months.find((M) => M.value === a.month);
      return w || { text: "", value: 0 };
    }), Y = Z(() => _t(a.months, (w) => {
      const M = a.month === w.value, z = Ut(
        w.value,
        Sn(a.year, g.value.minDate),
        Rn(a.year, g.value.maxDate)
      ) || P.value.months.includes(w.value), d = Bn(k.value, w.value, a.year);
      return { active: M, disabled: z, highlighted: d };
    })), H = Z(() => _t(a.years, (w) => {
      const M = a.year === w.value, z = Ut(
        w.value,
        Ot(g.value.minDate),
        Ot(g.value.maxDate)
      ) || P.value.years.includes(w.value), d = Ga(k.value, w.value);
      return { active: M, disabled: z, highlighted: d };
    })), ne = (w, M, z) => {
      z !== void 0 ? w.value = z : w.value = !w.value, w.value ? n("overlay-opened", M) : n("overlay-closed", M);
    }, L = (w = !1, M) => {
      p(w), ne(X, Le.month, M);
    }, R = (w = !1, M) => {
      p(w), ne(F, Le.year, M);
    }, p = (w) => {
      w || n("reset-flow");
    }, f = (w, M) => {
      a.arrowNavigation && (B.value[M] = Ye(w), j(B.value, "monthYear"));
    }, J = Z(() => {
      var w, M;
      return [
        {
          type: xe.month,
          index: 1,
          toggle: L,
          modelValue: y.value,
          updateModelValue: (z) => y.value = z,
          text: re.value.text,
          showSelectionGrid: X.value,
          items: Y.value,
          ariaLabel: (w = v.value) == null ? void 0 : w.openMonthsOverlay
        },
        {
          type: xe.year,
          index: 2,
          toggle: R,
          modelValue: ie.value,
          updateModelValue: (z) => ie.value = z,
          text: Tn(a.year, a.locale),
          showSelectionGrid: F.value,
          items: H.value,
          ariaLabel: (M = v.value) == null ? void 0 : M.openYearsOverlay
        }
      ];
    }), oe = Z(() => a.disableYearSelect ? [J.value[0]] : a.yearFirst ? [...J.value].reverse() : J.value);
    return t({
      toggleMonthPicker: L,
      toggleYearPicker: R,
      handleMonthYearChange: T
    }), (w, M) => {
      var z, d, S;
      return A(), Q("div", Sr, [
        w.$slots["month-year"] ? (A(), Q("div", Rr, [
          ue(w.$slots, "month-year", Ie(Ue({ month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: i(b), handleMonthYearChange: i(T), instance: e.instance })))
        ])) : (A(), Q(be, { key: 1 }, [
          w.$slots["top-extra"] ? (A(), Q("div", Pr, [
            ue(w.$slots, "top-extra", { value: w.internalModelValue })
          ])) : ee("", !0),
          fe("div", Cr, [
            i(E)(i(r), e.instance) && !w.vertical ? (A(), ke(Ht, {
              key: 0,
              "aria-label": (z = i(v)) == null ? void 0 : z.prevMonth,
              disabled: i(O)(!1),
              onActivate: M[0] || (M[0] = ($) => i(T)(!1, !0)),
              onSetRef: M[1] || (M[1] = ($) => f($, 0))
            }, {
              default: ge(() => [
                w.$slots["arrow-left"] ? ue(w.$slots, "arrow-left", { key: 0 }) : ee("", !0),
                w.$slots["arrow-left"] ? ee("", !0) : (A(), ke(i(La), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : ee("", !0),
            fe("div", {
              class: Me(["dp__month_year_wrap", {
                dp__year_disable_select: w.disableYearSelect
              }])
            }, [
              (A(!0), Q(be, null, Se(oe.value, ($, de) => (A(), Q(be, {
                key: $.type
              }, [
                fe("button", {
                  ref_for: !0,
                  ref: (c) => f(c, de + 1),
                  type: "button",
                  class: "dp__btn dp__month_year_select",
                  tabindex: "0",
                  "aria-label": $.ariaLabel,
                  "data-test": `${$.type}-toggle-overlay-${e.instance}`,
                  onClick: $.toggle,
                  onKeydown: (c) => i(je)(c, () => $.toggle(), !0)
                }, [
                  w.$slots[$.type] ? ue(w.$slots, $.type, {
                    key: 0,
                    text: $.text,
                    value: a[$.type]
                  }) : ee("", !0),
                  w.$slots[$.type] ? ee("", !0) : (A(), Q(be, { key: 1 }, [
                    dt(He($.text), 1)
                  ], 64))
                ], 40, _r),
                Je(Bt, {
                  name: i(h)($.showSelectionGrid),
                  css: i(_)
                }, {
                  default: ge(() => [
                    $.showSelectionGrid ? (A(), ke(Qt, {
                      key: 0,
                      items: $.items,
                      "arrow-navigation": w.arrowNavigation,
                      "hide-navigation": w.hideNavigation,
                      "is-last": w.autoApply && !i(C).keepActionRow,
                      "skip-button-ref": !1,
                      config: w.config,
                      type: $.type,
                      "header-refs": [],
                      "esc-close": w.escClose,
                      "menu-wrap-ref": w.menuWrapRef,
                      "text-input": w.textInput,
                      "aria-labels": w.ariaLabels,
                      onSelected: $.updateModelValue,
                      onToggle: $.toggle
                    }, Ve({
                      "button-icon": ge(() => [
                        w.$slots["calendar-icon"] ? ue(w.$slots, "calendar-icon", { key: 0 }) : ee("", !0),
                        w.$slots["calendar-icon"] ? ee("", !0) : (A(), ke(i(Yt), { key: 1 }))
                      ]),
                      _: 2
                    }, [
                      w.$slots[`${$.type}-overlay-value`] ? {
                        name: "item",
                        fn: ge(({ item: c }) => [
                          ue(w.$slots, `${$.type}-overlay-value`, {
                            text: c.text,
                            value: c.value
                          })
                        ]),
                        key: "0"
                      } : void 0,
                      w.$slots[`${$.type}-overlay`] ? {
                        name: "overlay",
                        fn: ge(() => [
                          ue(w.$slots, `${$.type}-overlay`, Ne({ ref_for: !0 }, se.value($.type)))
                        ]),
                        key: "1"
                      } : void 0,
                      w.$slots[`${$.type}-overlay-header`] ? {
                        name: "header",
                        fn: ge(() => [
                          ue(w.$slots, `${$.type}-overlay-header`, {
                            toggle: $.toggle
                          })
                        ]),
                        key: "2"
                      } : void 0
                    ]), 1032, ["items", "arrow-navigation", "hide-navigation", "is-last", "config", "type", "esc-close", "menu-wrap-ref", "text-input", "aria-labels", "onSelected", "onToggle"])) : ee("", !0)
                  ]),
                  _: 2
                }, 1032, ["name", "css"])
              ], 64))), 128))
            ], 2),
            i(E)(i(r), e.instance) && w.vertical ? (A(), ke(Ht, {
              key: 1,
              "aria-label": (d = i(v)) == null ? void 0 : d.prevMonth,
              disabled: i(O)(!1),
              onActivate: M[2] || (M[2] = ($) => i(T)(!1, !0))
            }, {
              default: ge(() => [
                w.$slots["arrow-up"] ? ue(w.$slots, "arrow-up", { key: 0 }) : ee("", !0),
                w.$slots["arrow-up"] ? ee("", !0) : (A(), ke(i(Wa), { key: 1 }))
              ]),
              _: 3
            }, 8, ["aria-label", "disabled"])) : ee("", !0),
            i(I)(i(r), e.instance) ? (A(), ke(Ht, {
              key: 2,
              ref: "rightIcon",
              disabled: i(O)(!0),
              "aria-label": (S = i(v)) == null ? void 0 : S.nextMonth,
              onActivate: M[3] || (M[3] = ($) => i(T)(!0, !0)),
              onSetRef: M[4] || (M[4] = ($) => f($, w.disableYearSelect ? 2 : 3))
            }, {
              default: ge(() => [
                w.$slots[w.vertical ? "arrow-down" : "arrow-right"] ? ue(w.$slots, w.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : ee("", !0),
                w.$slots[w.vertical ? "arrow-down" : "arrow-right"] ? ee("", !0) : (A(), ke(ra(w.vertical ? i(za) : i(Ha)), { key: 1 }))
              ]),
              _: 3
            }, 8, ["disabled", "aria-label"])) : ee("", !0)
          ])
        ], 64))
      ]);
    };
  }
}), Br = ["aria-label"], Yr = {
  class: "dp__calendar_header",
  role: "row"
}, Ir = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, Nr = ["aria-label"], Er = /* @__PURE__ */ fe("div", { class: "dp__calendar_header_separator" }, null, -1), Fr = ["aria-label"], Lr = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, Hr = { class: "dp__cell_inner" }, Vr = ["id", "aria-selected", "aria-disabled", "aria-label", "data-test", "onClick", "onKeydown", "onMouseenter", "onMouseleave", "onMousedown"], Wr = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "DpCalendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...at
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = e, { buildMultiLevelMatrix: m } = yt(), {
      defaultedTransitions: v,
      defaultedConfig: r,
      defaultedAriaLabels: P,
      defaultedMultiCalendars: C,
      defaultedWeekNumbers: k,
      defaultedMultiDates: g
    } = Pe(a), h = te(null), _ = te({
      bottom: "",
      left: "",
      transform: ""
    }), j = te([]), T = te(null), O = te(!0), b = te(""), E = te({ startX: 0, endX: 0, startY: 0, endY: 0 }), I = te([]), X = te({ left: "50%" }), F = te(!1), B = Z(() => a.calendar ? a.calendar(a.mappedDates) : a.mappedDates), U = Z(() => a.dayNames ? Array.isArray(a.dayNames) ? a.dayNames : a.dayNames(a.locale, +a.weekStart) : il(a.formatLocale, a.locale, +a.weekStart));
    We(() => {
      n("mount", { cmp: "calendar", refs: j }), r.value.noSwipe || T.value && (T.value.addEventListener("touchstart", J, { passive: !1 }), T.value.addEventListener("touchend", oe, { passive: !1 }), T.value.addEventListener("touchmove", w, { passive: !1 })), a.monthChangeOnScroll && T.value && T.value.addEventListener("wheel", d, { passive: !1 });
    });
    const y = (V) => V ? a.vertical ? "vNext" : "next" : a.vertical ? "vPrevious" : "previous", ie = (V, pe) => {
      if (a.transitions) {
        const s = qe(it(W(), a.month, a.year));
        b.value = Oe(qe(it(W(), V, pe)), s) ? v.value[y(!0)] : v.value[y(!1)], O.value = !1, tt(() => {
          O.value = !0;
        });
      }
    }, se = Z(
      () => ({
        [a.calendarClassName]: !!a.calendarClassName
      })
    ), re = Z(() => (V) => {
      const pe = cl(V);
      return {
        dp__marker_dot: pe.type === "dot",
        dp__marker_line: pe.type === "line"
      };
    }), Y = Z(() => (V) => he(V, h.value)), H = Z(() => ({
      dp__calendar: !0,
      dp__calendar_next: C.value.count > 0 && a.instance !== 0
    })), ne = Z(() => (V) => a.hideOffsetDates ? V.current : !0), L = (V) => ot(V, "yyyy-MM-dd"), R = async (V, pe, s) => {
      const N = Ye(j.value[pe][s]);
      if (N) {
        const { width: x, height: q } = N.getBoundingClientRect();
        h.value = V.value;
        let u = { left: `${x / 2}px` }, K = -50;
        if (await tt(), I.value[0]) {
          const { left: ce, width: $e } = I.value[0].getBoundingClientRect();
          ce < 0 && (u = { left: "0" }, K = 0, X.value.left = `${x / 2}px`), window.innerWidth < ce + $e && (u = { right: "0" }, K = 0, X.value.left = `${$e - x / 2}px`);
        }
        _.value = {
          bottom: `${q}px`,
          ...u,
          transform: `translateX(${K}%)`
        }, n("tooltip-open", V.marker);
      }
    }, p = async (V, pe, s) => {
      var N, x;
      if (F.value && g.value.enabled && g.value.dragSelect)
        return n("select-date", V);
      n("set-hover-date", V), (x = (N = V.marker) == null ? void 0 : N.tooltip) != null && x.length && await R(V, pe, s);
    }, f = (V) => {
      h.value && (h.value = null, _.value = JSON.parse(JSON.stringify({ bottom: "", left: "", transform: "" })), n("tooltip-close", V.marker));
    }, J = (V) => {
      E.value.startX = V.changedTouches[0].screenX, E.value.startY = V.changedTouches[0].screenY;
    }, oe = (V) => {
      E.value.endX = V.changedTouches[0].screenX, E.value.endY = V.changedTouches[0].screenY, M();
    }, w = (V) => {
      a.vertical && !a.inline && V.preventDefault();
    }, M = () => {
      const V = a.vertical ? "Y" : "X";
      Math.abs(E.value[`start${V}`] - E.value[`end${V}`]) > 10 && n("handle-swipe", E.value[`start${V}`] > E.value[`end${V}`] ? "right" : "left");
    }, z = (V, pe, s) => {
      V && (Array.isArray(j.value[pe]) ? j.value[pe][s] = V : j.value[pe] = [V]), a.arrowNavigation && m(j.value, "calendar");
    }, d = (V) => {
      a.monthChangeOnScroll && (V.preventDefault(), n("handle-scroll", V));
    }, S = (V) => k.value.type === "local" ? tl(V.value, { weekStartsOn: +a.weekStart }) : k.value.type === "iso" ? al(V.value) : typeof k.value.type == "function" ? k.value.type(V.value) : "", $ = (V) => {
      const pe = V[0];
      return k.value.hideOnOffsetDates ? V.some((s) => s.current) ? S(pe) : "" : S(pe);
    }, de = (V, pe) => {
      g.value.enabled || (mt(V, r.value), n("select-date", pe));
    }, c = (V) => {
      mt(V, r.value);
    }, ae = (V) => {
      g.value.enabled && g.value.dragSelect ? (F.value = !0, n("select-date", V)) : g.value.enabled && n("select-date", V);
    };
    return t({ triggerTransition: ie }), (V, pe) => {
      var s;
      return A(), Q("div", {
        class: Me(H.value)
      }, [
        fe("div", {
          ref_key: "calendarWrapRef",
          ref: T,
          role: "grid",
          class: Me(se.value),
          "aria-label": (s = i(P)) == null ? void 0 : s.calendarWrap
        }, [
          fe("div", Yr, [
            V.weekNumbers ? (A(), Q("div", Ir, He(V.weekNumName), 1)) : ee("", !0),
            (A(!0), Q(be, null, Se(U.value, (N, x) => {
              var q, u;
              return A(), Q("div", {
                key: x,
                class: "dp__calendar_header_item",
                role: "gridcell",
                "data-test": "calendar-header",
                "aria-label": (u = (q = i(P)) == null ? void 0 : q.weekDay) == null ? void 0 : u.call(q, x)
              }, [
                V.$slots["calendar-header"] ? ue(V.$slots, "calendar-header", {
                  key: 0,
                  day: N,
                  index: x
                }) : ee("", !0),
                V.$slots["calendar-header"] ? ee("", !0) : (A(), Q(be, { key: 1 }, [
                  dt(He(N), 1)
                ], 64))
              ], 8, Nr);
            }), 128))
          ]),
          Er,
          Je(Bt, {
            name: b.value,
            css: !!V.transitions
          }, {
            default: ge(() => {
              var N;
              return [
                O.value ? (A(), Q("div", {
                  key: 0,
                  class: "dp__calendar",
                  role: "rowgroup",
                  "aria-label": ((N = i(P)) == null ? void 0 : N.calendarDays) || void 0,
                  onMouseleave: pe[1] || (pe[1] = (x) => F.value = !1)
                }, [
                  (A(!0), Q(be, null, Se(B.value, (x, q) => (A(), Q("div", {
                    key: q,
                    class: "dp__calendar_row",
                    role: "row"
                  }, [
                    V.weekNumbers ? (A(), Q("div", Lr, [
                      fe("div", Hr, He($(x.days)), 1)
                    ])) : ee("", !0),
                    (A(!0), Q(be, null, Se(x.days, (u, K) => {
                      var ce, $e, we;
                      return A(), Q("div", {
                        id: L(u.value),
                        ref_for: !0,
                        ref: (le) => z(le, q, K),
                        key: K + q,
                        role: "gridcell",
                        class: "dp__calendar_item",
                        "aria-selected": (u.classData.dp__active_date || u.classData.dp__range_start || u.classData.dp__range_start) ?? void 0,
                        "aria-disabled": u.classData.dp__cell_disabled || void 0,
                        "aria-label": ($e = (ce = i(P)) == null ? void 0 : ce.day) == null ? void 0 : $e.call(ce, u),
                        tabindex: "0",
                        "data-test": u.value,
                        onClick: Ia((le) => de(le, u), ["prevent"]),
                        onKeydown: (le) => i(je)(le, () => V.$emit("select-date", u)),
                        onMouseenter: (le) => p(u, q, K),
                        onMouseleave: (le) => f(u),
                        onMousedown: (le) => ae(u),
                        onMouseup: pe[0] || (pe[0] = (le) => F.value = !1)
                      }, [
                        fe("div", {
                          class: Me(["dp__cell_inner", u.classData])
                        }, [
                          V.$slots.day && ne.value(u) ? ue(V.$slots, "day", {
                            key: 0,
                            day: +u.text,
                            date: u.value
                          }) : ee("", !0),
                          V.$slots.day ? ee("", !0) : (A(), Q(be, { key: 1 }, [
                            dt(He(u.text), 1)
                          ], 64)),
                          u.marker && ne.value(u) ? (A(), Q(be, { key: 2 }, [
                            V.$slots.marker ? ue(V.$slots, "marker", {
                              key: 0,
                              marker: u.marker,
                              day: +u.text,
                              date: u.value
                            }) : (A(), Q("div", {
                              key: 1,
                              class: Me(re.value(u.marker)),
                              style: Xe(u.marker.color ? { backgroundColor: u.marker.color } : {})
                            }, null, 6))
                          ], 64)) : ee("", !0),
                          Y.value(u.value) ? (A(), Q("div", {
                            key: 3,
                            ref_for: !0,
                            ref_key: "activeTooltip",
                            ref: I,
                            class: "dp__marker_tooltip",
                            style: Xe(_.value)
                          }, [
                            (we = u.marker) != null && we.tooltip ? (A(), Q("div", {
                              key: 0,
                              class: "dp__tooltip_content",
                              onClick: c
                            }, [
                              (A(!0), Q(be, null, Se(u.marker.tooltip, (le, nt) => (A(), Q("div", {
                                key: nt,
                                class: "dp__tooltip_text"
                              }, [
                                V.$slots["marker-tooltip"] ? ue(V.$slots, "marker-tooltip", {
                                  key: 0,
                                  tooltip: le,
                                  day: u.value
                                }) : ee("", !0),
                                V.$slots["marker-tooltip"] ? ee("", !0) : (A(), Q(be, { key: 1 }, [
                                  fe("div", {
                                    class: "dp__tooltip_mark",
                                    style: Xe(le.color ? { backgroundColor: le.color } : {})
                                  }, null, 4),
                                  fe("div", null, He(le.text), 1)
                                ], 64))
                              ]))), 128)),
                              fe("div", {
                                class: "dp__arrow_bottom_tp",
                                style: Xe(X.value)
                              }, null, 4)
                            ])) : ee("", !0)
                          ], 4)) : ee("", !0)
                        ], 2)
                      ], 40, Vr);
                    }), 128))
                  ]))), 128))
                ], 40, Fr)) : ee("", !0)
              ];
            }),
            _: 3
          }, 8, ["name", "css"])
        ], 10, Br)
      ], 2);
    };
  }
}), dn = (e) => Array.isArray(e), zr = (e, t, l, n) => {
  const a = te([]), m = te(/* @__PURE__ */ new Date()), v = te(), { modelValue: r, calendars: P, time: C, today: k } = Gt(e, t), {
    defaultedMultiCalendars: g,
    defaultedStartTime: h,
    defaultedRange: _,
    defaultedConfig: j,
    defaultedTz: T,
    propDates: O,
    defaultedMultiDates: b
  } = Pe(e), { validateMonthYearInRange: E, isDisabled: I, isDateRangeAllowed: X, checkMinMaxRange: F } = ht(e), { updateTimeValues: B, getSetDateTime: U, setTime: y, assignStartTime: ie, validateTime: se, disabledTimesConfig: re } = Hn(e, C, r, n), Y = Z(
    () => (o) => P.value[o] ? P.value[o].month : 0
  ), H = Z(
    () => (o) => P.value[o] ? P.value[o].year : 0
  ), ne = (o) => !j.value.keepViewOnOffsetClick || o ? !0 : !v.value, L = (o, D, G, ve = !1) => {
    var De, Ge;
    ne(ve) && (P.value[o] || (P.value[o] = { month: 0, year: 0 }), P.value[o].month = ln(D) ? (De = P.value[o]) == null ? void 0 : De.month : D, P.value[o].year = ln(G) ? (Ge = P.value[o]) == null ? void 0 : Ge.year : G);
  }, R = () => {
    e.autoApply && t("select-date");
  };
  rt(
    r,
    (o, D) => {
      JSON.stringify(o) !== JSON.stringify(D) && J();
    },
    { deep: !0 }
  ), We(() => {
    e.shadow || (r.value || (V(), h.value && ie(h.value)), J(!0), e.focusStartDate && e.startDate && V());
  });
  const p = Z(() => {
    var o;
    return (o = e.flow) != null && o.length && !e.partialFlow ? e.flowStep === e.flow.length : !0;
  }), f = () => {
    e.autoApply && p.value && t("auto-apply");
  }, J = (o = !1) => {
    if (r.value)
      return Array.isArray(r.value) ? (a.value = r.value, $(o)) : M(r.value, o);
    if (g.value.count && o && !e.startDate)
      return w(W(), o);
  }, oe = () => Array.isArray(r.value) && _.value.enabled ? ye(r.value[0]) === ye(r.value[1] ?? r.value[0]) : !1, w = (o, D = !1) => {
    if ((!g.value.count || !g.value.static || D) && L(0, ye(o), me(o)), g.value.count && (!g.value.solo || !r.value || oe()))
      for (let G = 1; G < g.value.count; G++) {
        const ve = Ae(W(), { month: Y.value(G - 1), year: H.value(G - 1) }), De = kn(ve, { months: 1 });
        P.value[G] = { month: ye(De), year: me(De) };
      }
  }, M = (o, D) => {
    w(o), y("hours", ct(o)), y("minutes", gt(o)), y("seconds", Ct(o)), g.value.count && D && ae();
  }, z = (o) => {
    if (g.value.count) {
      if (g.value.solo)
        return 0;
      const D = ye(o[0]), G = ye(o[1]);
      return Math.abs(G - D) < g.value.count ? 0 : 1;
    }
    return 1;
  }, d = (o, D) => {
    o[1] && _.value.showLastInRange ? w(o[z(o)], D) : w(o[0], D);
    const G = (ve, De) => [
      ve(o[0]),
      o[1] ? ve(o[1]) : C[De][1]
    ];
    y("hours", G(ct, "hours")), y("minutes", G(gt, "minutes")), y("seconds", G(Ct, "seconds"));
  }, S = (o, D) => {
    if ((_.value.enabled || e.weekPicker) && !b.value.enabled)
      return d(o, D);
    if (b.value.enabled && D) {
      const G = o[o.length - 1];
      return M(G, D);
    }
  }, $ = (o) => {
    const D = r.value;
    S(D, o), g.value.count && g.value.solo && ae();
  }, de = (o, D) => {
    const G = Ae(W(), { month: Y.value(D), year: H.value(D) }), ve = o < 0 ? Mt(G, 1) : Wt(G, 1);
    E(ye(ve), me(ve), o < 0, e.preventMinMaxNavigation) && (L(D, ye(ve), me(ve)), t("update-month-year", { instance: D, month: ye(ve), year: me(ve) }), g.value.count && !g.value.solo && c(D), l());
  }, c = (o) => {
    for (let D = o - 1; D >= 0; D--) {
      const G = Wt(Ae(W(), { month: Y.value(D + 1), year: H.value(D + 1) }), 1);
      L(D, ye(G), me(G));
    }
    for (let D = o + 1; D <= g.value.count - 1; D++) {
      const G = Mt(Ae(W(), { month: Y.value(D - 1), year: H.value(D - 1) }), 1);
      L(D, ye(G), me(G));
    }
  }, ae = () => {
    if (Array.isArray(r.value) && r.value.length === 2) {
      const o = W(
        W(r.value[1] ? r.value[1] : Mt(r.value[0], 1))
      ), [D, G] = [ye(r.value[0]), me(r.value[0])], [ve, De] = [ye(r.value[1]), me(r.value[1])];
      (D !== ve || D === ve && G !== De) && g.value.solo && L(1, ye(o), me(o));
    } else
      r.value && !Array.isArray(r.value) && (L(0, ye(r.value), me(r.value)), w(W()));
  }, V = () => {
    e.startDate && (L(0, ye(W(e.startDate)), me(W(e.startDate))), g.value.count && c(0));
  }, pe = (o, D) => {
    if (e.monthChangeOnScroll) {
      const G = (/* @__PURE__ */ new Date()).getTime() - m.value.getTime(), ve = Math.abs(o.deltaY);
      let De = 500;
      ve > 1 && (De = 100), ve > 100 && (De = 0), G > De && (m.value = /* @__PURE__ */ new Date(), de(e.monthChangeOnScroll !== "inverse" ? -o.deltaY : o.deltaY, D));
    }
  }, s = (o, D, G = !1) => {
    e.monthChangeOnArrows && e.vertical === G && N(o, D);
  }, N = (o, D) => {
    de(o === "right" ? -1 : 1, D);
  }, x = (o) => {
    if (O.value.markers)
      return na(o.value, O.value.markers);
  }, q = (o, D) => {
    switch (e.sixWeeks === !0 ? "append" : e.sixWeeks) {
      case "prepend":
        return [!0, !1];
      case "center":
        return [o == 0, !0];
      case "fair":
        return [o == 0 || D > o, !0];
      case "append":
        return [!1, !1];
      default:
        return [!1, !1];
    }
  }, u = (o, D, G, ve) => {
    if (e.sixWeeks && o.length < 6) {
      const De = 6 - o.length, Ge = (D.getDay() + 7 - ve) % 7, Xt = 6 - (G.getDay() + 7 - ve) % 7, [Ft, ba] = q(Ge, Xt);
      for (let bt = 1; bt <= De; bt++)
        if (ba ? !!(bt % 2) == Ft : Ft) {
          const Jt = o[0].days[0], ka = K(wt(Jt.value, -7), ye(D));
          o.unshift({ days: ka });
        } else {
          const Jt = o[o.length - 1], ka = Jt.days[Jt.days.length - 1], Wn = K(wt(ka.value, 1), ye(D));
          o.push({ days: Wn });
        }
    }
    return o;
  }, K = (o, D) => {
    const G = W(o), ve = [];
    for (let De = 0; De < 7; De++) {
      const Ge = wt(G, De), Et = ye(Ge) !== D;
      ve.push({
        text: e.hideOffsetDates && Et ? "" : Ge.getDate(),
        value: Ge,
        current: !Et,
        classData: {}
      });
    }
    return ve;
  }, ce = (o, D) => {
    const G = [], ve = new Date(D, o), De = new Date(D, o + 1, 0), Ge = e.weekStart, Et = Fa(ve, { weekStartsOn: Ge }), Xt = (Ft) => {
      const ba = K(Ft, o);
      if (G.push({ days: ba }), !G[G.length - 1].days.some(
        (bt) => he(qe(bt.value), qe(De))
      )) {
        const bt = wt(Ft, 7);
        Xt(bt);
      }
    };
    return Xt(Et), u(G, ve, De, Ge);
  }, $e = (o) => {
    const D = pt(W(o.value), C.hours, C.minutes, Ke());
    t("date-update", D), b.value.enabled ? Qa(D, r, b.value.limit) : r.value = D, n(), tt().then(() => {
      f();
    });
  }, we = (o) => _.value.noDisabledRange ? Pn(a.value[0], o).some((G) => I(G)) : !1, le = () => {
    a.value = r.value ? r.value.slice() : [], a.value.length === 2 && !(_.value.fixedStart || _.value.fixedEnd) && (a.value = []);
  }, nt = (o, D) => {
    const G = [
      W(o.value),
      wt(W(o.value), +_.value.autoRange)
    ];
    X(G) ? (D && Ze(o.value), a.value = G) : t("invalid-date", o.value);
  }, Ze = (o) => {
    const D = ye(W(o)), G = me(W(o));
    if (L(0, D, G), g.value.count > 0)
      for (let ve = 1; ve < g.value.count; ve++) {
        const De = bl(
          Ae(W(o), { year: Y.value(ve - 1), month: H.value(ve - 1) })
        );
        L(ve, De.month, De.year);
      }
  }, ca = (o) => {
    if (we(o.value) || !F(o.value, r.value, _.value.fixedStart ? 0 : 1))
      return t("invalid-date", o.value);
    a.value = En(W(o.value), r, t, _);
  }, It = (o, D) => {
    if (le(), _.value.autoRange)
      return nt(o, D);
    if (_.value.fixedStart || _.value.fixedEnd)
      return ca(o);
    a.value[0] ? F(W(o.value), r.value) && !we(o.value) ? Ce(W(o.value), W(a.value[0])) ? (a.value.unshift(W(o.value)), t("range-end", a.value[0])) : (a.value[1] = W(o.value), t("range-end", a.value[1])) : (e.autoApply && t("auto-apply-invalid", o.value), t("invalid-date", o.value)) : (a.value[0] = W(o.value), t("range-start", a.value[0]));
  }, Ke = (o = !0) => e.enableSeconds ? Array.isArray(C.seconds) ? o ? C.seconds[0] : C.seconds[1] : C.seconds : 0, Nt = (o) => {
    a.value[o] = pt(
      a.value[o],
      C.hours[o],
      C.minutes[o],
      Ke(o !== 1)
    );
  }, fa = () => {
    var o, D;
    a.value[0] && a.value[1] && +((o = a.value) == null ? void 0 : o[0]) > +((D = a.value) == null ? void 0 : D[1]) && (a.value.reverse(), t("range-start", a.value[0]), t("range-end", a.value[1]));
  }, qt = () => {
    a.value.length && (a.value[0] && !a.value[1] ? Nt(0) : (Nt(0), Nt(1), n()), fa(), r.value = a.value.slice(), da(a.value, t, e.autoApply, e.modelAuto));
  }, va = (o, D = !1) => {
    if (I(o.value) || !o.current && e.hideOffsetDates)
      return t("invalid-date", o.value);
    if (v.value = JSON.parse(JSON.stringify(o)), !_.value.enabled)
      return $e(o);
    dn(C.hours) && dn(C.minutes) && !b.value.enabled && (It(o, D), qt());
  }, ma = (o, D) => {
    var ve;
    L(o, D.month, D.year, !0), g.value.count && !g.value.solo && c(o), t("update-month-year", { instance: o, month: D.month, year: D.year }), l(g.value.solo ? o : void 0);
    const G = (ve = e.flow) != null && ve.length ? e.flow[e.flowStep] : void 0;
    !D.fromNav && (G === Le.month || G === Le.year) && n();
  }, pa = (o, D) => {
    Nn({
      value: o,
      modelValue: r,
      range: _.value.enabled,
      timezone: D ? void 0 : T.value.timezone
    }), R(), e.multiCalendars && tt().then(() => J(!0));
  }, ga = () => {
    _.value.enabled ? r.value && Array.isArray(r.value) && r.value[0] ? r.value = Ce(W(), r.value[0]) ? [W(), r.value[0]] : [r.value[0], W()] : r.value = [W()] : r.value = W(), R();
  }, ya = () => {
    if (Array.isArray(r.value))
      if (b.value.enabled) {
        const o = ha();
        r.value[r.value.length - 1] = U(o);
      } else
        r.value = r.value.map((o, D) => o && U(o, D));
    else
      r.value = U(r.value);
    t("time-update");
  }, ha = () => Array.isArray(r.value) && r.value.length ? r.value[r.value.length - 1] : null;
  return {
    calendars: P,
    modelValue: r,
    month: Y,
    year: H,
    time: C,
    disabledTimesConfig: re,
    today: k,
    validateTime: se,
    getCalendarDays: ce,
    getMarker: x,
    handleScroll: pe,
    handleSwipe: N,
    handleArrow: s,
    selectDate: va,
    updateMonthYear: ma,
    presetDate: pa,
    selectCurrentDate: ga,
    updateTime: (o, D = !0, G = !1) => {
      B(o, D, G, ya);
    }
  };
}, Ur = { key: 0 }, jr = /* @__PURE__ */ Ee({
  __name: "DatePicker",
  props: {
    ...at
  },
  emits: [
    "tooltip-open",
    "tooltip-close",
    "mount",
    "update:internal-model-value",
    "update-flow-step",
    "reset-flow",
    "auto-apply",
    "focus-menu",
    "select-date",
    "range-start",
    "range-end",
    "invalid-fixed-range",
    "time-update",
    "am-pm-change",
    "time-picker-open",
    "time-picker-close",
    "recalculate-position",
    "update-month-year",
    "auto-apply-invalid",
    "date-update",
    "invalid-date",
    "overlay-toggle"
  ],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = e, {
      calendars: m,
      month: v,
      year: r,
      modelValue: P,
      time: C,
      disabledTimesConfig: k,
      today: g,
      validateTime: h,
      getCalendarDays: _,
      getMarker: j,
      handleArrow: T,
      handleScroll: O,
      handleSwipe: b,
      selectDate: E,
      updateMonthYear: I,
      presetDate: X,
      selectCurrentDate: F,
      updateTime: B
    } = zr(a, n, oe, w), U = At(), { setHoverDate: y, getDayClassData: ie, clearHoverDate: se } = jl(P, a), { defaultedMultiCalendars: re } = Pe(a), Y = te([]), H = te([]), ne = te(null), L = Qe(U, "calendar"), R = Qe(U, "monthYear"), p = Qe(U, "timePicker"), f = (s) => {
      a.shadow || n("mount", s);
    };
    rt(
      m,
      () => {
        a.shadow || setTimeout(() => {
          n("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const J = Z(() => (s) => _(v.value(s), r.value(s)).map((N) => ({
      ...N,
      days: N.days.map((x) => (x.marker = j(x), x.classData = ie(x), x))
    })));
    function oe(s) {
      var N;
      s || s === 0 ? (N = H.value[s]) == null || N.triggerTransition(v.value(s), r.value(s)) : H.value.forEach((x, q) => x.triggerTransition(v.value(q), r.value(q)));
    }
    function w() {
      n("update-flow-step");
    }
    const M = (s, N = !1) => {
      E(s, N), a.spaceConfirm && n("select-date");
    }, z = (s, N, x = 0) => {
      var q;
      (q = Y.value[x]) == null || q.toggleMonthPicker(s, N);
    }, d = (s, N, x = 0) => {
      var q;
      (q = Y.value[x]) == null || q.toggleYearPicker(s, N);
    }, S = (s, N, x) => {
      var q;
      (q = ne.value) == null || q.toggleTimePicker(s, N, x);
    }, $ = (s) => {
      if (!a.range) {
        const N = P.value ? P.value : g, x = s ? Fa(N, { weekStartsOn: 1 }) : pn(N, { weekStartsOn: 1 });
        E({
          value: x,
          current: ye(N) === v.value(0),
          text: "",
          classData: {}
        });
      }
    }, de = (s) => {
      var N;
      (N = Y.value[0]) == null || N.handleMonthYearChange(s, !0);
    }, c = (s) => {
      I(0, { month: v.value(0), year: r.value(0) + (s ? 1 : -1), fromNav: !0 });
    }, ae = (s, N) => {
      s === Le.time && n(`time-picker-${N ? "open" : "close"}`), n("overlay-toggle", { open: N, overlay: s });
    }, V = (s) => {
      n("overlay-toggle", { open: !1, overlay: s }), n("focus-menu");
    };
    return t({
      clearHoverDate: se,
      presetDate: X,
      selectCurrentDate: F,
      toggleMonthPicker: z,
      toggleYearPicker: d,
      toggleTimePicker: S,
      handleArrow: T,
      updateMonthYear: I,
      getSidebarProps: () => ({
        modelValue: P,
        month: v,
        year: r,
        time: C,
        updateTime: B,
        updateMonthYear: I,
        selectDate: E,
        presetDate: X
      }),
      changeMonth: de,
      changeYear: c,
      selectWeekDate: $
    }), (s, N) => (A(), Q(be, null, [
      Je(ia, {
        "multi-calendars": i(re).count,
        collapse: s.collapse
      }, {
        default: ge(({ instance: x, index: q }) => [
          s.disableMonthYearSelect ? ee("", !0) : (A(), ke(Or, Ne({
            key: 0,
            ref: (u) => {
              u && (Y.value[q] = u);
            },
            months: i(Dn)(s.formatLocale, s.locale, s.monthNameFormat),
            years: i(Ua)(s.yearRange, s.locale, s.reverseYears),
            month: i(v)(x),
            year: i(r)(x),
            instance: x
          }, s.$props, {
            onMount: N[0] || (N[0] = (u) => f(i(Dt).header)),
            onResetFlow: N[1] || (N[1] = (u) => s.$emit("reset-flow")),
            onUpdateMonthYear: (u) => i(I)(x, u),
            onOverlayClosed: V,
            onOverlayOpened: N[2] || (N[2] = (u) => s.$emit("overlay-toggle", { open: !0, overlay: u }))
          }), Ve({ _: 2 }, [
            Se(i(R), (u, K) => ({
              name: u,
              fn: ge((ce) => [
                ue(s.$slots, u, Ie(Ue(ce)))
              ])
            }))
          ]), 1040, ["months", "years", "month", "year", "instance", "onUpdateMonthYear"])),
          Je(Wr, Ne({
            ref: (u) => {
              u && (H.value[q] = u);
            },
            "mapped-dates": J.value(x),
            month: i(v)(x),
            year: i(r)(x),
            instance: x
          }, s.$props, {
            onSelectDate: (u) => i(E)(u, x !== 1),
            onHandleSpace: (u) => M(u, x !== 1),
            onSetHoverDate: N[3] || (N[3] = (u) => i(y)(u)),
            onHandleScroll: (u) => i(O)(u, x),
            onHandleSwipe: (u) => i(b)(u, x),
            onMount: N[4] || (N[4] = (u) => f(i(Dt).calendar)),
            onResetFlow: N[5] || (N[5] = (u) => s.$emit("reset-flow")),
            onTooltipOpen: N[6] || (N[6] = (u) => s.$emit("tooltip-open", u)),
            onTooltipClose: N[7] || (N[7] = (u) => s.$emit("tooltip-close", u))
          }), Ve({ _: 2 }, [
            Se(i(L), (u, K) => ({
              name: u,
              fn: ge((ce) => [
                ue(s.$slots, u, Ie(Ue({ ...ce })))
              ])
            }))
          ]), 1040, ["mapped-dates", "month", "year", "instance", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
        ]),
        _: 3
      }, 8, ["multi-calendars", "collapse"]),
      s.enableTimePicker ? (A(), Q("div", Ur, [
        s.$slots["time-picker"] ? ue(s.$slots, "time-picker", Ie(Ne({ key: 0 }, { time: i(C), updateTime: i(B) }))) : (A(), ke(Ln, Ne({
          key: 1,
          ref_key: "timePickerRef",
          ref: ne
        }, s.$props, {
          hours: i(C).hours,
          minutes: i(C).minutes,
          seconds: i(C).seconds,
          "internal-model-value": s.internalModelValue,
          "disabled-times-config": i(k),
          "validate-time": i(h),
          onMount: N[8] || (N[8] = (x) => f(i(Dt).timePicker)),
          "onUpdate:hours": N[9] || (N[9] = (x) => i(B)(x)),
          "onUpdate:minutes": N[10] || (N[10] = (x) => i(B)(x, !1)),
          "onUpdate:seconds": N[11] || (N[11] = (x) => i(B)(x, !1, !0)),
          onResetFlow: N[12] || (N[12] = (x) => s.$emit("reset-flow")),
          onOverlayClosed: N[13] || (N[13] = (x) => ae(x, !1)),
          onOverlayOpened: N[14] || (N[14] = (x) => ae(x, !0)),
          onAmPmChange: N[15] || (N[15] = (x) => s.$emit("am-pm-change", x))
        }), Ve({ _: 2 }, [
          Se(i(p), (x, q) => ({
            name: x,
            fn: ge((u) => [
              ue(s.$slots, x, Ie(Ue(u)))
            ])
          }))
        ]), 1040, ["hours", "minutes", "seconds", "internal-model-value", "disabled-times-config", "validate-time"]))
      ])) : ee("", !0)
    ], 64));
  }
}), Kr = (e, t) => {
  const l = te(), {
    defaultedMultiCalendars: n,
    defaultedConfig: a,
    defaultedHighlight: m,
    defaultedRange: v,
    propDates: r,
    defaultedFilters: P,
    defaultedMultiDates: C
  } = Pe(e), { modelValue: k, year: g, month: h, calendars: _ } = Gt(e, t), { isDisabled: j } = ht(e), { selectYear: T, groupedYears: O, showYearPicker: b, isDisabled: E, toggleYearPicker: I, handleYearSelect: X, handleYear: F } = Fn({
    modelValue: k,
    multiCalendars: n,
    highlight: m,
    calendars: _,
    propDates: r,
    month: h,
    year: g,
    filters: P,
    props: e,
    emit: t
  }), B = (p, f) => [p, f].map((J) => ot(J, "MMMM", { locale: e.formatLocale })).join("-"), U = Z(() => (p) => k.value ? Array.isArray(k.value) ? k.value.some((f) => xa(p, f)) : xa(k.value, p) : !1), y = (p) => {
    if (v.value.enabled) {
      if (Array.isArray(k.value)) {
        const f = he(p, k.value[0]) || he(p, k.value[1]);
        return oa(k.value, l.value, p) && !f;
      }
      return !1;
    }
    return !1;
  }, ie = (p, f) => p.quarter === tn(f) && p.year === me(f), se = (p) => typeof m.value == "function" ? m.value({ quarter: tn(p), year: me(p) }) : !!m.value.quarters.find((f) => ie(f, p)), re = Z(() => (p) => {
    const f = Ae(/* @__PURE__ */ new Date(), { year: g.value(p) });
    return nl({
      start: bn(f),
      end: hn(f)
    }).map((J) => {
      const oe = ll(J), w = en(J), M = j(J), z = y(oe), d = se(oe);
      return {
        text: B(oe, w),
        value: oe,
        active: U.value(oe),
        highlighted: d,
        disabled: M,
        isBetween: z
      };
    });
  }), Y = (p) => {
    Qa(p, k, C.value.limit), t("auto-apply", !0);
  }, H = (p) => {
    k.value = qa(k, p, t), da(k.value, t, e.autoApply, e.modelAuto);
  }, ne = (p) => {
    k.value = p, t("auto-apply");
  };
  return {
    defaultedConfig: a,
    defaultedMultiCalendars: n,
    groupedYears: O,
    year: g,
    isDisabled: E,
    quarters: re,
    showYearPicker: b,
    modelValue: k,
    setHoverDate: (p) => {
      l.value = p;
    },
    selectYear: T,
    selectQuarter: (p, f, J) => {
      if (!J)
        return _.value[f].month = ye(en(p)), C.value.enabled ? Y(p) : v.value.enabled ? H(p) : ne(p);
    },
    toggleYearPicker: I,
    handleYearSelect: X,
    handleYear: F
  };
}, Gr = { class: "dp--quarter-items" }, Qr = ["data-test", "disabled", "onClick", "onMouseover"], qr = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "QuarterPicker",
  props: {
    ...at
  },
  emits: [
    "update:internal-model-value",
    "reset-flow",
    "overlay-closed",
    "auto-apply",
    "range-start",
    "range-end",
    "overlay-toggle",
    "update-month-year"
  ],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = e, m = At(), v = Qe(m, "yearMode"), {
      defaultedMultiCalendars: r,
      defaultedConfig: P,
      groupedYears: C,
      year: k,
      isDisabled: g,
      quarters: h,
      modelValue: _,
      showYearPicker: j,
      setHoverDate: T,
      selectQuarter: O,
      toggleYearPicker: b,
      handleYearSelect: E,
      handleYear: I
    } = Kr(a, n);
    return t({ getSidebarProps: () => ({
      modelValue: _,
      year: k,
      selectQuarter: O,
      handleYearSelect: E,
      handleYear: I
    }) }), (F, B) => (A(), ke(ia, {
      "multi-calendars": i(r).count,
      collapse: F.collapse,
      stretch: ""
    }, {
      default: ge(({ instance: U }) => [
        fe("div", {
          class: "dp-quarter-picker-wrap",
          style: Xe({ minHeight: `${i(P).modeHeight}px` })
        }, [
          F.$slots["top-extra"] ? ue(F.$slots, "top-extra", {
            key: 0,
            value: F.internalModelValue
          }) : ee("", !0),
          fe("div", null, [
            Je(In, Ne(F.$props, {
              items: i(C)(U),
              instance: U,
              "show-year-picker": i(j)[U],
              year: i(k)(U),
              "is-disabled": (y) => i(g)(U, y),
              onHandleYear: (y) => i(I)(U, y),
              onYearSelect: (y) => i(E)(y, U),
              onToggleYearPicker: (y) => i(b)(U, y == null ? void 0 : y.flow, y == null ? void 0 : y.show)
            }), Ve({ _: 2 }, [
              Se(i(v), (y, ie) => ({
                name: y,
                fn: ge((se) => [
                  ue(F.$slots, y, Ie(Ue(se)))
                ])
              }))
            ]), 1040, ["items", "instance", "show-year-picker", "year", "is-disabled", "onHandleYear", "onYearSelect", "onToggleYearPicker"])
          ]),
          fe("div", Gr, [
            (A(!0), Q(be, null, Se(i(h)(U), (y, ie) => (A(), Q("div", { key: ie }, [
              fe("button", {
                type: "button",
                class: Me(["dp--qr-btn", {
                  "dp--qr-btn-active": y.active,
                  "dp--qr-btn-between": y.isBetween,
                  "dp--qr-btn-disabled": y.disabled,
                  "dp--highlighted": y.highlighted
                }]),
                "data-test": y.value,
                disabled: y.disabled,
                onClick: (se) => i(O)(y.value, U, y.disabled),
                onMouseover: (se) => i(T)(y.value)
              }, [
                F.$slots.quarter ? ue(F.$slots, "quarter", {
                  key: 0,
                  value: y.value,
                  text: y.text
                }) : (A(), Q(be, { key: 1 }, [
                  dt(He(y.text), 1)
                ], 64))
              ], 42, Qr)
            ]))), 128))
          ])
        ], 4)
      ]),
      _: 3
    }, 8, ["multi-calendars", "collapse"]));
  }
}), Xr = ["id", "aria-label"], Jr = {
  key: 0,
  class: "dp--menu-load-container"
}, Zr = /* @__PURE__ */ fe("span", { class: "dp--menu-loader" }, null, -1), xr = [
  Zr
], eo = {
  key: 0,
  class: "dp__sidebar_left"
}, to = ["data-test", "onClick", "onKeydown"], ao = {
  key: 2,
  class: "dp__sidebar_right"
}, no = {
  key: 3,
  class: "dp__action_extra"
}, cn = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "DatepickerMenu",
  props: {
    ...ua,
    shadow: { type: Boolean, default: !1 },
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    noOverlayFocus: { type: Boolean, default: !1 },
    collapse: { type: Boolean, default: !1 },
    getInputRect: { type: Function, default: () => ({}) }
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end",
    "auto-apply-invalid",
    "date-update",
    "invalid-date",
    "overlay-toggle"
  ],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = e, m = te(null), v = Z(() => {
      const { openOnTop: u, ...K } = a;
      return {
        ...K,
        flowStep: y.value,
        collapse: a.collapse,
        noOverlayFocus: a.noOverlayFocus,
        menuWrapRef: m.value
      };
    }), { setMenuFocused: r, setShiftKey: P, control: C } = Yn(), k = At(), { defaultedTextInput: g, defaultedInline: h, defaultedConfig: _ } = Pe(a), j = te(null), T = te(0), O = te(null), b = te(!1), E = te(null);
    We(() => {
      if (!a.shadow) {
        b.value = !0, I(), window.addEventListener("resize", I);
        const u = Ye(m);
        if (u && !g.value.enabled && !h.value.enabled && (r(!0), ne()), u) {
          const K = (ce) => {
            _.value.allowPreventDefault && ce.preventDefault(), mt(ce, _.value, !0);
          };
          u.addEventListener("pointerdown", K), u.addEventListener("mousedown", K);
        }
      }
    }), la(() => {
      window.removeEventListener("resize", I);
    });
    const I = () => {
      const u = Ye(O);
      u && (T.value = u.getBoundingClientRect().width);
    }, { arrowRight: X, arrowLeft: F, arrowDown: B, arrowUp: U } = yt(), { flowStep: y, updateFlowStep: ie, childMount: se, resetFlow: re } = Kl(a, n, E), Y = Z(() => a.monthPicker ? sr : a.yearPicker ? ir : a.timePicker ? Tr : a.quarterPicker ? qr : jr), H = Z(() => {
      var ce;
      if (_.value.arrowLeft)
        return _.value.arrowLeft;
      const u = (ce = m.value) == null ? void 0 : ce.getBoundingClientRect(), K = a.getInputRect();
      return K.width < T.value && K.left <= ((u == null ? void 0 : u.left) ?? 0) ? `${K.width / 2}px` : "50%";
    }), ne = () => {
      const u = Ye(m);
      u && u.focus({ preventScroll: !0 });
    }, L = Z(() => {
      var u;
      return ((u = E.value) == null ? void 0 : u.getSidebarProps()) || {};
    }), R = () => {
      a.openOnTop && n("recalculate-position");
    }, p = Qe(k, "action"), f = Z(() => a.monthPicker || a.yearPicker ? Qe(k, "monthYear") : a.timePicker ? Qe(k, "timePicker") : Qe(k, "shared")), J = Z(() => a.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), oe = Z(() => ({
      dp__menu_disabled: a.disabled,
      dp__menu_readonly: a.readonly,
      "dp-menu-loading": a.loading
    })), w = Z(
      () => ({
        dp__menu: !0,
        dp__menu_index: !h.value.enabled,
        dp__relative: h.value.enabled,
        [a.menuClassName]: !!a.menuClassName
      })
    ), M = (u) => {
      mt(u, _.value, !0);
    }, z = () => {
      a.escClose && n("close-picker");
    }, d = (u) => {
      if (a.arrowNavigation) {
        if (u === ze.up)
          return U();
        if (u === ze.down)
          return B();
        if (u === ze.left)
          return F();
        if (u === ze.right)
          return X();
      } else
        u === ze.right || u === ze.up ? ae("handleArrow", ze.left, 0, u === ze.up) : ae("handleArrow", ze.right, 0, u === ze.down);
    }, S = (u) => {
      P(u.shiftKey), !a.disableMonthYearSelect && u.code === Re.tab && u.target.classList.contains("dp__menu") && C.value.shiftKeyInMenu && (u.preventDefault(), mt(u, _.value, !0), n("close-picker"));
    }, $ = () => {
      ne(), n("time-picker-close");
    }, de = (u) => {
      var K, ce, $e;
      (K = E.value) == null || K.toggleTimePicker(!1, !1), (ce = E.value) == null || ce.toggleMonthPicker(!1, !1, u), ($e = E.value) == null || $e.toggleYearPicker(!1, !1, u);
    }, c = (u, K = 0) => {
      var ce, $e, we;
      return u === "month" ? (ce = E.value) == null ? void 0 : ce.toggleMonthPicker(!1, !0, K) : u === "year" ? ($e = E.value) == null ? void 0 : $e.toggleYearPicker(!1, !0, K) : u === "time" ? (we = E.value) == null ? void 0 : we.toggleTimePicker(!0, !1) : de(K);
    }, ae = (u, ...K) => {
      var ce, $e;
      (ce = E.value) != null && ce[u] && (($e = E.value) == null || $e[u](...K));
    }, V = () => {
      ae("selectCurrentDate");
    }, pe = (u, K) => {
      ae("presetDate", u, K);
    }, s = () => {
      ae("clearHoverDate");
    }, N = (u, K) => {
      ae("updateMonthYear", u, K);
    }, x = (u, K) => {
      u.preventDefault(), d(K);
    }, q = (u) => {
      if (S(u), u.key === Re.home || u.key === Re.end)
        return ae("selectWeekDate", u.key === Re.home);
      if (u.key === Re.pageUp || u.key === Re.pageDown)
        return u.shiftKey ? ae("changeYear", u.key === Re.pageUp) : ae("changeMonth", u.key === Re.pageUp);
      switch (u.key) {
        case Re.esc:
          return z();
        case Re.arrowLeft:
          return x(u, ze.left);
        case Re.arrowRight:
          return x(u, ze.right);
        case Re.arrowUp:
          return x(u, ze.up);
        case Re.arrowDown:
          return x(u, ze.down);
        default:
          return;
      }
    };
    return t({
      updateMonthYear: N,
      switchView: c
    }), (u, K) => {
      var ce, $e, we;
      return A(), Q("div", {
        id: u.uid ? `dp-menu-${u.uid}` : void 0,
        ref_key: "dpMenuRef",
        ref: m,
        tabindex: "0",
        role: "dialog",
        "aria-label": (ce = u.ariaLabels) == null ? void 0 : ce.menu,
        class: Me(w.value),
        style: Xe({ "--dp-arrow-left": H.value }),
        onMouseleave: s,
        onClick: M,
        onKeydown: q
      }, [
        (u.disabled || u.readonly) && i(h).enabled || u.loading ? (A(), Q("div", {
          key: 0,
          class: Me(oe.value)
        }, [
          u.loading ? (A(), Q("div", Jr, xr)) : ee("", !0)
        ], 2)) : ee("", !0),
        !i(h).enabled && !u.teleportCenter ? (A(), Q("div", {
          key: 1,
          class: Me(J.value)
        }, null, 2)) : ee("", !0),
        fe("div", {
          ref_key: "innerMenuRef",
          ref: O,
          class: Me({
            dp__menu_content_wrapper: (($e = u.presetDates) == null ? void 0 : $e.length) || !!u.$slots["left-sidebar"] || !!u.$slots["right-sidebar"],
            "dp--menu-content-wrapper-collapsed": e.collapse && (((we = u.presetDates) == null ? void 0 : we.length) || !!u.$slots["left-sidebar"] || !!u.$slots["right-sidebar"])
          }),
          style: Xe({ "--dp-menu-width": `${T.value}px` })
        }, [
          u.$slots["left-sidebar"] ? (A(), Q("div", eo, [
            ue(u.$slots, "left-sidebar", Ie(Ue(L.value)))
          ])) : ee("", !0),
          u.presetDates.length ? (A(), Q("div", {
            key: 1,
            class: Me({ "dp--preset-dates-collapsed": e.collapse, "dp--preset-dates": !0 })
          }, [
            (A(!0), Q(be, null, Se(u.presetDates, (le, nt) => (A(), Q(be, { key: nt }, [
              le.slot ? ue(u.$slots, le.slot, {
                key: 0,
                presetDate: pe,
                label: le.label,
                value: le.value
              }) : (A(), Q("button", {
                key: 1,
                type: "button",
                style: Xe(le.style || {}),
                class: Me(["dp__btn dp--preset-range", { "dp--preset-range-collapsed": e.collapse }]),
                "data-test": le.testId ?? void 0,
                onClick: Ia((Ze) => pe(le.value, le.noTz), ["prevent"]),
                onKeydown: (Ze) => i(je)(Ze, () => pe(le.value, le.noTz), !0)
              }, He(le.label), 47, to))
            ], 64))), 128))
          ], 2)) : ee("", !0),
          fe("div", {
            ref_key: "calendarWrapperRef",
            ref: j,
            class: "dp__instance_calendar",
            role: "document"
          }, [
            (A(), ke(ra(Y.value), Ne({
              ref_key: "dynCmpRef",
              ref: E
            }, v.value, {
              "flow-step": i(y),
              onMount: i(se),
              onUpdateFlowStep: i(ie),
              onResetFlow: i(re),
              onFocusMenu: ne,
              onSelectDate: K[0] || (K[0] = (le) => u.$emit("select-date")),
              onDateUpdate: K[1] || (K[1] = (le) => u.$emit("date-update", le)),
              onTooltipOpen: K[2] || (K[2] = (le) => u.$emit("tooltip-open", le)),
              onTooltipClose: K[3] || (K[3] = (le) => u.$emit("tooltip-close", le)),
              onAutoApply: K[4] || (K[4] = (le) => u.$emit("auto-apply", le)),
              onRangeStart: K[5] || (K[5] = (le) => u.$emit("range-start", le)),
              onRangeEnd: K[6] || (K[6] = (le) => u.$emit("range-end", le)),
              onInvalidFixedRange: K[7] || (K[7] = (le) => u.$emit("invalid-fixed-range", le)),
              onTimeUpdate: K[8] || (K[8] = (le) => u.$emit("time-update")),
              onAmPmChange: K[9] || (K[9] = (le) => u.$emit("am-pm-change", le)),
              onTimePickerOpen: K[10] || (K[10] = (le) => u.$emit("time-picker-open", le)),
              onTimePickerClose: $,
              onRecalculatePosition: R,
              onUpdateMonthYear: K[11] || (K[11] = (le) => u.$emit("update-month-year", le)),
              onAutoApplyInvalid: K[12] || (K[12] = (le) => u.$emit("auto-apply-invalid", le)),
              onInvalidDate: K[13] || (K[13] = (le) => u.$emit("invalid-date", le)),
              onOverlayToggle: K[14] || (K[14] = (le) => u.$emit("overlay-toggle", le)),
              "onUpdate:internalModelValue": K[15] || (K[15] = (le) => u.$emit("update:internal-model-value", le))
            }), Ve({ _: 2 }, [
              Se(f.value, (le, nt) => ({
                name: le,
                fn: ge((Ze) => [
                  ue(u.$slots, le, Ie(Ue({ ...Ze })))
                ])
              }))
            ]), 1040, ["flow-step", "onMount", "onUpdateFlowStep", "onResetFlow"]))
          ], 512),
          u.$slots["right-sidebar"] ? (A(), Q("div", ao, [
            ue(u.$slots, "right-sidebar", Ie(Ue(L.value)))
          ])) : ee("", !0),
          u.$slots["action-extra"] ? (A(), Q("div", no, [
            u.$slots["action-extra"] ? ue(u.$slots, "action-extra", {
              key: 0,
              selectCurrentDate: V
            }) : ee("", !0)
          ])) : ee("", !0)
        ], 6),
        !u.autoApply || i(_).keepActionRow ? (A(), ke(xl, Ne({
          key: 2,
          "menu-mount": b.value
        }, v.value, {
          "calendar-width": T.value,
          onClosePicker: K[16] || (K[16] = (le) => u.$emit("close-picker")),
          onSelectDate: K[17] || (K[17] = (le) => u.$emit("select-date")),
          onInvalidSelect: K[18] || (K[18] = (le) => u.$emit("invalid-select")),
          onSelectNow: V
        }), Ve({ _: 2 }, [
          Se(i(p), (le, nt) => ({
            name: le,
            fn: ge((Ze) => [
              ue(u.$slots, le, Ie(Ue({ ...Ze })))
            ])
          }))
        ]), 1040, ["menu-mount", "calendar-width"])) : ee("", !0)
      ], 46, Xr);
    };
  }
}), lo = typeof window < "u" ? window : void 0, _a = () => {
}, ro = (e) => Kn() ? (Gn(e), !0) : !1, oo = (e, t, l, n) => {
  if (!e)
    return _a;
  let a = _a;
  const m = rt(
    () => i(e),
    (r) => {
      a(), r && (r.addEventListener(t, l, n), a = () => {
        r.removeEventListener(t, l, n), a = _a;
      });
    },
    { immediate: !0, flush: "post" }
  ), v = () => {
    m(), a();
  };
  return ro(v), v;
}, so = (e, t, l, n = {}) => {
  const { window: a = lo, event: m = "pointerdown" } = n;
  return a ? oo(a, m, (r) => {
    const P = Ye(e), C = Ye(t);
    !P || !C || P === r.target || r.composedPath().includes(P) || r.composedPath().includes(C) || l(r);
  }, { passive: !0 }) : void 0;
}, uo = /* @__PURE__ */ Ee({
  compatConfig: {
    MODE: 3
  },
  __name: "VueDatePicker",
  props: {
    ...ua
  },
  emits: [
    "update:model-value",
    "update:model-timezone-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end",
    "date-update",
    "invalid-date",
    "overlay-toggle"
  ],
  setup(e, { expose: t, emit: l }) {
    const n = l, a = e, m = At(), v = te(!1), r = Vt(a, "modelValue"), P = Vt(a, "timezone"), C = te(null), k = te(null), g = te(null), h = te(!1), _ = te(null), j = te(!1), T = te(!1), O = te(!1), { setMenuFocused: b, setShiftKey: E } = Yn(), { clearArrowNav: I } = yt(), { validateDate: X, isValidTime: F } = ht(a), {
      defaultedTransitions: B,
      defaultedTextInput: U,
      defaultedInline: y,
      defaultedConfig: ie,
      defaultedRange: se,
      defaultedMultiDates: re
    } = Pe(a), { menuTransition: Y, showTransition: H } = Kt(B);
    We(() => {
      d(a.modelValue), tt().then(() => {
        if (!y.value.enabled) {
          const o = oe(_.value);
          o == null || o.addEventListener("scroll", x), window == null || window.addEventListener("resize", q);
        }
      }), y.value.enabled && (v.value = !0), window == null || window.addEventListener("keyup", u), window == null || window.addEventListener("keydown", K);
    }), la(() => {
      if (!y.value.enabled) {
        const o = oe(_.value);
        o == null || o.removeEventListener("scroll", x), window == null || window.removeEventListener("resize", q);
      }
      window == null || window.removeEventListener("keyup", u), window == null || window.removeEventListener("keydown", K);
    });
    const ne = Qe(m, "all", a.presetDates), L = Qe(m, "input");
    rt(
      [r, P],
      () => {
        d(r.value);
      },
      { deep: !0 }
    );
    const { openOnTop: R, menuStyle: p, xCorrect: f, setMenuPosition: J, getScrollableParent: oe, shadowRender: w } = Wl({
      menuRef: C,
      menuRefInner: k,
      inputRef: g,
      pickerWrapperRef: _,
      inline: y,
      emit: n,
      props: a,
      slots: m
    }), {
      inputValue: M,
      internalModelValue: z,
      parseExternalModelValue: d,
      emitModelValue: S,
      formatInputValue: $,
      checkBeforeEmit: de
    } = Hl(n, a, h), c = Z(
      () => ({
        dp__main: !0,
        dp__theme_dark: a.dark,
        dp__theme_light: !a.dark,
        dp__flex_display: y.value.enabled,
        "dp--flex-display-collapsed": O.value,
        dp__flex_display_with_input: y.value.input
      })
    ), ae = Z(() => a.dark ? "dp__theme_dark" : "dp__theme_light"), V = Z(() => a.teleport ? {
      to: typeof a.teleport == "boolean" ? "body" : a.teleport,
      disabled: !a.teleport || y.value.enabled
    } : {}), pe = Z(() => ({ class: "dp__outer_menu_wrap" })), s = Z(() => y.value.enabled && (a.timePicker || a.monthPicker || a.yearPicker || a.quarterPicker)), N = () => {
      var o, D;
      return (D = (o = g.value) == null ? void 0 : o.$el) == null ? void 0 : D.getBoundingClientRect();
    }, x = () => {
      v.value && (ie.value.closeOnScroll ? Ke() : J());
    }, q = () => {
      var D;
      v.value && J();
      const o = (D = k.value) == null ? void 0 : D.$el.getBoundingClientRect().width;
      O.value = document.body.offsetWidth <= o;
    }, u = (o) => {
      o.key === "Tab" && !y.value.enabled && !a.teleport && ie.value.tabOutClosesMenu && (_.value.contains(document.activeElement) || Ke()), T.value = o.shiftKey;
    }, K = (o) => {
      T.value = o.shiftKey;
    }, ce = () => {
      !a.disabled && !a.readonly && (w(cn, a), J(!1), v.value = !0, v.value && n("open"), v.value || It(), d(a.modelValue));
    }, $e = () => {
      var o;
      M.value = "", It(), (o = g.value) == null || o.setParsedDate(null), n("update:model-value", null), n("update:model-timezone-value", null), n("cleared"), ie.value.closeOnClearValue && Ke();
    }, we = () => {
      const o = z.value;
      return !o || !Array.isArray(o) && X(o) ? !0 : Array.isArray(o) ? re.value.enabled || o.length === 2 && X(o[0]) && X(o[1]) ? !0 : se.value.partialRange && !a.timePicker ? X(o[0]) : !1 : !1;
    }, le = () => {
      de() && we() ? (S(), Ke()) : n("invalid-select", z.value);
    }, nt = (o) => {
      Ze(), S(), ie.value.closeOnAutoApply && !o && Ke();
    }, Ze = () => {
      g.value && U.value.enabled && g.value.setParsedDate(z.value);
    }, ca = (o = !1) => {
      a.autoApply && F(z.value) && we() && (se.value.enabled && Array.isArray(z.value) ? (se.value.partialRange || z.value.length === 2) && nt(o) : nt(o));
    }, It = () => {
      U.value.enabled || (z.value = null);
    }, Ke = () => {
      y.value.enabled || (v.value && (v.value = !1, f.value = !1, b(!1), E(!1), I(), n("closed"), M.value && d(r.value)), It(), n("blur"));
    }, Nt = (o, D, G = !1) => {
      if (!o) {
        z.value = null;
        return;
      }
      const ve = Array.isArray(o) ? !o.some((Ge) => !X(Ge)) : X(o), De = F(o);
      ve && De && (z.value = o, D && (j.value = G, le(), n("text-submit")));
    }, fa = () => {
      a.autoApply && F(z.value) && S(), Ze();
    }, qt = () => v.value ? Ke() : ce(), va = (o) => {
      z.value = o;
    }, ma = () => {
      U.value.enabled && (h.value = !0, $()), n("focus");
    }, pa = () => {
      if (U.value.enabled && (h.value = !1, d(a.modelValue), j.value)) {
        const o = ml(_.value, T.value);
        o == null || o.focus();
      }
      n("blur");
    }, ga = (o) => {
      k.value && k.value.updateMonthYear(0, {
        month: nn(o.month),
        year: nn(o.year)
      });
    }, ya = (o) => {
      d(o ?? a.modelValue);
    }, ha = (o, D) => {
      var G;
      (G = k.value) == null || G.switchView(o, D);
    }, Xa = (o) => ie.value.onClickOutside ? ie.value.onClickOutside(o) : Ke();
    return so(C, g, () => Xa(we)), t({
      closeMenu: Ke,
      selectDate: le,
      clearValue: $e,
      openMenu: ce,
      onScroll: x,
      formatInputValue: $,
      // exposed for testing purposes
      updateInternalModelValue: va,
      // modify internal modelValue
      setMonthYear: ga,
      parseModel: ya,
      switchView: ha,
      toggleMenu: qt
    }), (o, D) => (A(), Q("div", {
      ref_key: "pickerWrapperRef",
      ref: _,
      class: Me(c.value),
      "data-datepicker-instance": ""
    }, [
      Je(Xl, Ne({
        ref_key: "inputRef",
        ref: g,
        "input-value": i(M),
        "onUpdate:inputValue": D[0] || (D[0] = (G) => Za(M) ? M.value = G : null),
        "is-menu-open": v.value
      }, o.$props, {
        onClear: $e,
        onOpen: ce,
        onSetInputDate: Nt,
        onSetEmptyDate: i(S),
        onSelectDate: le,
        onToggle: qt,
        onClose: Ke,
        onFocus: ma,
        onBlur: pa,
        onRealBlur: D[1] || (D[1] = (G) => h.value = !1)
      }), Ve({ _: 2 }, [
        Se(i(L), (G, ve) => ({
          name: G,
          fn: ge((De) => [
            ue(o.$slots, G, Ie(Ue(De)))
          ])
        }))
      ]), 1040, ["input-value", "is-menu-open", "onSetEmptyDate"]),
      (A(), ke(ra(o.teleport ? Qn : "div"), Ie(Ue(V.value)), {
        default: ge(() => [
          Je(Bt, {
            name: i(Y)(i(R)),
            css: i(H) && !i(y).enabled
          }, {
            default: ge(() => [
              v.value ? (A(), Q("div", Ne({
                key: 0,
                ref_key: "dpWrapMenuRef",
                ref: C
              }, pe.value, {
                class: { "dp--menu-wrapper": !i(y).enabled },
                style: i(y).enabled ? void 0 : i(p)
              }), [
                Je(cn, Ne({
                  ref_key: "dpMenuRef",
                  ref: k
                }, o.$props, {
                  "internal-model-value": i(z),
                  "onUpdate:internalModelValue": D[2] || (D[2] = (G) => Za(z) ? z.value = G : null),
                  class: { [ae.value]: !0, "dp--menu-wrapper": o.teleport },
                  "open-on-top": i(R),
                  "no-overlay-focus": s.value,
                  collapse: O.value,
                  "get-input-rect": N,
                  onClosePicker: Ke,
                  onSelectDate: le,
                  onAutoApply: ca,
                  onTimeUpdate: fa,
                  onFlowStep: D[3] || (D[3] = (G) => o.$emit("flow-step", G)),
                  onUpdateMonthYear: D[4] || (D[4] = (G) => o.$emit("update-month-year", G)),
                  onInvalidSelect: D[5] || (D[5] = (G) => o.$emit("invalid-select", i(z))),
                  onAutoApplyInvalid: D[6] || (D[6] = (G) => o.$emit("invalid-select", G)),
                  onInvalidFixedRange: D[7] || (D[7] = (G) => o.$emit("invalid-fixed-range", G)),
                  onRecalculatePosition: i(J),
                  onTooltipOpen: D[8] || (D[8] = (G) => o.$emit("tooltip-open", G)),
                  onTooltipClose: D[9] || (D[9] = (G) => o.$emit("tooltip-close", G)),
                  onTimePickerOpen: D[10] || (D[10] = (G) => o.$emit("time-picker-open", G)),
                  onTimePickerClose: D[11] || (D[11] = (G) => o.$emit("time-picker-close", G)),
                  onAmPmChange: D[12] || (D[12] = (G) => o.$emit("am-pm-change", G)),
                  onRangeStart: D[13] || (D[13] = (G) => o.$emit("range-start", G)),
                  onRangeEnd: D[14] || (D[14] = (G) => o.$emit("range-end", G)),
                  onDateUpdate: D[15] || (D[15] = (G) => o.$emit("date-update", G)),
                  onInvalidDate: D[16] || (D[16] = (G) => o.$emit("invalid-date", G)),
                  onOverlayToggle: D[17] || (D[17] = (G) => o.$emit("overlay-toggle", G))
                }), Ve({ _: 2 }, [
                  Se(i(ne), (G, ve) => ({
                    name: G,
                    fn: ge((De) => [
                      ue(o.$slots, G, Ie(Ue({ ...De })))
                    ])
                  }))
                ]), 1040, ["internal-model-value", "class", "open-on-top", "no-overlay-focus", "collapse", "onRecalculatePosition"])
              ], 16)) : ee("", !0)
            ]),
            _: 3
          }, 8, ["name", "css"])
        ]),
        _: 3
      }, 16))
    ], 2));
  }
}), Vn = /* @__PURE__ */ (() => {
  const e = uo;
  return e.install = (t) => {
    t.component("Vue3DatePicker", e);
  }, e;
})(), io = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Vn
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(io).forEach(([e, t]) => {
  e !== "default" && (Vn[e] = t);
});
export {
  Vn as default
};
