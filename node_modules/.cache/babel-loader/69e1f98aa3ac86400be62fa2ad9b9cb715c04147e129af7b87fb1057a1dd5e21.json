{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      username: [],\n      Password: [],\n      selectedDateGoals: [],\n      workingHours: []\n    };\n  },\n  computed: {\n    userData() {\n      return this.$store.getters.getUserData;\n    }\n  },\n  created() {\n    axios.get(\"http://localhost:5296/api/Todoapp/GetNotes\").then(response => {\n      this.selectedDateGoals = response.data;\n      this.calculateWorkingHours();\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  },\n  methods: {\n    calculateWorkingHours() {\n      this.workingHours = this.selectedDateGoals.map(goal => {\n        const inTime1 = parseFloat(goal.Intime1.replace(\":\", \".\"));\n        const outTime1 = parseFloat(goal.Outtime1.replace(\":\", \".\"));\n        const inTime2 = parseFloat(goal.Intime2.replace(\":\", \".\"));\n        const outTime2 = parseFloat(goal.Outtime2.replace(\":\", \".\"));\n        const totalHours = outTime1 - inTime1 + (outTime2 - inTime2);\n        //console.log(\"ðŸš€ ~ calculateWorkingHours ~ totalHours :\", totalHours )\n\n        return {\n          Date: goal.Date,\n          WorkingHours: totalHours.toFixed(1)\n        };\n      });\n    },\n    getDate(date) {\n      this.selectedDateGoals = this.selectedDateGoals.filter(goal => goal.Date === date);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","Password","selectedDateGoals","workingHours","computed","userData","$store","getters","getUserData","created","get","then","response","calculateWorkingHours","catch","error","console","methods","map","goal","inTime1","parseFloat","Intime1","replace","outTime1","Outtime1","inTime2","Intime2","outTime2","Outtime2","totalHours","Date","WorkingHours","toFixed","getDate","date","filter"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\hrmsAttendenceLevel.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"table table-bordered\" >\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(hour, index) in workingHours\" :key=\"index\">\r\n          <td @click=\"getDate(hour.Date)\">{{ hour.Date }}</td>\r\n          <td>{{ hour.WorkingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime1</th>\r\n          <th>OutTime1</th>\r\n          <th>InTime2</th>\r\n          <th>OutTime2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in selectedDateGoals\" :key=\"index\">\r\n          <td>{{ goal.name }}</td>\r\n          <td>{{ goal.Date }}</td>\r\n          <td>{{ goal.Intime1 }}</td>\r\n          <td>{{ goal.Outtime1 }}</td>\r\n          <td>{{ goal.Intime2 }}</td>\r\n          <td>{{ goal.Outtime2 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username:[],\r\n      Password:[],\r\n      selectedDateGoals: [],\r\n      workingHours:[],\r\n     \r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  created() {\r\n    axios.get(\"http://localhost:5296/api/Todoapp/GetNotes\")\r\n      .then(response => {\r\n        this.selectedDateGoals = response.data;\r\n        this.calculateWorkingHours();\r\n     \r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  },\r\n  methods: {\r\n    calculateWorkingHours(){\r\n     \r\n    this.workingHours=this.selectedDateGoals.map(goal =>{\r\n     \r\n    const inTime1 = parseFloat(goal.Intime1.replace(\":\", \".\"));\r\n    const outTime1 = parseFloat(goal.Outtime1.replace(\":\", \".\"));\r\n    const inTime2 = parseFloat(goal.Intime2.replace(\":\", \".\"));\r\n    const outTime2 = parseFloat(goal.Outtime2.replace(\":\", \".\"));\r\n    const totalHours = (outTime1 - inTime1) + (outTime2 - inTime2);\r\n    //console.log(\"ðŸš€ ~ calculateWorkingHours ~ totalHours :\", totalHours )\r\n   \r\n    return {\r\n      Date: goal.Date,\r\n      WorkingHours: totalHours.toFixed(1) \r\n    };\r\n\r\n    })\r\n    },\r\n    getDate(date){\r\n      this.selectedDateGoals = this.selectedDateGoals.filter((goal) => goal.Date === date);\r\n    }\r\n  }\r\n};\r\n\r\n</script>\r\n"],"mappings":"AA4CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC,EAAE;MACXC,iBAAiB,EAAE,EAAE;MACrBC,YAAY,EAAC;IAEf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,WAAW;IACxC;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRX,KAAK,CAACY,GAAG,CAAC,4CAA4C,EACnDC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACV,iBAAgB,GAAIU,QAAQ,CAACb,IAAI;MACtC,IAAI,CAACc,qBAAqB,CAAC,CAAC;IAE9B,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EACDE,OAAO,EAAE;IACPJ,qBAAqBA,CAAA,EAAE;MAEvB,IAAI,CAACV,YAAY,GAAC,IAAI,CAACD,iBAAiB,CAACgB,GAAG,CAACC,IAAG,IAAI;QAEpD,MAAMC,OAAM,GAAIC,UAAU,CAACF,IAAI,CAACG,OAAO,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1D,MAAMC,QAAO,GAAIH,UAAU,CAACF,IAAI,CAACM,QAAQ,CAACF,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC5D,MAAMG,OAAM,GAAIL,UAAU,CAACF,IAAI,CAACQ,OAAO,CAACJ,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1D,MAAMK,QAAO,GAAIP,UAAU,CAACF,IAAI,CAACU,QAAQ,CAACN,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC5D,MAAMO,UAAS,GAAKN,QAAO,GAAIJ,OAAO,IAAKQ,QAAO,GAAIF,OAAO,CAAC;QAC9D;;QAEA,OAAO;UACLK,IAAI,EAAEZ,IAAI,CAACY,IAAI;UACfC,YAAY,EAAEF,UAAU,CAACG,OAAO,CAAC,CAAC;QACpC,CAAC;MAED,CAAC;IACD,CAAC;IACDC,OAAOA,CAACC,IAAI,EAAC;MACX,IAAI,CAACjC,iBAAgB,GAAI,IAAI,CAACA,iBAAiB,CAACkC,MAAM,CAAEjB,IAAI,IAAKA,IAAI,CAACY,IAAG,KAAMI,IAAI,CAAC;IACtF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}