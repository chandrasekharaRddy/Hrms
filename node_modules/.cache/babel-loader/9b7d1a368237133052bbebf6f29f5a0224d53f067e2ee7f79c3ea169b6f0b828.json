{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"table table-bordered\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"UserId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Role\")])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 2\n};\nconst _hoisted_6 = {\n  key: 3,\n  class: \"table table-bordered\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeName\")])], -1 /* HOISTED */);\nconst _hoisted_8 = {\n  key: 4\n};\nconst _hoisted_9 = {\n  key: 5\n};\nconst _hoisted_10 = {\n  key: 6,\n  class: \"table table-bordered\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Id\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"InTime\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"OutTime\")])], -1 /* HOISTED */);\nconst _hoisted_12 = {\n  key: 7\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" User Table \"), $options.userData.length > 0 || !$data.userDataLoaded ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.userData, user => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: user.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(user.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.role), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : $data.userDataLoaded ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"No user data available.\")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"Loading user data...\")), _createCommentVNode(\" Employees Table \"), $options.uniqueEmployeeData.length > 0 || !$data.employeeDataLoaded ? (_openBlock(), _createElementBlock(\"table\", _hoisted_6, [_hoisted_7, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.uniqueEmployeeData, (employee, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(employee.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employee.name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : $data.employeeDataLoaded ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"No employee data available.\")) : (_openBlock(), _createElementBlock(\"p\", _hoisted_9, \"Loading employee data...\")), _createCommentVNode(\" Attendance Table \"), $options.attendanceData.length > 0 || !$data.attendanceDataLoaded ? (_openBlock(), _createElementBlock(\"table\", _hoisted_10, [_hoisted_11, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.attendanceData, (attendance, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(attendance.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(attendance.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(attendance.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(attendance.inTime), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(attendance.outTime), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \"Loading attendance data...\"))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","$options","userData","length","$data","userDataLoaded","_hoisted_2","_hoisted_3","_Fragment","_renderList","user","key","id","_toDisplayString","name","email","role","_hoisted_4","_hoisted_5","uniqueEmployeeData","employeeDataLoaded","_hoisted_6","_hoisted_7","employee","index","_hoisted_8","_hoisted_9","attendanceData","attendanceDataLoaded","_hoisted_10","_hoisted_11","attendance","date","inTime","outTime","_hoisted_12"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- User Table -->\r\n    <table v-if=\"userData.length > 0 || !userDataLoaded\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in userData\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>{{ user.role }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else-if=\"userDataLoaded\">No user data available.</p>\r\n    <p v-else>Loading user data...</p>\r\n\r\n    <!-- Employees Table -->\r\n    <table v-if=\"uniqueEmployeeData.length > 0 || !employeeDataLoaded\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in uniqueEmployeeData\" :key=\"index\">\r\n          <td>{{ employee.id }}</td>\r\n          <td>{{ employee.name }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else-if=\"employeeDataLoaded\">No employee data available.</p>\r\n    <p v-else>Loading employee data...</p>\r\n\r\n    <!-- Attendance Table -->\r\n    <table v-if=\"attendanceData.length > 0 || !attendanceDataLoaded\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime</th>\r\n          <th>OutTime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(attendance, index) in attendanceData\" :key=\"index\">\r\n          <td>{{ attendance.id }}</td>\r\n          <td>{{ attendance.name }}</td>\r\n          <td>{{ attendance.date }}</td>\r\n          <td>{{ attendance.inTime }}</td>\r\n          <td>{{ attendance.outTime }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>Loading attendance data...</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      userDataLoaded: false,\r\n      employeeDataLoaded: false,\r\n      attendanceDataLoaded: false,\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData.user || [];\r\n    },\r\n    employeeData() {\r\n      return this.$store.getters.getUserData.employeeData || [];\r\n    },\r\n    uniqueEmployeeData() {\r\n      const uniqueIds = new Set();\r\n      return this.employeeData.filter(employee => {\r\n        if (!uniqueIds.has(employee.id)) {\r\n          uniqueIds.add(employee.id);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    },\r\n    attendanceData() {\r\n      return this.$store.getters.getAttendanceData || [];\r\n    }\r\n  },\r\n  created() {\r\n    this.loadData();\r\n  },\r\n  methods: {\r\n    loadData() {\r\n      // Assuming you have actions in your Vuex store to fetch user data, employee data, and attendance data\r\n      this.$store.dispatch('fetchUserData')\r\n        .then(() => { this.userDataLoaded = true; })\r\n        .catch(() => { /* Handle error */ });\r\n\r\n      this.$store.dispatch('fetchEmployeeData')\r\n        .then(() => { this.employeeDataLoaded = true; })\r\n        .catch(() => { /* Handle error */ });\r\n\r\n      this.$store.dispatch('fetchAttendanceData')\r\n        .then(() => { this.attendanceDataLoaded = true; })\r\n        .catch(() => { /* Handle error */ });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your CSS styles */\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}