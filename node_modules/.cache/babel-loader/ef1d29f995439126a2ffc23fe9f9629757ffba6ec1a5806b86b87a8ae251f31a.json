{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-form\",\n  style: {\n    \"background-color\": \"bisque\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bi bi-person-fill display-1 text-primary\",\n  style: {\n    \"font-size\": \"5rem\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Leave request form\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  id: \"LeaveRequestForm\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", null, \"LeaveType:\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", null, \"Normal Leave\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"option\", null, \"Sick Leave\", -1 /* HOISTED */);\nconst _hoisted_8 = [_hoisted_6, _hoisted_7];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"form\", _hoisted_4, [_createElementVNode(\"div\", null, [_hoisted_5, _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"select\", {\n    class: \"select\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.form.leave = $event)\n  }, [..._hoisted_8], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.form.leave]])])])])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","id","_hoisted_6","_hoisted_7","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_ctx","form","leave","$event"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\teamMembers.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-form\"  style=\"background-color: bisque;\" >\r\n        <i class=\"bi bi-person-fill display-1 text-primary\" style=\"font-size: 5rem\"></i>\r\n        <h1 >Leave request form</h1>\r\n      <form id=\"LeaveRequestForm\">\r\n        <div>\r\n          <label>LeaveType:</label><div><select class=\"select\" v-model=\"form.leave\">\r\n          <option>Normal Leave</option>\r\n          <option>Sick Leave</option>\r\n        </select></div>\r\n        </div>\r\n      </form>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default{\r\n\r\n}\r\n\r\n</script>\r\n<style>\r\n.container-form{\r\n  width: 600px;\r\n  height: auto;\r\n}\r\n\r\n</style>\r\n<!-- <template>\r\n  <div class=\"container-fluid\">\r\n  \r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <table v-if=\"employeeTable && employeeList && employeeList.length > 0\" class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th style=\"width: 33%;\">Employee_Id</th>\r\n              <th style=\"width: 33%;\">EmployeeName</th>\r\n              <th style=\"width: 33%;\">EmployeeRole</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(employee, index) in employeeList\" :key=\"index\" @click=\"showEmployeeDetails(employee)\">\r\n              <td style=\"width: 33%;\">{{ employee.empId }}</td>\r\n              <td style=\"width: 33%;\">{{ employee.empName }}</td>\r\n              <td style=\"width: 33%;\">{{ employee.empRole }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <table v-if=\"workingHours\" class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>EmployeeName</th>\r\n              <th>Date</th>\r\n              <th>Total Working Hours</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(record, index) in workingHoursData\" :key=\"index\" @click=\"getValues(record.date)\">\r\n              <td>{{selectedEmployee.empName}}</td>\r\n              <td>{{ record.date }}</td>\r\n              <td>{{ record.totalHours }} hours {{ record.totalMinutes }} minutes</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n\r\n    <div v-if=\"EmployeeDetails\">\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <table v-if=\"selectedEmployee\" class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>EmployeeId</th>\r\n              <th>Date</th>\r\n              <th>Intime</th>\r\n              <th>Outtime</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(attendance, index) in filteredAttendances\" :key=\"index\">\r\n              <td>{{ selectedEmployee.empId }}</td>\r\n              <td>{{ attendance.date }}</td>\r\n              <td>{{ attendance.inTime }}</td>\r\n              <td>{{ attendance.outTime }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      workingHours: false,\r\n      selectedDate: null,\r\n      employeeTable: true,\r\n      EmployeeDetails:false\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n  if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n    const userId = this.userDetails ? this.userDetails.userId : null;\r\n    if (userId) {\r\n      const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId !== userId);\r\n      const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n        const key = employee.empId;\r\n        if (!acc[key]) {\r\n          acc[key] = {\r\n            empId: employee.empId,\r\n            empName: employee.empName,\r\n            empRole: employee.empRole,\r\n            attendances: []\r\n          };\r\n        }\r\n        acc[key].attendances.push(employee);\r\n        return acc;\r\n      }, {});\r\n      const uniqueEmployees = Object.values(groupedEmployees);\r\n      return uniqueEmployees;\r\n    }\r\n  }\r\n  return [];\r\n},\r\n    filteredAttendances() {\r\n      if (this.selectedEmployee && this.selectedDate) {\r\n        return this.selectedEmployee.attendances.filter(attendance => attendance.date === this.selectedDate);\r\n      }\r\n      return [];\r\n    },\r\n    workingHoursData() {\r\n      if (this.selectedEmployee) {\r\n        const attendanceDates = {};\r\n        this.selectedEmployee.attendances.forEach(attendance => {\r\n          if (!attendanceDates[attendance.date]) {\r\n            attendanceDates[attendance.date] = {\r\n              date: attendance.date,\r\n              totalDifference: 0\r\n            };\r\n          }\r\n          if (attendance.outTime) {\r\n            const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\r\n            const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\r\n            const diff = Math.abs(outtimeDate - intimeDate);\r\n            attendanceDates[attendance.date].totalDifference += diff;\r\n          }\r\n        });\r\n\r\n        const result = Object.values(attendanceDates).map(dateInfo => {\r\n          const hours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n          const minutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n          return {\r\n            date: dateInfo.date,\r\n            totalHours: hours,\r\n            totalMinutes: minutes\r\n          };\r\n        });\r\n\r\n        return result;\r\n      }\r\n      return [];\r\n    }\r\n  },\r\n  methods: {\r\n    showEmployeeDetails(employee) {\r\n      this.selectedEmployee = employee;\r\n      this.workingHours = true;\r\n      this.employeeTable = false;\r\n    \r\n    },\r\n    getValues(date) {\r\n      this.selectedDate = date;\r\n      this.employeeTable = false; \r\n    this.workingHours = true;\r\n    this.EmployeeDetails=true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ntbody tr:nth-child(odd) {\r\n  background: #ccc;\r\n}\r\n\r\ntable tr:hover td {\r\n  background: #839192;\r\n  color: #000;\r\n  transition: all 0.3s ease-in;\r\n  cursor: pointer;\r\n}\r\nth {\r\n  \r\n  border-bottom: 1px solid black, 3px double black;  \r\n}\r\n\r\n td {\r\nfont-family: 'Roboto';\r\n} \r\nth{\r\n  font-family: 'Arial';\r\n}\r\n\r\n</style> -->\r\n"],"mappings":";;EACOA,KAAK,EAAC,gBAAgB;EAAEC,KAAiC,EAAjC;IAAA;EAAA;;gCACvBC,mBAAA,CAAgF;EAA7EF,KAAK,EAAC,0CAA0C;EAACC,KAAuB,EAAvB;IAAA;EAAA;;gCACpDC,mBAAA,CAA4B,YAAvB,oBAAkB;;EACnBC,EAAE,EAAC;AAAkB;gCAEvBD,mBAAA,CAAyB,eAAlB,YAAU;gCACjBA,mBAAA,CAA6B,gBAArB,cAAY;gCACpBA,mBAAA,CAA2B,gBAAnB,YAAU;oBADlBE,UAA6B,EAC7BC,UAA2B,C;;uBAPnCC,mBAAA,CAWM,OAXNC,UAWM,GAVAC,UAAgF,EAChFC,UAA4B,EAC9BP,mBAAA,CAOO,QAPPQ,UAOO,GANLR,mBAAA,CAKM,cAJJS,UAAyB,EAAAT,mBAAA,CAGZ,c,gBAHiBA,mBAAA,CAGvB;IAH+BF,KAAK,EAAC,QAAQ;+DAAUY,IAAA,CAAAC,IAAI,CAACC,KAAK,GAAAC,MAAA;8DAAVH,IAAA,CAAAC,IAAI,CAACC,KAAK,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}