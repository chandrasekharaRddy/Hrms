{"ast":null,"code":"export default {\n  data() {\n    return {\n      workingHours: true\n    };\n  },\n  computed: {\n    userDetails() {\n      return this.$store.state.userData && this.$store.state.userData.length > 0 ? this.$store.state.userData[0] : null;\n    },\n    userId() {\n      return this.userDetails ? this.userDetails.userId : null;\n    },\n    employee() {\n      if (this.$store.state.userData && this.$store.state.userData.length > 0 && this.userId) {\n        const employee = this.$store.state.userData.find(employee => employee.empId === this.userId);\n        return employee ? employee : null;\n      }\n      return null;\n    },\n    workingHoursData() {\n      if (this.employee) {\n        const attendanceDates = {};\n        this.employee.attendances.forEach(attendance => {\n          if (!attendanceDates[attendance.date]) {\n            attendanceDates[attendance.date] = {\n              date: attendance.date,\n              totalDifference: 0\n            };\n          }\n          if (attendance.outTime) {\n            const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\n            const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\n            const diff = Math.abs(outtimeDate - intimeDate);\n            attendanceDates[attendance.date].totalDifference += diff;\n          }\n        });\n        const result = Object.values(attendanceDates).map(dateInfo => {\n          const hours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\n          const minutes = Math.floor(dateInfo.totalDifference % (1000 * 60 * 60) / (1000 * 60));\n          return {\n            date: dateInfo.date,\n            totalHours: hours,\n            totalMinutes: minutes\n          };\n        });\n        return result;\n      }\n      return [];\n    },\n    averageHours() {\n      if (this.workingHoursData.length > 0) {\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\n        const totalInMinutes = totalHours * 60 + totalMinutes;\n        const averageInMinutes = totalInMinutes / this.workingHoursData.length;\n        const averageHours = Math.floor(averageInMinutes / 60);\n        const averageMinutes = Math.floor(averageInMinutes % 60);\n        return `${averageHours} hours ${averageMinutes} minutes`;\n      }\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["data","workingHours","computed","userDetails","$store","state","userData","length","userId","employee","find","empId","workingHoursData","attendanceDates","attendances","forEach","attendance","date","totalDifference","outTime","intimeDate","Date","inTime","outtimeDate","diff","Math","abs","result","Object","values","map","dateInfo","hours","floor","minutes","totalHours","totalMinutes","averageHours","reduce","acc","curr","totalInMinutes","averageInMinutes","averageMinutes"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <p v-if=\"averageHours !== null\">Average Hours: {{ averageHours }}</p>\r\n\r\n    <!-- Working Hours Table -->\r\n    <div v-if=\"workingHours\" class=\"row\">\r\n      <div class=\"col\">\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Total Working Hours</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(record, index) in workingHoursData\" :key=\"index\">\r\n              <td>{{ record.date }}</td>\r\n              <td>{{ record.totalHours }} hours {{ record.totalMinutes }} minutes</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: true,\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    userId() {\r\n      return this.userDetails ? this.userDetails.userId : null;\r\n    },\r\n    employee() {\r\n      if (this.$store.state.userData && this.$store.state.userData.length > 0 && this.userId) {\r\n        const employee = this.$store.state.userData.find(employee => employee.empId === this.userId);\r\n        return employee ? employee : null;\r\n      }\r\n      return null;\r\n    },\r\n    workingHoursData() {\r\n      if (this.employee) {\r\n        const attendanceDates = {};\r\n        this.employee.attendances.forEach(attendance => {\r\n          if (!attendanceDates[attendance.date]) {\r\n            attendanceDates[attendance.date] = {\r\n              date: attendance.date,\r\n              totalDifference: 0\r\n            };\r\n          }\r\n          if (attendance.outTime) {\r\n            const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\r\n            const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\r\n            const diff = Math.abs(outtimeDate - intimeDate);\r\n            attendanceDates[attendance.date].totalDifference += diff;\r\n          }\r\n        });\r\n\r\n        const result = Object.values(attendanceDates).map(dateInfo => {\r\n          const hours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n          const minutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n          return {\r\n            date: dateInfo.date,\r\n            totalHours: hours,\r\n            totalMinutes: minutes,\r\n          };\r\n        });\r\n\r\n        return result;\r\n      }\r\n      return [];\r\n    },\r\n    averageHours() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / this.workingHoursData.length;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        return `${averageHours} hours ${averageMinutes} minutes`;\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* Add your styles here */\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}