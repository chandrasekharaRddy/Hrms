{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    useData: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    userData() {\n      // Access userData from Vuex store\n      return this.$store.getters.getUserData;\n    }\n  },\n  data() {\n    return {\n      goals: [],\n      workingHours: []\n    };\n  },\n  created() {\n    this.addItem();\n  },\n  methods: {\n    addItem() {\n      // Check if useData is defined before parsing as JSON\n      if (this.useData) {\n        try {\n          const parsedUseData = JSON.parse(this.useData);\n          const newItem = {\n            date: parsedUseData.presentDate,\n            signIn: parsedUseData.presentTime,\n            signOut: \"\",\n            username: parsedUseData.username\n          };\n          this.goals.push(newItem);\n          console.log(this.goals);\n        } catch (error) {\n          console.error('Error parsing JSON:', error);\n        }\n      } else {\n        console.warn('useData is undefined');\n      }\n    },\n    logout(goal) {\n      const currentDate = new Date();\n      goal.signOut = currentDate.toLocaleTimeString();\n    },\n    selectDate(date) {\n      const selectedGoals = this.goals.filter(goal => goal.date === date);\n      this.workingHours = selectedGoals.map(goal => ({\n        date: goal.date,\n        hours: this.calculate(goal.signIn, goal.signOut)\n      }));\n    },\n    calculate(signIn, signOut) {\n      if (signIn && signOut) {\n        const signInTime = new Date(`2000-01-01 ${signIn}`);\n        const signOutTime = new Date(`2000-01-01 ${signOut}`);\n        const timeDiff = signOutTime - signInTime;\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\n        const minutes = Math.floor(timeDiff % (1000 * 60 * 60) / (1000 * 60));\n        return `${hours} hrs ${minutes} mins `;\n      } else {\n        return \"0\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","useData","type","String","required","computed","userData","$store","getters","getUserData","data","goals","workingHours","created","addItem","methods","parsedUseData","JSON","parse","newItem","date","presentDate","signIn","presentTime","signOut","username","push","console","log","error","warn","logout","goal","currentDate","Date","toLocaleTimeString","selectDate","selectedGoals","filter","map","hours","calculate","signInTime","signOutTime","timeDiff","Math","floor","minutes"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>SignIn</th>\r\n          <th>SignOut</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n          <td>{{ goal.username }}</td>\r\n          <td>{{ goal.date }}</td>\r\n          <td @click=\"selectDate(goal.date)\">{{ goal.date }}</td>\r\n          <td>{{ goal.signIn }}</td>\r\n          <td>{{ goal.signOut }}</td>\r\n          <td><button @click=\"logout(goal)\">SignOut</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    useData: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  computed: {\r\n    userData() {\r\n      // Access userData from Vuex store\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      goals: [],\r\n      workingHours: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.addItem();\r\n  },\r\n  methods: {\r\n    addItem() {\r\n      // Check if useData is defined before parsing as JSON\r\n      if (this.useData) {\r\n        try {\r\n          const parsedUseData = JSON.parse(this.useData);\r\n          const newItem = {\r\n            date: parsedUseData.presentDate,\r\n            signIn: parsedUseData.presentTime,\r\n            signOut: \"\",\r\n            username: parsedUseData.username,\r\n          };\r\n          this.goals.push(newItem);\r\n          console.log(this.goals);\r\n        } catch (error) {\r\n          console.error('Error parsing JSON:', error);\r\n\r\n        }\r\n      } else {\r\n        console.warn('useData is undefined');\r\n      }\r\n    },\r\n    logout(goal) {\r\n      const currentDate = new Date();\r\n      goal.signOut = currentDate.toLocaleTimeString();\r\n    },\r\n    selectDate(date) {\r\n      const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n      this.workingHours = selectedGoals.map((goal) => ({\r\n        date: goal.date,\r\n        hours: this.calculate(goal.signIn, goal.signOut),\r\n      }));\r\n    },\r\n    calculate(signIn, signOut) {\r\n      if (signIn && signOut) {\r\n        const signInTime = new Date(`2000-01-01 ${signIn}`);\r\n        const signOutTime = new Date(`2000-01-01 ${signOut}`);\r\n        const timeDiff = signOutTime - signInTime;\r\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n        const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n        return `${hours} hrs ${minutes} mins `;\r\n      } else {\r\n        return \"0\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your styles go here */\r\n</style>\r\n\r\n<style>\r\n/* Your styles go here */\r\n</style>\r\n\r\n<!-- <template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>SignIn</th>\r\n          <th>SignOut</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n          <td>{{ goal.username }}</td>\r\n          <td>{{ goal.date }}</td>\r\n          <td @click=\"selectDate(goal.date)\">{{ goal.date }}</td>\r\n          <td>{{ goal.signIn }}</td>\r\n          <td>{{ goal.signOut }}</td>\r\n          <td><button @click=\"logout(goal)\">SignOut</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    useData: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      goals: [],\r\n      workingHours: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.addItem();\r\n  },\r\n  methods: {\r\n    addItem() {\r\n      const newItem = {\r\n        date: this.useData.presentDate,\r\n        signIn: this.useData.presentTime,\r\n        signOut: \"\",\r\n        username: this.useData.username,\r\n      };\r\n      this.goals.push(newItem);\r\n      console.log(this.useData);\r\n    },\r\n    logout(goal) {\r\n      const currentDate = new Date();\r\n      goal.signOut = currentDate.toLocaleTimeString();\r\n    },\r\n    selectDate(date) {\r\n      const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n      this.workingHours = selectedGoals.map((goal) => ({\r\n        date: goal.date,\r\n        hours: this.calculate(goal.signIn, goal.signOut),\r\n      }));\r\n    },\r\n    calculate(signIn, signOut) {\r\n      if (signIn && signOut) {\r\n        const signInTime = new Date(`2000-01-01 ${signIn}`);\r\n        const signOutTime = new Date(`2000-01-01 ${signOut}`);\r\n        const timeDiff = signOutTime - signInTime;\r\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n        const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n        return `${hours} hrs ${minutes} mins `;\r\n      } else {\r\n        return \"0\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your styles go here */\r\n</style> -->\r\n"],"mappings":";AA0CA,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT;MACA,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,WAAW;IACxC;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAAC,CAAC;EAChB,CAAC;EACDC,OAAO,EAAE;IACPD,OAAOA,CAAA,EAAG;MACR;MACA,IAAI,IAAI,CAACb,OAAO,EAAE;QAChB,IAAI;UACF,MAAMe,aAAY,GAAIC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACjB,OAAO,CAAC;UAC9C,MAAMkB,OAAM,GAAI;YACdC,IAAI,EAAEJ,aAAa,CAACK,WAAW;YAC/BC,MAAM,EAAEN,aAAa,CAACO,WAAW;YACjCC,OAAO,EAAE,EAAE;YACXC,QAAQ,EAAET,aAAa,CAACS;UAC1B,CAAC;UACD,IAAI,CAACd,KAAK,CAACe,IAAI,CAACP,OAAO,CAAC;UACxBQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,KAAK,CAAC;QACzB,EAAE,OAAOkB,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAE7C;MACF,OAAO;QACLF,OAAO,CAACG,IAAI,CAAC,sBAAsB,CAAC;MACtC;IACF,CAAC;IACDC,MAAMA,CAACC,IAAI,EAAE;MACX,MAAMC,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;MAC9BF,IAAI,CAACR,OAAM,GAAIS,WAAW,CAACE,kBAAkB,CAAC,CAAC;IACjD,CAAC;IACDC,UAAUA,CAAChB,IAAI,EAAE;MACf,MAAMiB,aAAY,GAAI,IAAI,CAAC1B,KAAK,CAAC2B,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACZ,IAAG,KAAMA,IAAI,CAAC;MACrE,IAAI,CAACR,YAAW,GAAIyB,aAAa,CAACE,GAAG,CAAEP,IAAI,KAAM;QAC/CZ,IAAI,EAAEY,IAAI,CAACZ,IAAI;QACfoB,KAAK,EAAE,IAAI,CAACC,SAAS,CAACT,IAAI,CAACV,MAAM,EAAEU,IAAI,CAACR,OAAO;MACjD,CAAC,CAAC,CAAC;IACL,CAAC;IACDiB,SAASA,CAACnB,MAAM,EAAEE,OAAO,EAAE;MACzB,IAAIF,MAAK,IAAKE,OAAO,EAAE;QACrB,MAAMkB,UAAS,GAAI,IAAIR,IAAI,CAAE,cAAaZ,MAAO,EAAC,CAAC;QACnD,MAAMqB,WAAU,GAAI,IAAIT,IAAI,CAAE,cAAaV,OAAQ,EAAC,CAAC;QACrD,MAAMoB,QAAO,GAAID,WAAU,GAAID,UAAU;QACzC,MAAMF,KAAI,GAAIK,IAAI,CAACC,KAAK,CAACF,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;QACrD,MAAMG,OAAM,GAAIF,IAAI,CAACC,KAAK,CAAEF,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAE,CAAC,CAAC;QACvE,OAAQ,GAAEJ,KAAK,QAAQO,OAAO,QAAQ;MACxC,OAAO;QACL,OAAO,GAAG;MACZ;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}