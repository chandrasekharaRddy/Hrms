{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      workingHours: [],\n      goals: [],\n      filteredGoals: [],\n      selectedDate: null,\n      dateVisible: true\n    };\n  },\n  computed: {\n    userData() {\n      return this.$store.getters.getUserData;\n    }\n  },\n  watch: {\n    user: {\n      handler(newValue) {\n        if (Array.isArray(newValue)) {\n          this.workingHours = [];\n          const uniqueDates = [];\n          newValue.forEach(detail => {\n            const date = detail.Date;\n            if (!uniqueDates.includes(date)) {\n              uniqueDates.push(date);\n              const workingHours = this.calculateWorkingHours(...newValue.filter(item => item.Date === date).map(item => [item.InTime1, item.OutTime1]).flat());\n              this.workingHours.push({\n                Date: date,\n                WorkingHours: workingHours\n              });\n            }\n          });\n          this.goals = newValue.map(user => ({\n            name: user.name,\n            Date: user.Date,\n            InTime1: user.InTime1,\n            OutTime1: user.OutTime1\n          }));\n        } else {\n          this.workingHours = [];\n          this.goals = [];\n          this.clearFilteredGoals();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    calculateWorkingHours(...timePairs) {\n      let totalHours = 0;\n      for (let i = 0; i < timePairs.length; i += 2) {\n        const inTime = new Date(`2000-01-01T${timePairs[i]}`);\n        const outTime = new Date(`2000-01-01T${timePairs[i + 1]}`);\n        const diff = outTime - inTime;\n        const hours = diff / (1000 * 60 * 60);\n        totalHours += hours;\n      }\n      return totalHours.toFixed(2);\n    },\n    getDate(date) {\n      if (this.selectedDate === date) {\n        this.selectedDate = null;\n      } else {\n        this.selectedDate = date;\n        this.filteredGoals = this.goals.filter(goal => goal.Date === date);\n        this.dateVisible = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","workingHours","goals","filteredGoals","selectedDate","dateVisible","computed","userData","$store","getters","getUserData","watch","user","handler","newValue","Array","isArray","uniqueDates","forEach","detail","date","Date","includes","push","calculateWorkingHours","filter","item","map","InTime1","OutTime1","flat","WorkingHours","name","clearFilteredGoals","immediate","methods","timePairs","totalHours","i","length","inTime","outTime","diff","hours","toFixed","getDate","goal"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n     <div class=\"container\">\r\n      <table class=\"table1\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>EmployeeId</th>\r\n            <th>EmployeeName</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{{ employee.id}}</td>\r\n            <td>{{employee.name}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <table class=\"table2\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>UserId</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{{user.id }}</td>\r\n            <td>{{user.name}}</td>\r\n            <td>{{user.email}}</td>\r\n            <td>{{user.role}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <br>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <table v-if=\"dateVisible\" class=\"table table-bordered\">\r\n      <!-- Working Hours Table -->\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(hour, index) in workingHours\" :key=\"index\">\r\n          <td @click=\"getDate(hour.Date)\">{{ hour.Date }}</td>\r\n          <td>{{ hour.WorkingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <!-- Goals Table -->\r\n    <table v-if=\"selectedDate\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime</th>\r\n          <th>OutTime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in filteredGoals\" :key=\"index\">\r\n          <td>{{ goal.name }}</td>\r\n          <td>{{ goal.Date }}</td>\r\n          <td>{{ goal.InTime1 }}</td>\r\n          <td>{{ goal.OutTime1 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n      goals: [],\r\n      filteredGoals: [],\r\n      selectedDate: null,\r\n      dateVisible: true\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  watch: {\r\n    user: {\r\n      handler(newValue) {\r\n        if (Array.isArray(newValue)) {\r\n          this.workingHours = [];\r\n          const uniqueDates = [];\r\n          newValue.forEach(detail => {\r\n            const date = detail.Date;\r\n            if (!uniqueDates.includes(date)) {\r\n              uniqueDates.push(date);\r\n              const workingHours = this.calculateWorkingHours(\r\n                ...newValue\r\n                  .filter(item => item.Date === date)\r\n                  .map(item => [item.InTime1, item.OutTime1])\r\n                  .flat()\r\n              );\r\n              this.workingHours.push({ Date: date, WorkingHours: workingHours });\r\n            }\r\n          });\r\n          this.goals = newValue.map((user) => ({\r\n            name: user.name,\r\n            Date: user.Date,\r\n            InTime1: user.InTime1,\r\n            OutTime1: user.OutTime1,\r\n          }));\r\n        } else {\r\n          this.workingHours = [];\r\n          this.goals = [];\r\n          this.clearFilteredGoals();\r\n        }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    calculateWorkingHours(...timePairs) {\r\n      let totalHours = 0;\r\n      for (let i = 0; i < timePairs.length; i += 2) {\r\n        const inTime = new Date(`2000-01-01T${timePairs[i]}`);\r\n        const outTime = new Date(`2000-01-01T${timePairs[i + 1]}`);\r\n        const diff = outTime - inTime;\r\n        const hours = diff / (1000 * 60 * 60);\r\n        totalHours += hours;\r\n      }\r\n      return totalHours.toFixed(2);\r\n    },\r\n    getDate(date) {\r\n      if (this.selectedDate === date) {\r\n        this.selectedDate = null; \r\n      } else {\r\n        this.selectedDate = date;\r\n        this.filteredGoals = this.goals.filter((goal) => goal.Date === date);\r\n        this.dateVisible = false;\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}