{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"table table-bordered\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  style: {\n    \"width\": \"33%\"\n  }\n}, \"Employee_Id\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  style: {\n    \"width\": \"33%\"\n  }\n}, \"EmployeeName\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  style: {\n    \"width\": \"33%\"\n  }\n}, \"EmployeeRole\")])], -1 /* HOISTED */);\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  style: {\n    \"width\": \"33%\"\n  }\n};\nconst _hoisted_6 = {\n  style: {\n    \"width\": \"33%\"\n  }\n};\nconst _hoisted_7 = {\n  style: {\n    \"width\": \"33%\"\n  }\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"table table-bordered\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeName\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"InTime\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"OutTime\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Total Working Hours\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.employeeTable && $options.employeeList && $options.employeeList.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredEmployeeList, (employee, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      onClick: $event => $options.showEmployeeDetails(employee)\n    }, [_createElementVNode(\"td\", _hoisted_5, _toDisplayString(employee.empId), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_6, _toDisplayString(employee.empName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_7, _toDisplayString(employee.empRole), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.workingHours ? (_openBlock(), _createElementBlock(\"table\", _hoisted_8, [_hoisted_9, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredWorkingHoursData, (record, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString($data.selectedEmployee.empName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.Intime), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.Outtime), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.totalHours) + \" hours \" + _toDisplayString(record.totalMinutes) + \" minutes\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","$data","employeeTable","$options","employeeList","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","filteredEmployeeList","employee","index","key","onClick","$event","showEmployeeDetails","_hoisted_5","_toDisplayString","empId","_hoisted_6","empName","_hoisted_7","empRole","workingHours","_hoisted_8","_hoisted_9","filteredWorkingHoursData","record","selectedEmployee","date","Intime","Outtime","totalHours","totalMinutes"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\teamMembers.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n        <table v-if=\"employeeTable && employeeList && employeeList.length > 0\" class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th style=\"width: 33%;\">Employee_Id</th>\r\n              <th style=\"width: 33%;\">EmployeeName</th>\r\n              <th style=\"width: 33%;\">EmployeeRole</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(employee, index) in filteredEmployeeList\" :key=\"index\" @click=\"showEmployeeDetails(employee)\">\r\n              <td style=\"width: 33%;\">{{ employee.empId }}</td>\r\n              <td style=\"width: 33%;\">{{ employee.empName }}</td>\r\n              <td style=\"width: 33%;\">{{ employee.empRole }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <table v-if=\"workingHours\" class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>EmployeeName</th>\r\n              <th>Date</th>\r\n              <th>InTime</th>\r\n              <th>OutTime</th>\r\n              <th>Total Working Hours</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(record, index) in filteredWorkingHoursData\" :key=\"index\">\r\n              <td>{{ selectedEmployee.empName }}</td>\r\n              <td>{{ record.date }}</td>\r\n              <td>{{ record.Intime }}</td>\r\n              <td>{{ record.Outtime }}</td>\r\n              <td>{{ record.totalHours }} hours {{ record.totalMinutes }} minutes</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      employeeTable: true,\r\n      workingHours: false,\r\n\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n        const userId = this.userDetails ? this.userDetails.userId : null;\r\n        if (userId) {\r\n          const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId !== userId);\r\n          const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n            const key = employee.empId;\r\n            if (!acc[key]) {\r\n              acc[key] = {\r\n                empId: employee.empId,\r\n                empName: employee.empName,\r\n                empRole: employee.empRole,\r\n                attendances: []\r\n              };\r\n            }\r\n            acc[key].attendances.push(employee);\r\n            return acc;\r\n          }, {});\r\n          const uniqueEmployees = Object.values(groupedEmployees);\r\n          return uniqueEmployees;\r\n        }\r\n      }\r\n      return [];\r\n    },\r\n    filteredEmployeeList() {\r\n      return this.employeeList.filter(employee =>\r\n        employee.empName.toLowerCase(),\r\n      );\r\n    },\r\n    filteredWorkingHoursData() {\r\n      if (this.selectedEmployee) {\r\n        const attendanceDates = {};\r\n        this.selectedEmployee.attendances.forEach(attendance => {\r\n          if (!attendanceDates[attendance.date]) {\r\n            attendanceDates[attendance.date] = {\r\n              date: attendance.date,\r\n              Intime: [],\r\n              Outtime: [],\r\n              totalDifference: 0\r\n            };\r\n          }\r\n          attendanceDates[attendance.date].Intime.push(attendance.inTime);\r\n          if (attendance.outTime) {\r\n            const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\r\n            const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\r\n            const diff = Math.abs(outtimeDate - intimeDate);\r\n            attendanceDates[attendance.date].totalDifference += diff;\r\n            attendanceDates[attendance.date].Outtime.push(attendance.outTime);\r\n          }\r\n        });\r\n\r\n        return Object.values(attendanceDates).map(dateInfo => {\r\n          const hours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n          const minutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n          return {\r\n            date: dateInfo.date,\r\n            Intime: dateInfo.Intime,\r\n            Outtime: dateInfo.Outtime,\r\n            totalHours: hours,\r\n            totalMinutes: minutes\r\n          };\r\n        });\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    showEmployeeDetails(employee) {\r\n      this.selectedEmployee = employee;\r\n      this.workingHours = true;\r\n      this.employeeTable = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n  tbody tr:nth-child(odd) {\r\n    background: #ccc;\r\n  }\r\n\r\n  table tr:hover td {\r\n    background: #839192;\r\n    color: #000;\r\n    transition: all 0.3s ease-in;\r\n    cursor: pointer;\r\n  }\r\n\r\n  th {\r\n    border-bottom: 1px solid black;\r\n    border-bottom-width: 3px;\r\n    border-bottom-style: double;\r\n  }\r\n\r\n  td {\r\n    font-family: 'Roboto';\r\n  }\r\n\r\n  th {\r\n    font-family: 'Arial';\r\n  }\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;;EACiDA,KAAK,EAAC;;gCAC3EC,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAwC;EAApCC,KAAmB,EAAnB;IAAA;EAAA;AAAmB,GAAC,aAAW,G,aACnCD,mBAAA,CAAyC;EAArCC,KAAmB,EAAnB;IAAA;EAAA;AAAmB,GAAC,cAAY,G,aACpCD,mBAAA,CAAyC;EAArCC,KAAmB,EAAnB;IAAA;EAAA;AAAmB,GAAC,cAAY,E;;;EAKhCA,KAAmB,EAAnB;IAAA;EAAA;AAAmB;;EACnBA,KAAmB,EAAnB;IAAA;EAAA;AAAmB;;EACnBA,KAAmB,EAAnB;IAAA;EAAA;AAAmB;;;EAIFF,KAAK,EAAC;;gCAC/BC,mBAAA,CAQQ,gB,aAPNA,mBAAA,CAMK,a,aALHA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAA4B,YAAxB,qBAAmB,E;;uBAxBnCE,mBAAA,CAqCU,OArCVC,UAqCU,GApCSC,KAAA,CAAAC,aAAa,IAAIC,QAAA,CAAAC,YAAY,IAAID,QAAA,CAAAC,YAAY,CAACC,MAAM,Q,cAAjEN,mBAAA,CAeQ,SAfRO,UAeQ,GAdNC,UAMQ,EACRV,mBAAA,CAMQ,iB,kBALNE,mBAAA,CAIKS,SAAA,QAAAC,WAAA,CAJ2BN,QAAA,CAAAO,oBAAoB,GAAxCC,QAAQ,EAAEC,KAAK;yBAA3Bb,mBAAA,CAIK;MAJkDc,GAAG,EAAED,KAAK;MAAGE,OAAK,EAAAC,MAAA,IAAEZ,QAAA,CAAAa,mBAAmB,CAACL,QAAQ;QACrGd,mBAAA,CAAiD,MAAjDoB,UAAiD,EAAAC,gBAAA,CAAtBP,QAAQ,CAACQ,KAAK,kBACzCtB,mBAAA,CAAmD,MAAnDuB,UAAmD,EAAAF,gBAAA,CAAxBP,QAAQ,CAACU,OAAO,kBAC3CxB,mBAAA,CAAmD,MAAnDyB,UAAmD,EAAAJ,gBAAA,CAAxBP,QAAQ,CAACY,OAAO,iB;2EAIpCtB,KAAA,CAAAuB,YAAY,I,cAAzBzB,mBAAA,CAmBQ,SAnBR0B,UAmBQ,GAlBNC,UAQQ,EACR7B,mBAAA,CAQQ,iB,kBAPNE,mBAAA,CAMKS,SAAA,QAAAC,WAAA,CANyBN,QAAA,CAAAwB,wBAAwB,GAA1CC,MAAM,EAAEhB,KAAK;yBAAzBb,mBAAA,CAMK;MANoDc,GAAG,EAAED;IAAK,IACjEf,mBAAA,CAAuC,YAAAqB,gBAAA,CAAhCjB,KAAA,CAAA4B,gBAAgB,CAACR,OAAO,kBAC/BxB,mBAAA,CAA0B,YAAAqB,gBAAA,CAAnBU,MAAM,CAACE,IAAI,kBAClBjC,mBAAA,CAA4B,YAAAqB,gBAAA,CAArBU,MAAM,CAACG,MAAM,kBACpBlC,mBAAA,CAA6B,YAAAqB,gBAAA,CAAtBU,MAAM,CAACI,OAAO,kBACrBnC,mBAAA,CAAwE,YAAAqB,gBAAA,CAAjEU,MAAM,CAACK,UAAU,IAAG,SAAO,GAAAf,gBAAA,CAAGU,MAAM,CAACM,YAAY,IAAG,UAAQ,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}