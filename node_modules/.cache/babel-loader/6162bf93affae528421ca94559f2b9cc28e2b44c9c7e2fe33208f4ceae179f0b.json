{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"UserId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\")])], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeName\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" User Table \"), _createElementVNode(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredUserData, (user, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: 'user_' + index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(user.userId), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.userName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.email), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Employee Table \"), _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredUserData, (employee, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: 'employee_' + index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(employee.empId), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employee.empName), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_createCommentVNode","_hoisted_1","_hoisted_2","_Fragment","_renderList","$options","filteredUserData","user","index","key","_toDisplayString","userId","userName","email","_hoisted_3","_hoisted_4","employee","empId","empName"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- User Table -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(user, index) in filteredUserData\" :key=\"'user_' + index\">\r\n          <td>{{ user.userId }}</td>\r\n          <td>{{ user.userName }}</td>\r\n          <td>{{ user.email }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Employee Table -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in filteredUserData\" :key=\"'employee_' + index\">\r\n          <td>{{ employee.empId }}</td>\r\n          <td>{{ employee.empName }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  computed: {\r\n    userData() {\r\n      // Retrieve the userData from the store\r\n      return this.$store.getters.getUserData;\r\n    },\r\n    filteredUserData() {\r\n      // Filter out duplicate entries and return only one type of data (either user or employee)\r\n      return this.userData.filter(item => item.userId || item.empId);\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;EAGWA,KAAK,EAAC;AAAsB;gCACjCC,mBAAA,CAMQ;EANDD,KAAK,EAAC;AAAY,I,aACvBC,mBAAA,CAIK,a,aAHHA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAc,YAAV,OAAK,E;;EAaRD,KAAK,EAAC;AAAsB;gCACjCC,mBAAA,CAKQ;EALDD,KAAK,EAAC;AAAY,I,aACvBC,mBAAA,CAGK,a,aAFHA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAqB,YAAjB,cAAY,E;;uBAxBxBC,mBAAA,CAkCM,cAjCJC,mBAAA,gBAAmB,EACnBF,mBAAA,CAeQ,SAfRG,UAeQ,GAdNC,UAMQ,EACRJ,mBAAA,CAMQ,iB,kBALNC,mBAAA,CAIKI,SAAA,QAAAC,WAAA,CAJuBC,QAAA,CAAAC,gBAAgB,GAAhCC,IAAI,EAAEC,KAAK;yBAAvBT,mBAAA,CAIK;MAJ0CU,GAAG,YAAYD;QAC5DV,mBAAA,CAA0B,YAAAY,gBAAA,CAAnBH,IAAI,CAACI,MAAM,kBAClBb,mBAAA,CAA4B,YAAAY,gBAAA,CAArBH,IAAI,CAACK,QAAQ,kBACpBd,mBAAA,CAAyB,YAAAY,gBAAA,CAAlBH,IAAI,CAACM,KAAK,iB;sCAKvBb,mBAAA,oBAAuB,EACvBF,mBAAA,CAaQ,SAbRgB,UAaQ,GAZNC,UAKQ,EACRjB,mBAAA,CAKQ,iB,kBAJNC,mBAAA,CAGKI,SAAA,QAAAC,WAAA,CAH2BC,QAAA,CAAAC,gBAAgB,GAApCU,QAAQ,EAAER,KAAK;yBAA3BT,mBAAA,CAGK;MAH8CU,GAAG,gBAAgBD;QACpEV,mBAAA,CAA6B,YAAAY,gBAAA,CAAtBM,QAAQ,CAACC,KAAK,kBACrBnB,mBAAA,CAA+B,YAAAY,gBAAA,CAAxBM,QAAQ,CAACE,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}