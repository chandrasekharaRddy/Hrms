{"ast":null,"code":"export default {\n  data() {\n    return {\n      workingHours: []\n    };\n  },\n  computed: {\n    userData() {\n      return this.$store.state.user.userData; // Assuming 'userData' is stored in Vuex state\n    }\n  },\n  methods: {\n    logout(user) {\n      const currentDate = new Date();\n      user.signOut = currentDate.toLocaleTimeString();\n    },\n    selectDate(date) {\n      const selectedUser = this.userData.find(user => user.date === date);\n      if (selectedUser) {\n        this.workingHours = [{\n          date: selectedUser.date,\n          hours: this.calculate(selectedUser.signIn, selectedUser.signOut)\n        }];\n      }\n    },\n    calculate(signIn, signOut) {\n      if (signIn && signOut) {\n        const signInTime = new Date(`2000-01-01 ${signIn}`);\n        const signOutTime = new Date(`2000-01-01 ${signOut}`);\n        const timeDiff = signOutTime - signInTime;\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\n        const minutes = Math.floor(timeDiff % (1000 * 60 * 60) / (1000 * 60));\n        return `${hours} hrs ${minutes} mins `;\n      } else {\n        return \"0\";\n      }\n    },\n    async fetchUserData() {\n      // Dispatch the action to fetch user data from the store\n      await this.$store.dispatch('user/fetchUserData');\n    }\n  },\n  created() {\n    // Fetch user data when the component is created\n    this.fetchUserData();\n  }\n};","map":{"version":3,"names":["data","workingHours","computed","userData","$store","state","user","methods","logout","currentDate","Date","signOut","toLocaleTimeString","selectDate","date","selectedUser","find","hours","calculate","signIn","signInTime","signOutTime","timeDiff","Math","floor","minutes","fetchUserData","dispatch","created"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Table for working hours -->\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Table for user data -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>SignIn</th>\r\n          <th>SignOut</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(user, index) in userData\" :key=\"index\">\r\n          <td>{{ user.username }}</td>\r\n          <td>{{ user.date }}</td>\r\n          <td @click=\"selectDate(user.date)\">{{ user.date }}</td>\r\n          <td>{{ user.signIn }}</td>\r\n          <td>{{ user.signOut }}</td>\r\n          <td><button @click=\"logout(user)\">SignOut</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.state.user.userData; // Assuming 'userData' is stored in Vuex state\r\n    },\r\n  },\r\n  methods: {\r\n    logout(user) {\r\n      const currentDate = new Date();\r\n      user.signOut = currentDate.toLocaleTimeString();\r\n    },\r\n    selectDate(date) {\r\n      const selectedUser = this.userData.find((user) => user.date === date);\r\n      if (selectedUser) {\r\n        this.workingHours = [\r\n          {\r\n            date: selectedUser.date,\r\n            hours: this.calculate(selectedUser.signIn, selectedUser.signOut),\r\n          },\r\n        ];\r\n      }\r\n    },\r\n    calculate(signIn, signOut) {\r\n      if (signIn && signOut) {\r\n        const signInTime = new Date(`2000-01-01 ${signIn}`);\r\n        const signOutTime = new Date(`2000-01-01 ${signOut}`);\r\n        const timeDiff = signOutTime - signInTime;\r\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n        const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n        return `${hours} hrs ${minutes} mins `;\r\n      } else {\r\n        return \"0\";\r\n      }\r\n    },\r\n    async fetchUserData() {\r\n      // Dispatch the action to fetch user data from the store\r\n      await this.$store.dispatch('user/fetchUserData');\r\n    },\r\n  },\r\n  created() {\r\n    // Fetch user data when the component is created\r\n    this.fetchUserData();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n<!-- <template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>SignIn</th>\r\n          <th>SignOut</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n          <td>{{ goal.username }}</td>\r\n          <td>{{ goal.date }}</td>\r\n          <td @click=\"selectDate(goal.date)\">{{ goal.date }}</td>\r\n          <td>{{ goal.signIn }}</td>\r\n          <td>{{ goal.signOut }}</td>\r\n          <td><button @click=\"logout(goal)\">SignOut</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    useData: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      goals: [],\r\n      workingHours: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.addItem();\r\n  },\r\n  methods: {\r\n    addItem() {\r\n      const newItem = {\r\n        date: this.useData.presentDate,\r\n        signIn: this.useData.presentTime,\r\n        signOut: \"\",\r\n        username: this.useData.username,\r\n      };\r\n      this.goals.push(newItem);\r\n      console.log(this.useData);\r\n    },\r\n    logout(goal) {\r\n      const currentDate = new Date();\r\n      goal.signOut = currentDate.toLocaleTimeString();\r\n    },\r\n    selectDate(date) {\r\n      const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n      this.workingHours = selectedGoals.map((goal) => ({\r\n        date: goal.date,\r\n        hours: this.calculate(goal.signIn, goal.signOut),\r\n      }));\r\n    },\r\n    calculate(signIn, signOut) {\r\n      if (signIn && signOut) {\r\n        const signInTime = new Date(`2000-01-01 ${signIn}`);\r\n        const signOutTime = new Date(`2000-01-01 ${signOut}`);\r\n        const timeDiff = signOutTime - signInTime;\r\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n        const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n        return `${hours} hrs ${minutes} mins `;\r\n      } else {\r\n        return \"0\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your styles go here */\r\n</style> -->\r\n"],"mappings":"AA4CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACH,QAAQ,EAAE;IAC1C;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,MAAMA,CAACF,IAAI,EAAE;MACX,MAAMG,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;MAC9BJ,IAAI,CAACK,OAAM,GAAIF,WAAW,CAACG,kBAAkB,CAAC,CAAC;IACjD,CAAC;IACDC,UAAUA,CAACC,IAAI,EAAE;MACf,MAAMC,YAAW,GAAI,IAAI,CAACZ,QAAQ,CAACa,IAAI,CAAEV,IAAI,IAAKA,IAAI,CAACQ,IAAG,KAAMA,IAAI,CAAC;MACrE,IAAIC,YAAY,EAAE;QAChB,IAAI,CAACd,YAAW,GAAI,CAClB;UACEa,IAAI,EAAEC,YAAY,CAACD,IAAI;UACvBG,KAAK,EAAE,IAAI,CAACC,SAAS,CAACH,YAAY,CAACI,MAAM,EAAEJ,YAAY,CAACJ,OAAO;QACjE,CAAC,CACF;MACH;IACF,CAAC;IACDO,SAASA,CAACC,MAAM,EAAER,OAAO,EAAE;MACzB,IAAIQ,MAAK,IAAKR,OAAO,EAAE;QACrB,MAAMS,UAAS,GAAI,IAAIV,IAAI,CAAE,cAAaS,MAAO,EAAC,CAAC;QACnD,MAAME,WAAU,GAAI,IAAIX,IAAI,CAAE,cAAaC,OAAQ,EAAC,CAAC;QACrD,MAAMW,QAAO,GAAID,WAAU,GAAID,UAAU;QACzC,MAAMH,KAAI,GAAIM,IAAI,CAACC,KAAK,CAACF,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;QACrD,MAAMG,OAAM,GAAIF,IAAI,CAACC,KAAK,CAAEF,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAE,CAAC,CAAC;QACvE,OAAQ,GAAEL,KAAK,QAAQQ,OAAO,QAAQ;MACxC,OAAO;QACL,OAAO,GAAG;MACZ;IACF,CAAC;IACD,MAAMC,aAAaA,CAAA,EAAG;MACpB;MACA,MAAM,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,oBAAoB,CAAC;IAClD;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACF,aAAa,CAAC,CAAC;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}