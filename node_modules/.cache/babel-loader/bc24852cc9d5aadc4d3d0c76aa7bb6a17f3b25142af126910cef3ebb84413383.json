{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      workingHours: [],\n      goals: [],\n      filteredGoals: [],\n      selectedDate: null,\n      dateVisible: true\n    };\n  },\n  computed: {\n    userData() {\n      return this.$store.getters.getUserData;\n    }\n  },\n  watch: {\n    userData: {\n      handler(newValue) {\n        if (Array.isArray(newValue)) {\n          this.workingHours = [];\n          const uniqueDates = [];\n          newValue.forEach(detail => {\n            const date = detail.Date;\n            if (!uniqueDates.includes(date)) {\n              uniqueDates.push(date);\n              const workingHours = this.calculateWorkingHours(detail.InTime1, detail.OutTime1, detail.InTime2, detail.OutTime2);\n              this.workingHours.push({\n                Date: date,\n                WorkingHours: workingHours\n              });\n            }\n          });\n          this.goals = newValue.map(user => ({\n            name: user.name,\n            Date: user.Date,\n            InTime1: user.InTime1,\n            OutTime1: user.OutTime1,\n            InTime2: user.InTime2,\n            OutTime2: user.OutTime2\n          }));\n        } else {\n          this.workingHours = [];\n          this.goals = [];\n          this.clearFilteredGoals();\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    calculateWorkingHours(InTime1, OutTime1, InTime2, OutTime2) {\n      const inTime1 = new Date(`2000-01-01T${InTime1}`);\n      const outTime1 = new Date(`2000-01-01T${OutTime1}`);\n      const inTime2 = new Date(`2000-01-01T${InTime2}`);\n      const outTime2 = new Date(`2000-01-01T${OutTime2}`);\n      const diff1 = outTime1 - inTime1;\n      const diff2 = outTime2 - inTime2;\n      const hours1 = diff1 / (1000 * 60 * 60);\n      const hours2 = diff2 / (1000 * 60 * 60);\n      const totalHours = hours1 + hours2;\n      return totalHours.toFixed(2);\n    },\n    getDate(date) {\n      if (this.selectedDate === date) {\n        this.selectedDate = null;\n      } else {\n        this.selectedDate = date;\n        this.filteredGoals = this.goals.filter(goal => goal.Date === date);\n        this.dateVisible = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","workingHours","goals","filteredGoals","selectedDate","dateVisible","computed","userData","$store","getters","getUserData","watch","handler","newValue","Array","isArray","uniqueDates","forEach","detail","date","Date","includes","push","calculateWorkingHours","InTime1","OutTime1","InTime2","OutTime2","WorkingHours","map","user","name","clearFilteredGoals","immediate","methods","inTime1","outTime1","inTime2","outTime2","diff1","diff2","hours1","hours2","totalHours","toFixed","getDate","filter","goal"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table v-if=\"dateVisible\" class=\"table table-bordered\">\r\n      <!-- Working Hours Table -->\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(hour, index) in workingHours\" :key=\"index\">\r\n          <td @click=\"getDate(hour.Date)\">{{ hour.Date }}</td>\r\n          <td>{{ hour.WorkingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <!-- Goals Table -->\r\n    <table v-if=\"selectedDate\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime</th>\r\n          <th>OutTime</th>\r\n          \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in filteredGoals\" :key=\"index\">\r\n          <td>{{ goal.name }}</td>\r\n          <td>{{ goal.Date }}</td>\r\n          <td>{{ goal.InTime1 }}</td>\r\n          <td>{{ goal.OutTime1 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n      goals: [],\r\n      filteredGoals: [],\r\n      selectedDate: null,\r\n      dateVisible:true\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  watch: {\r\n    userData: {\r\n      handler(newValue) {\r\n  if (Array.isArray(newValue)) {\r\n  \r\n    this.workingHours = [];\r\n\r\n    const uniqueDates = [];\r\n    newValue.forEach(detail => {\r\n      const date = detail.Date;\r\n      if (!uniqueDates.includes(date)) {\r\n        uniqueDates.push(date);\r\n        const workingHours = this.calculateWorkingHours(detail.InTime1, detail.OutTime1, detail.InTime2, detail.OutTime2);\r\n        this.workingHours.push({ Date: date, WorkingHours: workingHours });\r\n      }\r\n    });\r\n          this.goals = newValue.map((user) => ({\r\n            name: user.name,\r\n            Date: user.Date,\r\n            InTime1: user.InTime1,\r\n            OutTime1: user.OutTime1,\r\n            InTime2: user.InTime2,\r\n            OutTime2: user.OutTime2,\r\n          }));\r\n        } else {\r\n          this.workingHours = [];\r\n          this.goals = [];\r\n          this.clearFilteredGoals();\r\n        }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    calculateWorkingHours(InTime1, OutTime1, InTime2, OutTime2) {\r\n      const inTime1 = new Date(`2000-01-01T${InTime1}`);\r\n      const outTime1 = new Date(`2000-01-01T${OutTime1}`);\r\n      const inTime2 = new Date(`2000-01-01T${InTime2}`);\r\n      const outTime2 = new Date(`2000-01-01T${OutTime2}`);\r\n      const diff1 = outTime1 - inTime1;\r\n      const diff2 = outTime2 - inTime2;\r\n      const hours1 = diff1 / (1000 * 60 * 60);\r\n      const hours2 = diff2 / (1000 * 60 * 60);\r\n      const totalHours = hours1 + hours2;\r\n      return totalHours.toFixed(2);\r\n    },\r\n    getDate(date) {\r\n      if (this.selectedDate === date) {\r\n        this.selectedDate = null; \r\n      } else {\r\n        this.selectedDate = date;\r\n        this.filteredGoals = this.goals.filter((goal) => goal.Date === date);\r\n        this.dateVisible=false;\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}