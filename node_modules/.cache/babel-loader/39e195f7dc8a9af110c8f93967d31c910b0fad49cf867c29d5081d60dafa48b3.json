{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CanvasJSObject from './canvasjs';\nimport TextBlock from './text_block';\nimport { extend, numberFormat, getLineDashArray } from '../helpers/utils';\nfunction Axis(chart, options, type, position) {\n  Axis.base.constructor.call(this, \"Axis\", options, chart.theme);\n  this.chart = chart;\n  this.canvas = chart.canvas;\n  this.ctx = chart.ctx;\n  this.maxWidth = 0;\n  this.maxHeight = 0;\n  this.intervalStartPosition = 0;\n  this.labels = [];\n  this._labels = null;\n\n  //Processed information about the data that gets plotted against this axis\n  this.dataInfo = {\n    min: Infinity,\n    max: -Infinity,\n    viewPortMin: Infinity,\n    viewPortMax: -Infinity,\n    minDiff: Infinity // Used only in case of axisX\n  };\n  if (type === \"axisX\") {\n    this.sessionVariables = this.chart.sessionVariables[type];\n    if (!this._options.interval) this.intervalType = null;\n  } else {\n    if (position === \"left\" || position === \"top\") this.sessionVariables = this.chart.sessionVariables[\"axisY\"];else {\n      this.sessionVariables = this.chart.sessionVariables[\"axisY2\"];\n    }\n  }\n  if (typeof this._options.titleFontSize === \"undefined\") {\n    this.titleFontSize = this.chart.getAutoFontSize(this.titleFontSize);\n\n    //window.console.log(\"titleFontSize: \" + this.titleFontSize);\n  }\n  if (typeof this._options.labelFontSize === \"undefined\") {\n    this.labelFontSize = this.chart.getAutoFontSize(this.labelFontSize);\n\n    //window.console.log(\"labelFontSize: \" + this.labelFontSize);\n  }\n\n  //Axis Type : axisX, axisY\n  this.type = type;\n  if (type === \"axisX\" && (!options || typeof options.gridThickness === \"undefined\")) this.gridThickness = 0;\n  this._position = position;\n  this.lineCoordinates = {\n    x1: null,\n    y1: null,\n    x2: null,\n    y2: null,\n    width: null\n  }; //{x1:, y1:, x2:, y2:, width:}\n  //\n  {\n    this.labelAngle = (this.labelAngle % 360 + 360) % 360;\n    if (this.labelAngle > 90 && this.labelAngle <= 270) this.labelAngle -= 180;else if (this.labelAngle > 180 && this.labelAngle <= 270) this.labelAngle -= 180;else if (this.labelAngle > 270 && this.labelAngle <= 360) this.labelAngle -= 360;\n  }\n  if (this._options.stripLines && this._options.stripLines.length > 0) {\n    this.stripLines = [];\n    for (var i = 0; i < this._options.stripLines.length; i++) {\n      this.stripLines.push(new StripLine(this.chart, this._options.stripLines[i], chart.theme, ++this.chart._eventManager.lastObjectId, this));\n    }\n  }\n  this._titleTextBlock = null;\n  if (!this.hasOptionChanged(\"viewportMinimum\") && !isNaN(this.sessionVariables.newViewportMinimum) && this.sessionVariables.newViewportMinimum !== null) this.viewportMinimum = this.sessionVariables.newViewportMinimum;else this.sessionVariables.newViewportMinimum = null;\n  if (!this.hasOptionChanged(\"viewportMaximum\") && !isNaN(this.sessionVariables.newViewportMaximum) && this.sessionVariables.newViewportMaximum !== null) this.viewportMaximum = this.sessionVariables.newViewportMaximum;else this.sessionVariables.newViewportMaximum = null;\n  if (this.minimum !== null && this.viewportMinimum !== null) this.viewportMinimum = Math.max(this.viewportMinimum, this.minimum);\n  if (this.maximum !== null && this.viewportMaximum !== null) this.viewportMaximum = Math.min(this.viewportMaximum, this.maximum);\n  this.trackChanges(\"viewportMinimum\");\n  this.trackChanges(\"viewportMaximum\");\n}\nextend(Axis, CanvasJSObject);\nAxis.prototype.createLabels = function () {\n  var textBlock;\n  var i = 0;\n  var endPoint;\n  var labelMaxWidth = 0;\n  var labelMaxHeight = 0;\n  var intervalInPixels = 0;\n\n  //var intervalInPixels = this.conversionParameters.pixelPerUnit * this.interval;\n\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    intervalInPixels = this.lineCoordinates.width / Math.abs(this.viewportMaximum - this.viewportMinimum) * this.interval;\n    if (this.labelAutoFit) {\n      labelMaxWidth = typeof this._options.labelMaxWidth === \"undefined\" ? intervalInPixels * .9 >> 0 : this.labelMaxWidth;\n    } else {\n      labelMaxWidth = typeof this._options.labelMaxWidth === \"undefined\" ? this.chart.width * .7 >> 0 : this.labelMaxWidth;\n    }\n    labelMaxHeight = typeof this._options.labelWrap === \"undefined\" || this.labelWrap ? this.chart.height * .5 >> 0 : this.labelFontSize * 1.5;\n  } else if (this._position === \"left\" || this._position === \"right\") {\n    intervalInPixels = this.lineCoordinates.height / Math.abs(this.viewportMaximum - this.viewportMinimum) * this.interval;\n    if (this.labelAutoFit) {\n      labelMaxWidth = typeof this._options.labelMaxWidth === \"undefined\" ? this.chart.width * .3 >> 0 : this.labelMaxWidth;\n    } else {\n      labelMaxWidth = typeof this._options.labelMaxWidth === \"undefined\" ? this.chart.width * .5 >> 0 : this.labelMaxWidth;\n    }\n    labelMaxHeight = typeof this._options.labelWrap === \"undefined\" || this.labelWrap ? intervalInPixels * 2 >> 0 : this.labelFontSize * 1.5;\n  }\n  if (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\n    endPoint = addToDateTime(new Date(this.viewportMaximum), this.interval, this.intervalType);\n    //endPoint = this.viewportMaximum;\n\n    for (i = this.intervalStartPosition; i < endPoint; addToDateTime(i, this.interval, this.intervalType)) {\n      //var text = dateFormat(i, this.valueFormatString);\n      var timeInMilliseconds = i.getTime();\n      var text = this.labelFormatter ? this.labelFormatter({\n        chart: this.chart,\n        axis: this._options,\n        value: i,\n        label: this.labels[i] ? this.labels[i] : null\n      }) : this.type === \"axisX\" && this.labels[timeInMilliseconds] ? this.labels[timeInMilliseconds] : dateFormat(i, this.valueFormatString, this.chart._cultureInfo);\n      textBlock = new TextBlock(this.ctx, {\n        x: 0,\n        y: 0,\n        //maxWidth: this.maxHeight,\n        //maxHeight: this.labelFontSize,\n        maxWidth: labelMaxWidth,\n        maxHeight: labelMaxHeight,\n        angle: this.labelAngle,\n        text: this.prefix + text + this.suffix,\n        horizontalAlign: \"left\",\n        //left, center, right\n        fontSize: this.labelFontSize,\n        //in pixels\n        fontFamily: this.labelFontFamily,\n        fontWeight: this.labelFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.labelFontColor,\n        fontStyle: this.labelFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"middle\"\n      });\n      this._labels.push({\n        position: i.getTime(),\n        textBlock: textBlock,\n        effectiveHeight: null\n      });\n    }\n  } else {\n    endPoint = this.viewportMaximum;\n\n    //if ((Math.floor(this.interval) < this.interval && !this._options.interval) || true) {\n\n    //Check if it should be rendered as a category axis. If yes, then ceil the interval\n    if (this.labels && this.labels.length) {\n      var tempInterval = Math.ceil(this.interval);\n      var tempStartPoint = Math.ceil(this.intervalStartPosition);\n      var hasAllLabels = false;\n      for (i = tempStartPoint; i < this.viewportMaximum; i += tempInterval) {\n        if (this.labels[i]) {\n          hasAllLabels = true;\n        } else {\n          hasAllLabels = false;\n          break;\n        }\n      }\n      if (hasAllLabels) {\n        this.interval = tempInterval;\n        this.intervalStartPosition = tempStartPoint;\n      }\n    }\n\n    //parseFloat & toPrecision are being used to avoid issues related to precision.\n    for (i = this.intervalStartPosition; i <= endPoint; i = parseFloat((i + this.interval).toFixed(14))) {\n      var text = this.labelFormatter ? this.labelFormatter({\n        chart: this.chart,\n        axis: this._options,\n        value: i,\n        label: this.labels[i] ? this.labels[i] : null\n      }) : this.type === \"axisX\" && this.labels[i] ? this.labels[i] : numberFormat(i, this.valueFormatString, this.chart._cultureInfo);\n      textBlock = new TextBlock(this.ctx, {\n        x: 0,\n        y: 0,\n        //maxWidth: this.maxHeight,\n        //maxHeight: this.labelFontSize,\n        maxWidth: labelMaxWidth,\n        maxHeight: labelMaxHeight,\n        angle: this.labelAngle,\n        text: this.prefix + text + this.suffix,\n        horizontalAlign: \"left\",\n        //left, center, right\n        fontSize: this.labelFontSize,\n        //in pixels\n        fontFamily: this.labelFontFamily,\n        fontWeight: this.labelFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.labelFontColor,\n        fontStyle: this.labelFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"middle\",\n        borderThickness: 0\n      });\n      this._labels.push({\n        position: i,\n        textBlock: textBlock,\n        effectiveHeight: null\n      });\n    }\n  }\n  for (var i = 0; i < this.stripLines.length; i++) {\n    var stripLine = this.stripLines[i];\n    textBlock = new TextBlock(this.ctx, {\n      x: 0,\n      y: 0,\n      //maxWidth: this.maxHeight,\n      //maxHeight: this.labelFontSize,\n      backgroundColor: stripLine.labelBackgroundColor,\n      maxWidth: labelMaxWidth,\n      maxHeight: labelMaxHeight,\n      angle: this.labelAngle,\n      text: stripLine.labelFormatter ? stripLine.labelFormatter({\n        chart: this.chart,\n        axis: this,\n        stripLine: stripLine\n      }) : stripLine.label,\n      horizontalAlign: \"left\",\n      //left, center, right\n      fontSize: stripLine.labelFontSize,\n      //in pixels\n      fontFamily: stripLine.labelFontFamily,\n      fontWeight: stripLine.labelFontWeight,\n      //normal, bold, bolder, lighter,\n      fontColor: stripLine._options.labelFontColor || stripLine.color,\n      fontStyle: stripLine.labelFontStyle,\n      // normal, italic, oblique\n      textBaseline: \"middle\",\n      borderThickness: 0\n    });\n    this._labels.push({\n      position: stripLine.value,\n      textBlock: textBlock,\n      effectiveHeight: null,\n      stripLine: stripLine\n    });\n  }\n};\nAxis.prototype.createLabelsAndCalculateWidth = function () {\n  var maxLabelEffectiveWidth = 0;\n  this._labels = [];\n  if (this._position === \"left\" || this._position === \"right\") {\n    this.createLabels();\n    for (var i = 0; i < this._labels.length; i++) {\n      var textBlock = this._labels[i].textBlock;\n      var size = textBlock.measureText();\n\n      //var hypotenuse = Math.sqrt(Math.pow(size.height / 2, 2) + Math.pow(size.width, 2));\n      //labelEffectiveWidth = hypotenuse * Math.cos(Math.abs(Math.PI / 180 * this.labelAngle) - Math.abs(Math.acos(size.width / hypotenuse)));\n\n      var labelEffectiveWidth = 0;\n      if (this.labelAngle === 0) labelEffectiveWidth = size.width;else labelEffectiveWidth = size.width * Math.cos(Math.PI / 180 * Math.abs(this.labelAngle)) + size.height / 2 * Math.sin(Math.PI / 180 * Math.abs(this.labelAngle));\n      if (maxLabelEffectiveWidth < labelEffectiveWidth) maxLabelEffectiveWidth = labelEffectiveWidth;\n      this._labels[i].effectiveWidth = labelEffectiveWidth;\n    }\n  }\n  var titleHeight = this.title ? getFontHeightInPixels(this.titleFontFamily, this.titleFontSize, this.titleFontWeight) + 2 : 0;\n  var axisWidth = titleHeight + maxLabelEffectiveWidth + this.tickLength + 5;\n\n  //if (isDebugMode && window.console) {\n  //\twindow.console.log(this.type + \"--- axisWidth: \" + axisWidth);\n  //}\n\n  return axisWidth;\n};\nAxis.prototype.createLabelsAndCalculateHeight = function () {\n  var maxLabelEffectiveHeight = 0;\n  this._labels = [];\n  var textBlock;\n  var i = 0;\n  this.createLabels();\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    for (i = 0; i < this._labels.length; i++) {\n      textBlock = this._labels[i].textBlock;\n      var size = textBlock.measureText();\n      //var diagonal = Math.sqrt(Math.pow(size.height, 2) + Math.pow(size.width, 2));\n\n      //var hypotenuse = Math.sqrt(Math.pow(size.height / 2, 2) + Math.pow(size.width, 2));\n      //var labelEffectiveHeight = hypotenuse * Math.cos(Math.PI / 2 - (Math.abs(Math.PI / 180 * this.labelAngle) + Math.abs(Math.acos(size.width / hypotenuse))));\n\n      var labelEffectiveHeight = 0;\n      if (this.labelAngle === 0) labelEffectiveHeight = size.height;else labelEffectiveHeight = size.width * Math.sin(Math.PI / 180 * Math.abs(this.labelAngle)) + size.height / 2 * Math.cos(Math.PI / 180 * Math.abs(this.labelAngle));\n      if (maxLabelEffectiveHeight < labelEffectiveHeight) maxLabelEffectiveHeight = labelEffectiveHeight;\n      this._labels[i].effectiveHeight = labelEffectiveHeight;\n    }\n  }\n\n  //var titleHeight = this.title ? this.titleFontSize + 5 : 0;\n  var titleHeight = this.title ? getFontHeightInPixels(this.titleFontFamily, this.titleFontSize, this.titleFontWeight) + 2 : 0;\n  return titleHeight + maxLabelEffectiveHeight + this.tickLength + 5;\n};\n\n//Static Method that co-ordinates between axisX, axisY and renders them\nAxis.setLayoutAndRender = function (axisX, axisY, axisY2, axisPlacement, freeSpace) {\n  var x1, y1, x2, y2;\n  var chart = axisX.chart;\n  var ctx = chart.ctx;\n  axisX.calculateAxisParameters();\n  if (axisY) axisY.calculateAxisParameters();\n  if (axisY2) axisY2.calculateAxisParameters();\n\n  //if (axisY && axisY2 && typeof (axisY._options.viewportMaximum) === \"undefined\" && typeof (axisY._options.viewportMinimum) === \"undefined\" && typeof (axisY._options.interval) === \"undefined\"\n  //\t\t&& typeof (axisY2._options.viewportMaximum) === \"undefined\" && typeof (axisY2._options.viewportMinimum) === \"undefined\" && typeof (axisY2._options.interval) === \"undefined\") {\n\n  //\tvar noTicksY = (axisY.viewportMaximum - axisY.viewportMinimum) / axisY.interval;\n\n  //\tvar noTicksY2 = (axisY2.viewportMaximum - axisY2.viewportMinimum) / axisY2.interval;\n\n  //\tif (noTicksY > noTicksY2) {\n  //\t\taxisY2.viewportMaximum = axisY2.interval * noTicksY + axisY2.viewportMinimum;\n  //\t} else if (noTicksY2 > noTicksY) {\n  //\t\taxisY.viewportMaximum = axisY.interval * noTicksY2 + axisY.viewportMinimum;\n  //\t}\n  //}\n\n  var axisYlineThickness = axisY ? axisY.lineThickness ? axisY.lineThickness : 0 : 0;\n  var axisY2lineThickness = axisY2 ? axisY2.lineThickness ? axisY2.lineThickness : 0 : 0;\n  var axisYGridThickness = axisY ? axisY.gridThickness ? axisY.gridThickness : 0 : 0;\n  var axisY2GridThickness = axisY2 ? axisY2.gridThickness ? axisY2.gridThickness : 0 : 0;\n  var axisYMargin = axisY ? axisY.margin : 0;\n  var axisY2Margin = axisY ? axisY.margin : 0;\n  if (axisPlacement === \"normal\") {\n    axisX.lineCoordinates = {};\n    var axisYWidth = Math.ceil(axisY ? axisY.createLabelsAndCalculateWidth() : 0);\n    x1 = Math.round(freeSpace.x1 + axisYWidth + axisYMargin);\n    axisX.lineCoordinates.x1 = x1;\n    var axisY2Width = Math.ceil(axisY2 ? axisY2.createLabelsAndCalculateWidth() : 0);\n    x2 = Math.round(freeSpace.x2 - axisY2Width > axisX.chart.width - 10 ? axisX.chart.width - 10 : freeSpace.x2 - axisY2Width);\n    axisX.lineCoordinates.x2 = x2;\n    axisX.lineCoordinates.width = Math.abs(x2 - x1); // required early on inside createLabels of axisX\n\n    var axisXHeight = Math.ceil(axisX.createLabelsAndCalculateHeight());\n\n    // Position axisX based on the available free space, Margin and its height\n    //x1 = freeSpace.x1 + axisYWidth + axisYMargin + axisYlineThickness / 2;\n    y1 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\n    y2 = Math.round(freeSpace.y2 - axisX.margin);\n\n    //axisX.lineCoordinates = { x1: x1, y1: y1, x2: x2, y2: y1, width: Math.abs(x2 - x1) }\n    axisX.lineCoordinates.y1 = y1;\n    axisX.lineCoordinates.y2 = y1;\n    axisX.boundingRect = {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n\n    //if (isDebugMode) {\n    //\taxisX.ctx.rect(axisX.boundingRect.x1, axisX.boundingRect.y1, axisX.boundingRect.width, axisX.boundingRect.height);\n    //\taxisX.ctx.stroke();\n    //}\n\n    // Position axisY based on the available free space, Margin and its height\n    if (axisY) {\n      x1 = Math.round(freeSpace.x1 + axisY.margin);\n      y1 = Math.round(freeSpace.y1 < 10 ? 10 : freeSpace.y1);\n      x2 = Math.round(freeSpace.x1 + axisYWidth + axisY.margin);\n      //y2 = freeSpace.y2 - axisXHeight - axisX.margin - axisX.lineThickness / 2;\n      y2 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\n      axisY.lineCoordinates = {\n        x1: x2,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        height: Math.abs(y2 - y1)\n      };\n      axisY.boundingRect = {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        width: x2 - x1,\n        height: y2 - y1\n      };\n    }\n\n    //if (isDebugMode && axisY) {\n    //\taxisY.ctx.rect(axisY.boundingRect.x1, axisY.boundingRect.y1, axisY.boundingRect.width, axisY.boundingRect.height);\n    //\taxisY.ctx.stroke();\n    //}\n\n    // Position axisY2 based on the available free space, Margin and its height\n    if (axisY2) {\n      x1 = Math.round(axisX.lineCoordinates.x2);\n      y1 = Math.round(freeSpace.y1 < 10 ? 10 : freeSpace.y1);\n      x2 = Math.round(x1 + axisY2Width + axisY2.margin);\n      //y2 = freeSpace.y2 - axisXHeight - axisX.margin - axisX.lineThickness / 2;\n      y2 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\n      axisY2.lineCoordinates = {\n        x1: x1,\n        y1: y1,\n        x2: x1,\n        y2: y2,\n        height: Math.abs(y2 - y1)\n      };\n      axisY2.boundingRect = {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        width: x2 - x1,\n        height: y2 - y1\n      };\n    }\n    axisX.calculateValueToPixelConversionParameters();\n    if (axisY) axisY.calculateValueToPixelConversionParameters();\n    if (axisY2) axisY2.calculateValueToPixelConversionParameters();\n    ctx.save();\n    ctx.rect(5, axisX.boundingRect.y1, axisX.chart.width - 10, axisX.boundingRect.height);\n    ctx.clip();\n    axisX.renderLabelsTicksAndTitle();\n    ctx.restore();\n    if (axisY) axisY.renderLabelsTicksAndTitle();\n    if (axisY2) axisY2.renderLabelsTicksAndTitle();\n    chart.preparePlotArea();\n    var plotArea = axisX.chart.plotArea;\n    ctx.save();\n    ctx.rect(plotArea.x1, plotArea.y1, Math.abs(plotArea.x2 - plotArea.x1), Math.abs(plotArea.y2 - plotArea.y1));\n    ctx.clip();\n    axisX.renderStripLinesOfThicknessType(\"value\");\n    if (axisY) axisY.renderStripLinesOfThicknessType(\"value\");\n    if (axisY2) axisY2.renderStripLinesOfThicknessType(\"value\");\n    axisX.renderInterlacedColors();\n    if (axisY) axisY.renderInterlacedColors();\n    if (axisY2) axisY2.renderInterlacedColors();\n    ctx.restore();\n    axisX.renderGrid();\n    if (axisY) axisY.renderGrid();\n    if (axisY2) axisY2.renderGrid();\n    axisX.renderAxisLine();\n    if (axisY) axisY.renderAxisLine();\n    if (axisY2) axisY2.renderAxisLine();\n\n    //No need to clip to plotArea because stripLines need to render on top of gridlines\n    axisX.renderStripLinesOfThicknessType(\"pixel\");\n    if (axisY) axisY.renderStripLinesOfThicknessType(\"pixel\");\n    if (axisY2) axisY2.renderStripLinesOfThicknessType(\"pixel\");\n  } else {\n    var axisXWidth = Math.ceil(axisX.createLabelsAndCalculateWidth());\n    if (axisY) {\n      axisY.lineCoordinates = {};\n      x1 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\n      x2 = Math.round(freeSpace.x2 > axisY.chart.width - 10 ? axisY.chart.width - 10 : freeSpace.x2);\n      axisY.lineCoordinates.x1 = x1;\n      axisY.lineCoordinates.x2 = x2;\n      axisY.lineCoordinates.width = Math.abs(x2 - x1);\n    }\n    if (axisY2) {\n      axisY2.lineCoordinates = {};\n      x1 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\n      x2 = Math.round(freeSpace.x2 > axisY2.chart.width - 10 ? axisY2.chart.width - 10 : freeSpace.x2);\n      axisY2.lineCoordinates.x1 = x1;\n      axisY2.lineCoordinates.x2 = x2;\n      axisY2.lineCoordinates.width = Math.abs(x2 - x1);\n    }\n    var axisYHeight = Math.ceil(axisY ? axisY.createLabelsAndCalculateHeight() : 0);\n    var axisY2Height = Math.ceil(axisY2 ? axisY2.createLabelsAndCalculateHeight() : 0);\n\n    // Position axisY based on the available free space, Margin and its height\n    if (axisY) {\n      //x1 = freeSpace.x1 + axisXWidth + axisX.margin + axisX.lineThickness / 2;\n      //x2 = freeSpace.x2 > axisY.chart.width - 10 ? axisY.chart.width - 10 : freeSpace.x2;\n\n      y1 = Math.round(freeSpace.y2 - axisYHeight - axisY.margin);\n      y2 = Math.round(freeSpace.y2 - axisYMargin > axisY.chart.height - 10 ? axisY.chart.height - 10 : freeSpace.y2 - axisYMargin);\n\n      //axisY.lineCoordinates = { x1: x1, y1: y1, x2: x2, y2: y1, width: Math.abs(x2 - x1) }\n      axisY.lineCoordinates.y1 = y1;\n      axisY.lineCoordinates.y2 = y1;\n      axisY.boundingRect = {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        width: x2 - x1,\n        height: axisYHeight\n      };\n    }\n\n    // Position axisY based on the available free space, Margin and its height\n    if (axisY2) {\n      //x1 = freeSpace.x1 + axisXWidth + axisX.margin + axisX.lineThickness / 2;\n      //x2 = freeSpace.x2 > axisY2.chart.width - 10 ? axisY2.chart.width - 10 : freeSpace.x2;\n\n      y1 = Math.round(freeSpace.y1 + axisY2.margin);\n      y2 = freeSpace.y1 + axisY2.margin + axisY2Height;\n\n      //axisY2.lineCoordinates = { x1: x1, y1: y2, x2: x2, y2: y2, width: Math.abs(x2 - x1) }\n      axisY2.lineCoordinates.y1 = y2;\n      axisY2.lineCoordinates.y2 = y2;\n      axisY2.boundingRect = {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        width: x2 - x1,\n        height: axisY2Height\n      };\n    }\n\n    //axisY.ctx.rect(axisY.boundingRect.x1, axisY.boundingRect.y1, axisY.boundingRect.width, axisY.boundingRect.height);\n    //axisY.ctx.stroke();\n\n    // Position axisX based on the available free space, Margin and its height\n    x1 = Math.round(freeSpace.x1 + axisX.margin);\n    y1 = Math.round(axisY2 ? axisY2.lineCoordinates.y2 : freeSpace.y1 < 10 ? 10 : freeSpace.y1);\n    x2 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\n    y2 = Math.round(axisY ? axisY.lineCoordinates.y1 : freeSpace.y2 - axisYMargin > axisX.chart.height - 10 ? axisX.chart.height - 10 : freeSpace.y2 - axisYMargin);\n    axisX.lineCoordinates = {\n      x1: x2,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      height: Math.abs(y2 - y1)\n    };\n    axisX.boundingRect = {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      width: x2 - x1,\n      height: y2 - y1\n    };\n\n    //axisX.ctx.rect(axisX.boundingRect.x1, axisX.boundingRect.y1, axisX.boundingRect.width, axisX.boundingRect.height);\n    //axisX.ctx.stroke();\n\n    axisX.calculateValueToPixelConversionParameters();\n    if (axisY) axisY.calculateValueToPixelConversionParameters();\n    if (axisY2) axisY2.calculateValueToPixelConversionParameters();\n\n    //ctx.save();\n    //ctx.rect(axisY.boundingRect.x1 - 30, axisY.boundingRect.y1, axisY.boundingRect.width + 60, axisY.boundingRect.height);\n    //ctx.clip();\n\n    if (axisY) axisY.renderLabelsTicksAndTitle();\n    if (axisY2) axisY2.renderLabelsTicksAndTitle();\n\n    //ctx.restore();\n\n    axisX.renderLabelsTicksAndTitle();\n    chart.preparePlotArea();\n    var plotArea = axisX.chart.plotArea;\n    ctx.save();\n    ctx.rect(plotArea.x1, plotArea.y1, Math.abs(plotArea.x2 - plotArea.x1), Math.abs(plotArea.y2 - plotArea.y1));\n    ctx.clip();\n\n    //No need to clip to plotArea because stripLines need to render on top of gridlines\n    axisX.renderStripLinesOfThicknessType(\"value\");\n    if (axisY) axisY.renderStripLinesOfThicknessType(\"value\");\n    if (axisY2) axisY2.renderStripLinesOfThicknessType(\"value\");\n    axisX.renderInterlacedColors();\n    if (axisY) axisY.renderInterlacedColors();\n    if (axisY2) axisY2.renderInterlacedColors();\n    ctx.restore();\n    axisX.renderGrid();\n    if (axisY) axisY.renderGrid();\n    if (axisY2) axisY2.renderGrid();\n    axisX.renderAxisLine();\n    if (axisY) axisY.renderAxisLine();\n    if (axisY2) axisY2.renderAxisLine();\n    axisX.renderStripLinesOfThicknessType(\"pixel\");\n    if (axisY) axisY.renderStripLinesOfThicknessType(\"pixel\");\n    if (axisY2) axisY2.renderStripLinesOfThicknessType(\"pixel\");\n  }\n};\nAxis.prototype.renderLabelsTicksAndTitle = function () {\n  var skipLabels = false;\n  var totalLabelWidth = 0;\n  var thresholdRatio = 1;\n  var labelCount = 0;\n  var intervalInPixels = this.conversionParameters.pixelPerUnit * this.interval;\n  if (this.labelAngle !== 0 && this.labelAngle !== 360) thresholdRatio = 1.2;\n\n  //Don't skip labels when interval is explicitely set\n  if (typeof this._options.interval === \"undefined\") {\n    if (this._position === \"bottom\" || this._position === \"top\") {\n      //thresholdRatio = .9;// More space is preferred between labels when axis is horizontally aligned\n\n      for (i = 0; i < this._labels.length; i++) {\n        label = this._labels[i];\n        if (label.position < this.viewportMinimum || label.stripLine)\n          // don't consider stripLine's lable\n          continue;\n        var width = label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle) + label.textBlock.height * Math.sin(Math.PI / 180 * this.labelAngle);\n        totalLabelWidth += width;\n      }\n      if (totalLabelWidth > this.lineCoordinates.width * thresholdRatio) {\n        skipLabels = true;\n      }\n    }\n    if (this._position === \"left\" || this._position === \"right\") {\n      for (i = 0; i < this._labels.length; i++) {\n        label = this._labels[i];\n        if (label.position < this.viewportMinimum || label.stripLine)\n          // don't consider stripLine's lable\n          continue;\n        var width = label.textBlock.height * Math.cos(Math.PI / 180 * this.labelAngle) + label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle);\n        totalLabelWidth += width;\n      }\n      if (totalLabelWidth > this.lineCoordinates.height * thresholdRatio) {\n        skipLabels = true;\n      }\n    }\n  }\n  if (this._position === \"bottom\") {\n    var i = 0;\n    var label;\n    var xy;\n    for (i = 0; i < this._labels.length; i++) {\n      label = this._labels[i];\n      if (label.position < this.viewportMinimum || label.position > this.viewportMaximum) continue;\n      xy = this.getPixelCoordinatesOnAxis(label.position);\n      if (this.tickThickness && !this._labels[i].stripLine || this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\") {\n        if (this._labels[i].stripLine) {\n          stripLine = this._labels[i].stripLine;\n          this.ctx.lineWidth = stripLine.thickness;\n          this.ctx.strokeStyle = stripLine.color;\n        } else {\n          this.ctx.lineWidth = this.tickThickness;\n          this.ctx.strokeStyle = this.tickColor;\n        }\n        var tickX = this.ctx.lineWidth % 2 === 1 ? (xy.x << 0) + .5 : xy.x << 0;\n        this.ctx.beginPath();\n        this.ctx.moveTo(tickX, xy.y << 0);\n        this.ctx.lineTo(tickX, xy.y + this.tickLength << 0);\n        this.ctx.stroke();\n      }\n\n      //Don't skip stripLine's labels\n      if (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine) continue;\n      if (label.textBlock.angle === 0) {\n        xy.x -= label.textBlock.width / 2;\n        //xy.y += this.tickLength + label.textBlock.height / 2;\n        xy.y += this.tickLength + label.textBlock.fontSize / 2;\n      } else {\n        xy.x -= this.labelAngle < 0 ? label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle) : 0;\n        xy.y += this.tickLength + Math.abs(this.labelAngle < 0 ? label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle) - 5 : 5);\n      }\n      label.textBlock.x = xy.x;\n      label.textBlock.y = xy.y;\n      label.textBlock.render(true);\n    }\n    if (this.title) {\n      this._titleTextBlock = new TextBlock(this.ctx, {\n        x: this.lineCoordinates.x1,\n        // This is recalculated again\n        y: this.boundingRect.y2 - this.titleFontSize - 5,\n        // This is recalculated again\n        maxWidth: this.lineCoordinates.width,\n        maxHeight: this.titleFontSize * 1.5,\n        angle: 0,\n        text: this.title,\n        horizontalAlign: \"center\",\n        //left, center, right\n        fontSize: this.titleFontSize,\n        //in pixels\n        fontFamily: this.titleFontFamily,\n        fontWeight: this.titleFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.titleFontColor,\n        fontStyle: this.titleFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"top\"\n      });\n      this._titleTextBlock.measureText();\n      this._titleTextBlock.x = this.lineCoordinates.x1 + this.lineCoordinates.width / 2 - this._titleTextBlock.width / 2;\n      this._titleTextBlock.y = this.boundingRect.y2 - this._titleTextBlock.height - 3;\n      this._titleTextBlock.render(true);\n    }\n  } else if (this._position === \"top\") {\n    var i = 0;\n    var label;\n    var xy;\n    var stripLine;\n    for (i = 0; i < this._labels.length; i++) {\n      label = this._labels[i];\n      if (label.position < this.viewportMinimum || label.position > this.viewportMaximum) continue;\n      xy = this.getPixelCoordinatesOnAxis(label.position);\n      if (this.tickThickness && !this._labels[i].stripLine || this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\") {\n        if (this._labels[i].stripLine) {\n          stripLine = this._labels[i].stripLine;\n          this.ctx.lineWidth = stripLine.thickness;\n          this.ctx.strokeStyle = stripLine.color;\n        } else {\n          this.ctx.lineWidth = this.tickThickness;\n          this.ctx.strokeStyle = this.tickColor;\n        }\n        var tickX = this.ctx.lineWidth % 2 === 1 ? (xy.x << 0) + .5 : xy.x << 0;\n        this.ctx.beginPath();\n        this.ctx.moveTo(tickX, xy.y << 0);\n        this.ctx.lineTo(tickX, xy.y - this.tickLength << 0);\n        this.ctx.stroke();\n      }\n\n      //Don't skip stripLine's labels\n      if (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine) continue;\n      if (label.textBlock.angle === 0) {\n        xy.x -= label.textBlock.width / 2;\n        xy.y -= this.tickLength + label.textBlock.height / 2;\n      } else {\n        xy.x -= this.labelAngle > 0 ? label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle) : 0;\n        xy.y -= this.tickLength + Math.abs(this.labelAngle > 0 ? label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle) + 5 : 5);\n      }\n      label.textBlock.x = xy.x;\n      label.textBlock.y = xy.y;\n      label.textBlock.render(true);\n    }\n    if (this.title) {\n      this._titleTextBlock = new TextBlock(this.ctx, {\n        x: this.lineCoordinates.x1,\n        // This is recalculated again\n        y: this.boundingRect.y1 + 1,\n        maxWidth: this.lineCoordinates.width,\n        maxHeight: this.titleFontSize * 1.5,\n        angle: 0,\n        text: this.title,\n        horizontalAlign: \"center\",\n        //left, center, right\n        fontSize: this.titleFontSize,\n        //in pixels\n        fontFamily: this.titleFontFamily,\n        fontWeight: this.titleFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.titleFontColor,\n        fontStyle: this.titleFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"top\"\n      });\n      this._titleTextBlock.measureText();\n      this._titleTextBlock.x = this.lineCoordinates.x1 + this.lineCoordinates.width / 2 - this._titleTextBlock.width / 2;\n      this._titleTextBlock.render(true);\n    }\n  } else if (this._position === \"left\") {\n    var label;\n    var xy;\n    for (var i = 0; i < this._labels.length; i++) {\n      label = this._labels[i];\n      if (label.position < this.viewportMinimum || label.position > this.viewportMaximum) continue;\n      xy = this.getPixelCoordinatesOnAxis(label.position);\n      if (this.tickThickness && !this._labels[i].stripLine || this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\") {\n        if (this._labels[i].stripLine) {\n          stripLine = this._labels[i].stripLine;\n          this.ctx.lineWidth = stripLine.thickness;\n          this.ctx.strokeStyle = stripLine.color;\n        } else {\n          this.ctx.lineWidth = this.tickThickness;\n          this.ctx.strokeStyle = this.tickColor;\n        }\n        var tickY = this.ctx.lineWidth % 2 === 1 ? (xy.y << 0) + .5 : xy.y << 0;\n        this.ctx.beginPath();\n        this.ctx.moveTo(xy.x << 0, tickY);\n        this.ctx.lineTo(xy.x - this.tickLength << 0, tickY);\n        this.ctx.stroke();\n      }\n\n      //Don't skip stripLine's labels\n      if (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine) continue;\n      label.textBlock.x = xy.x - label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle) - this.tickLength - 5;\n      if (this.labelAngle === 0) {\n        label.textBlock.y = xy.y;\n      } else label.textBlock.y = xy.y - label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle);\n      label.textBlock.render(true);\n    }\n    if (this.title) {\n      this._titleTextBlock = new TextBlock(this.ctx, {\n        x: this.boundingRect.x1 + 1,\n        y: this.lineCoordinates.y2,\n        maxWidth: this.lineCoordinates.height,\n        maxHeight: this.titleFontSize * 1.5,\n        angle: -90,\n        text: this.title,\n        horizontalAlign: \"center\",\n        //left, center, right\n        fontSize: this.titleFontSize,\n        //in pixels\n        fontFamily: this.titleFontFamily,\n        fontWeight: this.titleFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.titleFontColor,\n        fontStyle: this.titleFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"top\"\n      });\n      var size = this._titleTextBlock.measureText();\n\n      //this._titleTextBlock.x -= 4;\n\n      this._titleTextBlock.y = this.lineCoordinates.height / 2 + this._titleTextBlock.width / 2 + this.lineCoordinates.y1;\n      this._titleTextBlock.render(true);\n\n      //if (isDebugMode) {\n      //\twindow.console.log(\"titleFontSize: \" + this.titleFontSize + \"; width: \" + size.width + \"; height: \" + size.height);\n      //\twindow.console.log(\"this.boundingRect.x1: \" + this.boundingRect.x1);\n\n      //\t//this.ctx.rect(this._titleTextBlock.x, this._titleTextBlock.y, this._titleTextBlock.height, -this._titleTextBlock.width);\n      //\t//this.ctx.stroke();\n\n      //}\n    }\n  } else if (this._position === \"right\") {\n    var label;\n    var xy;\n    for (var i = 0; i < this._labels.length; i++) {\n      label = this._labels[i];\n      if (label.position < this.viewportMinimum || label.position > this.viewportMaximum) continue;\n      xy = this.getPixelCoordinatesOnAxis(label.position);\n      if (this.tickThickness && !this._labels[i].stripLine || this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\") {\n        if (this._labels[i].stripLine) {\n          stripLine = this._labels[i].stripLine;\n          this.ctx.lineWidth = stripLine.thickness;\n          this.ctx.strokeStyle = stripLine.color;\n        } else {\n          this.ctx.lineWidth = this.tickThickness;\n          this.ctx.strokeStyle = this.tickColor;\n        }\n        var tickY = this.ctx.lineWidth % 2 === 1 ? (xy.y << 0) + .5 : xy.y << 0;\n        this.ctx.beginPath();\n        this.ctx.moveTo(xy.x << 0, tickY);\n        this.ctx.lineTo(xy.x + this.tickLength << 0, tickY);\n        this.ctx.stroke();\n      }\n\n      //Don't skip stripLine's labels\n      if (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine) continue;\n      label.textBlock.x = xy.x + this.tickLength + 5;\n      //label.textBlock.y = xy.y - (label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle));\n      if (this.labelAngle === 0) {\n        label.textBlock.y = xy.y;\n      } else label.textBlock.y = xy.y;\n      label.textBlock.render(true);\n    }\n    if (this.title) {\n      this._titleTextBlock = new TextBlock(this.ctx, {\n        x: this.boundingRect.x2 - 1,\n        y: this.lineCoordinates.y2,\n        maxWidth: this.lineCoordinates.height,\n        maxHeight: this.titleFontSize * 1.5,\n        angle: 90,\n        text: this.title,\n        horizontalAlign: \"center\",\n        //left, center, right\n        fontSize: this.titleFontSize,\n        //in pixels\n        fontFamily: this.titleFontFamily,\n        fontWeight: this.titleFontWeight,\n        //normal, bold, bolder, lighter,\n        fontColor: this.titleFontColor,\n        fontStyle: this.titleFontStyle,\n        // normal, italic, oblique\n        textBaseline: \"top\"\n      });\n      this._titleTextBlock.measureText();\n      this._titleTextBlock.y = this.lineCoordinates.height / 2 - this._titleTextBlock.width / 2 + this.lineCoordinates.y1;\n      this._titleTextBlock.render(true);\n    }\n  }\n};\nAxis.prototype.renderInterlacedColors = function () {\n  var ctx = this.chart.plotArea.ctx;\n  //return;\n\n  var interlacedGridStartPoint;\n  var interlacedGridEndPoint;\n  var plotAreaCoordinates = this.chart.plotArea;\n  var i = 0,\n    renderInterlacedGrid = true;\n  if ((this._position === \"bottom\" || this._position === \"top\") && this.interlacedColor) {\n    ctx.fillStyle = this.interlacedColor;\n    for (i = 0; i < this._labels.length; i++) {\n      if (this._labels[i].stripLine) continue;\n      if (renderInterlacedGrid) {\n        //So that the interlaced color alternates\n        interlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this._labels[i].position);\n        if (i + 1 >= this._labels.length - 1) interlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this.viewportMaximum);else interlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this._labels[i + 1].position);\n        ctx.fillRect(interlacedGridStartPoint.x, plotAreaCoordinates.y1, Math.abs(interlacedGridEndPoint.x - interlacedGridStartPoint.x), Math.abs(plotAreaCoordinates.y1 - plotAreaCoordinates.y2));\n        renderInterlacedGrid = false;\n      } else renderInterlacedGrid = true;\n    }\n  } else if ((this._position === \"left\" || this._position === \"right\") && this.interlacedColor) {\n    ctx.fillStyle = this.interlacedColor;\n    for (i = 0; i < this._labels.length; i++) {\n      if (this._labels[i].stripLine) continue;\n      if (renderInterlacedGrid) {\n        //So that the interlaced color alternates\n\n        interlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this._labels[i].position);\n        if (i + 1 >= this._labels.length - 1) interlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this.viewportMaximum);else interlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this._labels[i + 1].position);\n        ctx.fillRect(plotAreaCoordinates.x1, interlacedGridStartPoint.y, Math.abs(plotAreaCoordinates.x1 - plotAreaCoordinates.x2), Math.abs(interlacedGridStartPoint.y - interlacedGridEndPoint.y));\n        renderInterlacedGrid = false;\n      } else renderInterlacedGrid = true;\n    }\n    //throw \"123\";\n  }\n  ctx.beginPath();\n};\n\n//Renders stripLines of given thickness type.\nAxis.prototype.renderStripLinesOfThicknessType = function (thicknessType) {\n  if (!(this.stripLines && this.stripLines.length > 0) || !thicknessType) return;\n  var _this = this;\n  var i = 0;\n  for (i = 0; i < this.stripLines.length; i++) {\n    var stripLine = this.stripLines[i];\n    if (stripLine._thicknessType !== thicknessType) continue;\n\n    //Should be skipped only if thicknessType is \"pixel\". If it is \"value\" then clipping is automatically applied before calling.\n    if (thicknessType === \"pixel\" && (stripLine.value < this.viewportMinimum || stripLine.value > this.viewportMaximum)) continue;\n    if (stripLine.showOnTop) {\n      this.chart.addEventListener(\"dataAnimationIterationEnd\", stripLine.render, stripLine);\n    } else stripLine.render();\n  }\n};\nAxis.prototype.renderGrid = function () {\n  if (!(this.gridThickness && this.gridThickness > 0)) return;\n\n  //var ctx = this.chart.plotArea.ctx;\n  var ctx = this.chart.ctx;\n  var xy;\n  var plotAreaCoordinates = this.chart.plotArea;\n  var stripLine;\n  var tempLineWidth, tempStrokeStyle;\n  //return;\n\n  ctx.lineWidth = this.gridThickness;\n  ctx.strokeStyle = this.gridColor;\n  if (ctx.setLineDash) {\n    ctx.setLineDash(getLineDashArray(this.gridDashType, this.gridThickness));\n  }\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    for (i = 0; i < this._labels.length && !this._labels[i].stripLine; i++) {\n      if (this._labels[i].position < this.viewportMinimum || this._labels[i].position > this.viewportMaximum) continue;\n      ctx.beginPath();\n      xy = this.getPixelCoordinatesOnAxis(this._labels[i].position);\n      var gridX = ctx.lineWidth % 2 === 1 ? (xy.x << 0) + .5 : xy.x << 0;\n      ctx.moveTo(gridX, plotAreaCoordinates.y1 << 0);\n      ctx.lineTo(gridX, plotAreaCoordinates.y2 << 0);\n      ctx.stroke();\n    }\n  } else if (this._position === \"left\" || this._position === \"right\") {\n    for (var i = 0; i < this._labels.length && !this._labels[i].stripLine; i++) {\n      if (i === 0 && this.type === \"axisY\" && this.chart.axisX && this.chart.axisX.lineThickness) continue;\n      if (this._labels[i].position < this.viewportMinimum || this._labels[i].position > this.viewportMaximum) continue;\n      ctx.beginPath();\n      xy = this.getPixelCoordinatesOnAxis(this._labels[i].position);\n      var gridY = ctx.lineWidth % 2 === 1 ? (xy.y << 0) + .5 : xy.y << 0;\n      ctx.moveTo(plotAreaCoordinates.x1 << 0, gridY);\n      ctx.lineTo(plotAreaCoordinates.x2 << 0, gridY);\n      ctx.stroke();\n    }\n  }\n};\nAxis.prototype.renderAxisLine = function () {\n  //var ctx = this.chart.plotArea.ctx;\n  var ctx = this.chart.ctx;\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    if (this.lineThickness) {\n      ctx.lineWidth = this.lineThickness;\n      ctx.strokeStyle = this.lineColor ? this.lineColor : \"black\";\n      if (ctx.setLineDash) {\n        ctx.setLineDash(getLineDashArray(this.lineDashType, this.lineThickness));\n      }\n      var lineY = this.lineThickness % 2 === 1 ? (this.lineCoordinates.y1 << 0) + .5 : this.lineCoordinates.y1 << 0;\n      ctx.beginPath();\n      ctx.moveTo(this.lineCoordinates.x1, lineY);\n      ctx.lineTo(this.lineCoordinates.x2, lineY);\n      ctx.stroke();\n    }\n  } else if (this._position === \"left\" || this._position === \"right\") {\n    if (this.lineThickness) {\n      ctx.lineWidth = this.lineThickness;\n      ctx.strokeStyle = this.lineColor;\n      if (ctx.setLineDash) {\n        ctx.setLineDash(getLineDashArray(this.lineDashType, this.lineThickness));\n      }\n      var lineX = this.lineThickness % 2 === 1 ? (this.lineCoordinates.x1 << 0) + .5 : this.lineCoordinates.x1 << 0;\n      ctx.beginPath();\n      ctx.moveTo(lineX, this.lineCoordinates.y1);\n      ctx.lineTo(lineX, this.lineCoordinates.y2);\n      ctx.stroke();\n    }\n  }\n};\nAxis.prototype.getPixelCoordinatesOnAxis = function (value) {\n  var xy = {};\n  var width = this.lineCoordinates.width;\n  var height = this.lineCoordinates.height;\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    //var pixelPerUnit = width / Math.abs(this.viewportMaximum - this.viewportMinimum);\n    var pixelPerUnit = this.conversionParameters.pixelPerUnit;\n\n    //xy.x = this.lineCoordinates.x1 + (pixelPerUnit * (value - this.viewportMinimum));\n    xy.x = this.conversionParameters.reference + pixelPerUnit * (value - this.viewportMinimum);\n    xy.y = this.lineCoordinates.y1;\n  }\n  if (this._position === \"left\" || this._position === \"right\") {\n    //var pixelPerUnit = height / Math.abs(this.viewportMaximum - this.viewportMinimum);\n    var pixelPerUnit = -this.conversionParameters.pixelPerUnit;\n\n    //xy.y = this.lineCoordinates.y2 - (pixelPerUnit * (value - this.viewportMinimum));\n    xy.y = this.conversionParameters.reference - pixelPerUnit * (value - this.viewportMinimum);\n    xy.x = this.lineCoordinates.x2;\n  }\n  return xy;\n};\nAxis.prototype.convertPixelToValue = function (pixel) {\n  if (!pixel) return null;\n  var value = 0;\n  var p = this._position === \"left\" || this._position === \"right\" ? pixel.y : pixel.x;\n  value = this.conversionParameters.minimum + (p - this.conversionParameters.reference) / this.conversionParameters.pixelPerUnit;\n  return value;\n};\nAxis.prototype.setViewPortRange = function (viewportMinimum, viewportMaximum) {\n  this.sessionVariables.newViewportMinimum = this.viewportMinimum = Math.min(viewportMinimum, viewportMaximum);\n  this.sessionVariables.newViewportMaximum = this.viewportMaximum = Math.max(viewportMinimum, viewportMaximum);\n};\nAxis.prototype.getXValueAt = function (pixel) {\n  if (!pixel) return null;\n  var xval = null;\n  if (this._position === \"left\") {\n    xval = (this.chart.axisX.viewportMaximum - this.chart.axisX.viewportMinimum) / this.chart.axisX.lineCoordinates.height * (this.chart.axisX.lineCoordinates.y2 - pixel.y) + this.chart.axisX.viewportMinimum;\n  } else if (this._position === \"bottom\") {\n    xval = (this.chart.axisX.viewportMaximum - this.chart.axisX.viewportMinimum) / this.chart.axisX.lineCoordinates.width * (pixel.x - this.chart.axisX.lineCoordinates.x1) + this.chart.axisX.viewportMinimum;\n  }\n  return xval;\n};\nAxis.prototype.calculateValueToPixelConversionParameters = function (value) {\n  this.reversed = false;\n  var conversionParameters = {\n    pixelPerUnit: null,\n    minimum: null,\n    reference: null\n  };\n  var width = this.lineCoordinates.width;\n  var height = this.lineCoordinates.height;\n  conversionParameters.minimum = this.viewportMinimum;\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    conversionParameters.pixelPerUnit = (this.reversed ? -1 : 1) * width / Math.abs(this.viewportMaximum - this.viewportMinimum);\n    conversionParameters.reference = this.reversed ? this.lineCoordinates.x2 : this.lineCoordinates.x1;\n  }\n  if (this._position === \"left\" || this._position === \"right\") {\n    conversionParameters.pixelPerUnit = (this.reversed ? 1 : -1) * height / Math.abs(this.viewportMaximum - this.viewportMinimum);\n    conversionParameters.reference = this.reversed ? this.lineCoordinates.y1 : this.lineCoordinates.y2;\n  }\n  this.conversionParameters = conversionParameters;\n};\nAxis.prototype.calculateAxisParameters = function () {\n  var freeSpace = this.chart.layoutManager.getFreeSpace();\n  var availableWidth = 0;\n  var availableHeight = 0;\n  var isLessThanTwoDataPoints = false;\n  if (this._position === \"bottom\" || this._position === \"top\") {\n    this.maxWidth = freeSpace.width;\n    this.maxHeight = freeSpace.height;\n  } else {\n    this.maxWidth = freeSpace.height;\n    this.maxHeight = freeSpace.width;\n  }\n  var noTicks = this.type === \"axisX\" ? this.maxWidth < 500 ? 8 : Math.max(6, Math.floor(this.maxWidth / 62)) : Math.max(Math.floor(this.maxWidth / 40), 2);\n  var min, max;\n  var minDiff;\n  var range;\n  var rangePadding = 0;\n  if (this.viewportMinimum === null || isNaN(this.viewportMinimum)) this.viewportMinimum = this.minimum;\n  if (this.viewportMaximum === null || isNaN(this.viewportMaximum)) this.viewportMaximum = this.maximum;\n  if (this.type === \"axisX\") {\n    min = this.viewportMinimum !== null ? this.viewportMinimum : this.dataInfo.viewPortMin;\n    max = this.viewportMaximum !== null ? this.viewportMaximum : this.dataInfo.viewPortMax;\n    if (max - min === 0) {\n      rangePadding = typeof this._options.interval === \"undefined\" ? .4 : this._options.interval;\n      max += rangePadding;\n      min -= rangePadding;\n    }\n    if (this.dataInfo.minDiff !== Infinity) minDiff = this.dataInfo.minDiff;else if (max - min > 1) {\n      minDiff = Math.abs(max - min) * .5;\n    } else {\n      minDiff = 1;\n      if (this.chart.plotInfo.axisXValueType === \"dateTime\") isLessThanTwoDataPoints = true;\n    }\n  } else if (this.type === \"axisY\") {\n    //min = typeof (this._options.viewportMinimum) === \"undefined\" || this._options.viewportMinimum === null ? this.dataInfo.viewPortMin : this._options.viewportMinimum;\n    //max = typeof (this._options.viewportMaximum) === \"undefined\" || this._options.viewportMaximum === null ? this.dataInfo.viewPortMax : this._options.viewportMaximum;\n    min = this.viewportMinimum !== null ? this.viewportMinimum : this.dataInfo.viewPortMin;\n    max = this.viewportMaximum !== null ? this.viewportMaximum : this.dataInfo.viewPortMax;\n    if (!isFinite(min) && !isFinite(max)) {\n      max = typeof this._options.interval === \"undefined\" ? -Infinity : this._options.interval;\n      min = 0;\n    } else if (!isFinite(min)) {\n      min = max;\n    } else if (!isFinite(max)) {\n      max = min;\n    }\n    if (min === 0 && max === 0) {\n      // When all dataPoints are zero\n      max += 9;\n      min = 0;\n    } else if (max - min === 0) {\n      // When there is only a single dataPoint or when all dataPoints have same Y Value\n      rangePadding = Math.min(Math.abs(Math.abs(max) * .01), 5);\n      max += rangePadding;\n      min -= rangePadding;\n    } else if (min > max) {\n      rangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), 5);\n      if (max >= 0) min = max - rangePadding;else max = min + rangePadding;\n    } else {\n      rangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), .05);\n      if (max !== 0) max += rangePadding;\n      if (min !== 0) min -= rangePadding;\n    }\n    if (this.dataInfo.minDiff !== Infinity) minDiff = this.dataInfo.minDiff;else if (max - min > 1) {\n      minDiff = Math.abs(max - min) * .5;\n    } else {\n      minDiff = 1;\n    }\n\n    //Apply includeZero\n    if (this.includeZero && (this.viewportMinimum === null || isNaN(this.viewportMinimum))) {\n      if (min > 0) min = 0;\n    }\n    if (this.includeZero && (this.viewportMaximum === null || isNaN(this.viewportMaximum))) {\n      if (max < 0) max = 0;\n    }\n  }\n  range = (isNaN(this.viewportMaximum) || this.viewportMaximum === null ? max : this.viewportMaximum) - (isNaN(this.viewportMinimum) || this.viewportMinimum === null ? min : this.viewportMinimum);\n  if (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\n    if (!this.intervalType) {\n      if (range / (1 * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 5) <= noTicks) {\n        this.interval = 5;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 10) <= noTicks) {\n        this.interval = 10;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 20) <= noTicks) {\n        this.interval = 20;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 50) <= noTicks) {\n        this.interval = 50;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 100) <= noTicks) {\n        this.interval = 100;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 200) <= noTicks) {\n        this.interval = 200;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 250) <= noTicks) {\n        this.interval = 250;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 300) <= noTicks) {\n        this.interval = 300;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 400) <= noTicks) {\n        this.interval = 400;\n        this.intervalType = \"millisecond\";\n      } else if (range / (1 * 500) <= noTicks) {\n        this.interval = 500;\n        this.intervalType = \"millisecond\";\n      } else if (range / (constants.secondDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 5) <= noTicks) {\n        this.interval = 5;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 10) <= noTicks) {\n        this.interval = 10;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 15) <= noTicks) {\n        this.interval = 15;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 20) <= noTicks) {\n        this.interval = 20;\n        this.intervalType = \"second\";\n      } else if (range / (constants.secondDuration * 30) <= noTicks) {\n        this.interval = 30;\n        this.intervalType = \"second\";\n      } else if (range / (constants.minuteDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 5) <= noTicks) {\n        this.interval = 5;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 10) <= noTicks) {\n        this.interval = 10;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 15) <= noTicks) {\n        this.interval = 15;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 20) <= noTicks) {\n        this.interval = 20;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.minuteDuration * 30) <= noTicks) {\n        this.interval = 30;\n        this.intervalType = \"minute\";\n      } else if (range / (constants.hourDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"hour\";\n      } else if (range / (constants.hourDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"hour\";\n      } else if (range / (constants.hourDuration * 3) <= noTicks) {\n        this.interval = 3;\n        this.intervalType = \"hour\";\n      } else if (range / (constants.hourDuration * 6) <= noTicks) {\n        this.interval = 6;\n        this.intervalType = \"hour\";\n      } else if (range / (constants.dayDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"day\";\n      } else if (range / (constants.dayDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"day\";\n      } else if (range / (constants.dayDuration * 4) <= noTicks) {\n        this.interval = 4;\n        this.intervalType = \"day\";\n      } else if (range / (constants.weekDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"week\";\n      } else if (range / (constants.weekDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"week\";\n      } else if (range / (constants.weekDuration * 3) <= noTicks) {\n        this.interval = 3;\n        this.intervalType = \"week\";\n      } else if (range / (constants.monthDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"month\";\n      } else if (range / (constants.monthDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"month\";\n      } else if (range / (constants.monthDuration * 3) <= noTicks) {\n        this.interval = 3;\n        this.intervalType = \"month\";\n      } else if (range / (constants.monthDuration * 6) <= noTicks) {\n        this.interval = 6;\n        this.intervalType = \"month\";\n      } else if (range / (constants.yearDuration * 1) <= noTicks) {\n        this.interval = 1;\n        this.intervalType = \"year\";\n      } else if (range / (constants.yearDuration * 2) <= noTicks) {\n        this.interval = 2;\n        this.intervalType = \"year\";\n      } else if (range / (constants.yearDuration * 4) <= noTicks) {\n        this.interval = 4;\n        this.intervalType = \"year\";\n      } else {\n        this.interval = Math.floor(Axis.getNiceNumber(range / (noTicks - 1), true) / constants.yearDuration);\n        this.intervalType = \"year\";\n      }\n    }\n    if (this.viewportMinimum === null || isNaN(this.viewportMinimum)) this.viewportMinimum = min - minDiff / 2;\n    if (this.viewportMaximum === null || isNaN(this.viewportMaximum)) this.viewportMaximum = max + minDiff / 2;\n    if (!this.valueFormatString) {\n      if (isLessThanTwoDataPoints) {\n        this.valueFormatString = \"MMM DD YYYY HH:mm\";\n      } else if (this.intervalType === \"year\") {\n        this.valueFormatString = \"YYYY\";\n      } else if (this.intervalType === \"month\") {\n        this.valueFormatString = \"MMM YYYY\";\n      } else if (this.intervalType === \"week\") {\n        this.valueFormatString = \"MMM DD YYYY\";\n      } else if (this.intervalType === \"day\") {\n        this.valueFormatString = \"MMM DD YYYY\";\n      } else if (this.intervalType === \"hour\") {\n        this.valueFormatString = \"hh:mm TT\";\n      } else if (this.intervalType === \"minute\") {\n        this.valueFormatString = \"hh:mm TT\";\n      } else if (this.intervalType === \"second\") {\n        this.valueFormatString = \"hh:mm:ss TT\";\n      } else if (this.intervalType === \"millisecond\") {\n        this.valueFormatString = \"fff'ms'\";\n      }\n    }\n  } else {\n    this.intervalType = \"number\";\n    range = Axis.getNiceNumber(range, false);\n    if (this._options && this._options.interval) this.interval = this._options.interval;else {\n      this.interval = Axis.getNiceNumber(range / (noTicks - 1), true);\n    }\n    if (this.viewportMinimum === null || isNaN(this.viewportMinimum)) {\n      if (this.type === \"axisX\") this.viewportMinimum = min - minDiff / 2;else this.viewportMinimum = Math.floor(min / this.interval) * this.interval;\n    }\n    if (this.viewportMaximum === null || isNaN(this.viewportMaximum)) {\n      if (this.type === \"axisX\") this.viewportMaximum = max + minDiff / 2;else this.viewportMaximum = Math.ceil(max / this.interval) * this.interval;\n    }\n    if (this.viewportMaximum === 0 && this.viewportMinimum === 0) {\n      if (this._options.viewportMinimum === 0) {\n        this.viewportMaximum += 10;\n      } else if (this._options.viewportMaximum === 0) {\n        this.viewportMinimum -= 10;\n      }\n      if (this._options && typeof this._options.interval === \"undefined\") {\n        this.interval = Axis.getNiceNumber((this.viewportMaximum - this.viewportMinimum) / (noTicks - 1), true);\n      }\n    }\n  }\n\n  //Calculate minimum and maximum if not provided by the user\n  if (this.minimum === null || this.maximum === null) {\n    if (this.type === \"axisX\") {\n      min = this.minimum !== null ? this.minimum : this.dataInfo.min;\n      max = this.maximum !== null ? this.maximum : this.dataInfo.max;\n      if (max - min === 0) {\n        rangePadding = typeof this._options.interval === \"undefined\" ? .4 : this._options.interval;\n        max += rangePadding;\n        min -= rangePadding;\n      }\n      if (this.dataInfo.minDiff !== Infinity) minDiff = this.dataInfo.minDiff;else if (max - min > 1) {\n        minDiff = Math.abs(max - min) * .5;\n      } else {\n        minDiff = 1;\n      }\n    } else if (this.type === \"axisY\") {\n      min = this.minimum !== null ? this.minimum : this.dataInfo.min;\n      max = this.maximum !== null ? this.maximum : this.dataInfo.max;\n      if (!isFinite(min) && !isFinite(max)) {\n        max = typeof this._options.interval === \"undefined\" ? -Infinity : this._options.interval;\n        min = 0;\n      } else if (min === 0 && max === 0) {\n        // When all dataPoints are zero\n        max += 9;\n        min = 0;\n      } else if (max - min === 0) {\n        // When there is only a single dataPoint or when all dataPoints have same Y Value\n        rangePadding = Math.min(Math.abs(Math.abs(max) * .01), 5);\n        max += rangePadding;\n        min -= rangePadding;\n      } else if (min > max) {\n        rangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), 5);\n        if (max >= 0) min = max - rangePadding;else max = min + rangePadding;\n      } else {\n        rangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), .05);\n        if (max !== 0) max += rangePadding;\n        if (min !== 0) min -= rangePadding;\n      }\n      if (this.dataInfo.minDiff !== Infinity) minDiff = this.dataInfo.minDiff;else if (max - min > 1) {\n        minDiff = Math.abs(max - min) * .5;\n      } else {\n        minDiff = 1;\n      }\n\n      //Apply includeZero\n      if (this.includeZero && (this.minimum === null || isNaN(this.minimum))) {\n        if (min > 0) min = 0;\n      }\n      if (this.includeZero && (this.maximum === null || isNaN(this.maximum))) {\n        if (max < 0) max = 0;\n      }\n    }\n    range = max - min;\n    if (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\n      if (this.minimum === null || isNaN(this.minimum)) this.minimum = min - minDiff / 2;\n      if (this.maximum === null || isNaN(this.maximum)) this.maximum = max + minDiff / 2;\n    } else {\n      this.intervalType = \"number\";\n      if (this.minimum === null) {\n        if (this.type === \"axisX\") this.minimum = min - minDiff / 2;else this.minimum = Math.floor(min / this.interval) * this.interval;\n        this.minimum = Math.min(this.minimum, this.sessionVariables.viewportMinimum === null || isNaN(this.sessionVariables.viewportMinimum) ? Infinity : this.sessionVariables.viewportMinimum);\n      }\n      if (this.maximum === null) {\n        if (this.type === \"axisX\") this.maximum = max + minDiff / 2;else this.maximum = Math.ceil(max / this.interval) * this.interval;\n        this.maximum = Math.max(this.maximum, this.sessionVariables.viewportMaximum === null || isNaN(this.sessionVariables.viewportMaximum) ? -Infinity : this.sessionVariables.viewportMaximum);\n      }\n\n      //var nfrac = Math.max(-Math.floor(Math.log(d)/Math.LN10), 0); //number of fractional digits to show\n\n      if (this.maximum === 0 && this.minimum === 0) {\n        if (this._options.minimum === 0) {\n          this.maximum += 10;\n        } else if (this._options.maximum === 0) {\n          this.minimum -= 10;\n        }\n      }\n    }\n  }\n  this.viewportMinimum = Math.max(this.viewportMinimum, this.minimum);\n  this.viewportMaximum = Math.min(this.viewportMaximum, this.maximum);\n  if (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") this.intervalStartPosition = this.getLabelStartPoint(new Date(this.viewportMinimum), this.intervalType, this.interval);else this.intervalStartPosition = Math.floor((this.viewportMinimum + this.interval * .2) / this.interval) * this.interval;\n\n  //Set valueFormatString\n  if (!this.valueFormatString) {\n    this.valueFormatString = \"#,##0.##\";\n    range = Math.abs(this.viewportMaximum - this.viewportMinimum);\n    if (range < 1) {\n      var numberOfDecimals = Math.floor(Math.abs(Math.log(range) / Math.LN10)) + 2;\n      if (isNaN(numberOfDecimals) || !isFinite(numberOfDecimals)) numberOfDecimals = 2;\n      if (numberOfDecimals > 2) {\n        for (var i = 0; i < numberOfDecimals - 2; i++) this.valueFormatString += \"#\";\n      }\n    }\n  }\n\n  //if (isDebugMode && window.console) {\n  //    window.console.log(this.type + \": Min = \" + this.viewportMinimum);\n  //    window.console.log(this.type + \": Max = \" + this.viewportMaximum);\n  //    window.console.log(this.type + \": Interval = \" + this.interval);\n  //}\n};\nAxis.getNiceNumber = function (x, round) {\n  var exp = Math.floor(Math.log(x) / Math.LN10);\n  var f = x / Math.pow(10, exp);\n  var nf;\n  if (round) {\n    if (f < 1.5) nf = 1;else if (f < 3) nf = 2;else if (f < 7) nf = 5;else nf = 10;\n  } else {\n    if (f <= 1) nf = 1;else if (f <= 2) nf = 2;else if (f <= 5) nf = 5;else nf = 10;\n  }\n  return Number((nf * Math.pow(10, exp)).toFixed(20));\n};\nAxis.prototype.getLabelStartPoint = function () {\n  var intervalInMilliseconds = convertToNumber(this.interval, this.intervalType);\n  var minimum = Math.floor(this.viewportMinimum / intervalInMilliseconds) * intervalInMilliseconds;\n  var dateTime = new Date(minimum);\n  if (this.intervalType === \"millisecond\") {\n    //millisecond = dateTime.getMilliSecond();\n    //millisecond = Math.floor((millisecond + this.interval) / this.interval) * this.interval;\n  } else if (this.intervalType === \"second\") {\n    if (dateTime.getMilliseconds() > 0) {\n      dateTime.setSeconds(dateTime.getSeconds() + 1);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"minute\") {\n    if (dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setMinutes(dateTime.getMinutes() + 1);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"hour\") {\n    if (dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setHours(dateTime.getHours() + 1);\n      dateTime.setMinutes(0);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"day\") {\n    if (dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setDate(dateTime.getDate() + 1);\n      dateTime.setHours(0);\n      dateTime.setMinutes(0);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"week\") {\n    if (dateTime.getDay() > 0 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setDate(dateTime.getDate() + (7 - dateTime.getDay()));\n      dateTime.setHours(0);\n      dateTime.setMinutes(0);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"month\") {\n    if (dateTime.getDate() > 1 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setMonth(dateTime.getMonth() + 1);\n      dateTime.setDate(1);\n      dateTime.setHours(0);\n      dateTime.setMinutes(0);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  } else if (this.intervalType === \"year\") {\n    if (dateTime.getMonth() > 0 || dateTime.getDate() > 1 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\n      dateTime.setFullYear(dateTime.getFullYear() + 1);\n      dateTime.setMonth(0);\n      dateTime.setDate(1);\n      dateTime.setHours(0);\n      dateTime.setMinutes(0);\n      dateTime.setSeconds(0);\n      dateTime.setMilliseconds(0);\n    }\n  }\n  return dateTime;\n};\nexport default Axis;","map":{"version":3,"names":["CanvasJSObject","TextBlock","extend","numberFormat","getLineDashArray","Axis","chart","options","type","position","base","constructor","call","theme","canvas","ctx","maxWidth","maxHeight","intervalStartPosition","labels","_labels","dataInfo","min","Infinity","max","viewPortMin","viewPortMax","minDiff","sessionVariables","_options","interval","intervalType","titleFontSize","getAutoFontSize","labelFontSize","gridThickness","_position","lineCoordinates","x1","y1","x2","y2","width","labelAngle","stripLines","length","i","push","StripLine","_eventManager","lastObjectId","_titleTextBlock","hasOptionChanged","isNaN","newViewportMinimum","viewportMinimum","newViewportMaximum","viewportMaximum","minimum","Math","maximum","trackChanges","prototype","createLabels","textBlock","endPoint","labelMaxWidth","labelMaxHeight","intervalInPixels","abs","labelAutoFit","labelWrap","height","plotInfo","axisXValueType","addToDateTime","Date","timeInMilliseconds","getTime","text","labelFormatter","axis","value","label","dateFormat","valueFormatString","_cultureInfo","x","y","angle","prefix","suffix","horizontalAlign","fontSize","fontFamily","labelFontFamily","fontWeight","labelFontWeight","fontColor","labelFontColor","fontStyle","labelFontStyle","textBaseline","effectiveHeight","tempInterval","ceil","tempStartPoint","hasAllLabels","parseFloat","toFixed","borderThickness","stripLine","backgroundColor","labelBackgroundColor","color","createLabelsAndCalculateWidth","maxLabelEffectiveWidth","size","measureText","labelEffectiveWidth","cos","PI","sin","effectiveWidth","titleHeight","title","getFontHeightInPixels","titleFontFamily","titleFontWeight","axisWidth","tickLength","createLabelsAndCalculateHeight","maxLabelEffectiveHeight","labelEffectiveHeight","setLayoutAndRender","axisX","axisY","axisY2","axisPlacement","freeSpace","calculateAxisParameters","axisYlineThickness","lineThickness","axisY2lineThickness","axisYGridThickness","axisY2GridThickness","axisYMargin","margin","axisY2Margin","axisYWidth","round","axisY2Width","axisXHeight","boundingRect","calculateValueToPixelConversionParameters","save","rect","clip","renderLabelsTicksAndTitle","restore","preparePlotArea","plotArea","renderStripLinesOfThicknessType","renderInterlacedColors","renderGrid","renderAxisLine","axisXWidth","axisYHeight","axisY2Height","skipLabels","totalLabelWidth","thresholdRatio","labelCount","conversionParameters","pixelPerUnit","xy","getPixelCoordinatesOnAxis","tickThickness","_thicknessType","lineWidth","thickness","strokeStyle","tickColor","tickX","beginPath","moveTo","lineTo","stroke","render","titleFontColor","titleFontStyle","tickY","interlacedGridStartPoint","interlacedGridEndPoint","plotAreaCoordinates","renderInterlacedGrid","interlacedColor","fillStyle","fillRect","thicknessType","_this","showOnTop","addEventListener","tempLineWidth","tempStrokeStyle","gridColor","setLineDash","gridDashType","gridX","gridY","lineColor","lineDashType","lineY","lineX","reference","convertPixelToValue","pixel","p","setViewPortRange","getXValueAt","xval","reversed","layoutManager","getFreeSpace","availableWidth","availableHeight","isLessThanTwoDataPoints","noTicks","floor","range","rangePadding","isFinite","includeZero","constants","secondDuration","minuteDuration","hourDuration","dayDuration","weekDuration","monthDuration","yearDuration","getNiceNumber","getLabelStartPoint","numberOfDecimals","log","LN10","exp","f","pow","nf","Number","intervalInMilliseconds","convertToNumber","dateTime","getMilliseconds","setSeconds","getSeconds","setMilliseconds","setMinutes","getMinutes","setHours","getHours","setDate","getDate","getDay","setMonth","getMonth","setFullYear","getFullYear"],"sources":["C:/Users/IMPEGNOABS010/Desktop/HRMSROUT/node_modules/canvasjs/src/core/axis.js"],"sourcesContent":["\r\nimport CanvasJSObject from './canvasjs';\r\nimport TextBlock from './text_block';\r\nimport {extend, numberFormat, getLineDashArray} from '../helpers/utils';\r\n\r\nfunction Axis(chart, options, type, position) {\r\n\r\n\tAxis.base.constructor.call(this, \"Axis\", options, chart.theme);\r\n\r\n\tthis.chart = chart;\r\n\tthis.canvas = chart.canvas;\r\n\tthis.ctx = chart.ctx;\r\n\tthis.maxWidth = 0;\r\n\tthis.maxHeight = 0;\r\n\tthis.intervalStartPosition = 0;\r\n\tthis.labels = [];\r\n\tthis._labels = null;\r\n\r\n\t//Processed information about the data that gets plotted against this axis\r\n\tthis.dataInfo = {\r\n\t\tmin: Infinity,\r\n\t\tmax: -Infinity,\r\n\t\tviewPortMin: Infinity,\r\n\t\tviewPortMax: -Infinity,\r\n\t\tminDiff: Infinity // Used only in case of axisX\r\n\t};\r\n\r\n\tif (type === \"axisX\") {\r\n\t\tthis.sessionVariables = this.chart.sessionVariables[type];\r\n\r\n\t\tif (!this._options.interval)\r\n\t\t\tthis.intervalType = null;\r\n\t} else {\r\n\t\tif (position === \"left\" || position === \"top\")\r\n\t\t\tthis.sessionVariables = this.chart.sessionVariables[\"axisY\"];\r\n\t\telse {\r\n\t\t\tthis.sessionVariables = this.chart.sessionVariables[\"axisY2\"];\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tif (typeof (this._options.titleFontSize) === \"undefined\") {\r\n\r\n\t\tthis.titleFontSize = this.chart.getAutoFontSize(this.titleFontSize);\r\n\r\n\t\t//window.console.log(\"titleFontSize: \" + this.titleFontSize);\r\n\t}\r\n\r\n\tif (typeof (this._options.labelFontSize) === \"undefined\") {\r\n\r\n\t\tthis.labelFontSize = this.chart.getAutoFontSize(this.labelFontSize);\r\n\r\n\t\t//window.console.log(\"labelFontSize: \" + this.labelFontSize);\r\n\r\n\t}\r\n\r\n\t//Axis Type : axisX, axisY\r\n\tthis.type = type;\r\n\tif (type === \"axisX\" && (!options || typeof (options.gridThickness) === \"undefined\"))\r\n\t\tthis.gridThickness = 0;\r\n\r\n\tthis._position = position;\r\n\r\n\tthis.lineCoordinates = {\r\n\t\tx1: null, y1: null, x2: null, y2: null, width: null\r\n\t};//{x1:, y1:, x2:, y2:, width:}\r\n\t//\r\n\t{\r\n\t\tthis.labelAngle = ((this.labelAngle % 360) + 360) % 360;\r\n\r\n\t\tif (this.labelAngle > 90 && this.labelAngle <= 270)\r\n\t\t\tthis.labelAngle -= 180;\r\n\t\telse if (this.labelAngle > 180 && this.labelAngle <= 270)\r\n\t\t\tthis.labelAngle -= 180\r\n\t\telse if (this.labelAngle > 270 && this.labelAngle <= 360)\r\n\t\t\tthis.labelAngle -= 360\r\n\t}\r\n\r\n\tif (this._options.stripLines && this._options.stripLines.length > 0) {\r\n\r\n\t\tthis.stripLines = [];\r\n\r\n\t\tfor (var i = 0; i < this._options.stripLines.length; i++) {\r\n\t\t\tthis.stripLines.push(new StripLine(this.chart, this._options.stripLines[i], chart.theme, ++this.chart._eventManager.lastObjectId, this));\r\n\t\t}\r\n\t}\r\n\r\n\tthis._titleTextBlock = null;\r\n\r\n\tif (!this.hasOptionChanged(\"viewportMinimum\") && !isNaN(this.sessionVariables.newViewportMinimum) && this.sessionVariables.newViewportMinimum !== null)\r\n\t\tthis.viewportMinimum = this.sessionVariables.newViewportMinimum;\r\n\telse\r\n\t\tthis.sessionVariables.newViewportMinimum = null;\r\n\r\n\tif (!this.hasOptionChanged(\"viewportMaximum\") && !isNaN(this.sessionVariables.newViewportMaximum) && this.sessionVariables.newViewportMaximum !== null)\r\n\t\tthis.viewportMaximum = this.sessionVariables.newViewportMaximum;\r\n\telse\r\n\t\tthis.sessionVariables.newViewportMaximum = null;\r\n\r\n\tif (this.minimum !== null && this.viewportMinimum !== null)\r\n\t\tthis.viewportMinimum = Math.max(this.viewportMinimum, this.minimum);\r\n\r\n\tif (this.maximum !== null && this.viewportMaximum !== null)\r\n\t\tthis.viewportMaximum = Math.min(this.viewportMaximum, this.maximum);\r\n\r\n\tthis.trackChanges(\"viewportMinimum\");\r\n\tthis.trackChanges(\"viewportMaximum\");\r\n}\r\n\r\nextend(Axis, CanvasJSObject);\r\n\r\nAxis.prototype.createLabels = function () {\r\n\r\n\tvar textBlock;\r\n\tvar i = 0;\r\n\tvar endPoint;\r\n\r\n\tvar labelMaxWidth = 0;\r\n\tvar labelMaxHeight = 0;\r\n\tvar intervalInPixels = 0;\r\n\r\n\t//var intervalInPixels = this.conversionParameters.pixelPerUnit * this.interval;\r\n\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\t\tintervalInPixels = this.lineCoordinates.width / Math.abs(this.viewportMaximum - this.viewportMinimum) * this.interval;\r\n\r\n\t\tif (this.labelAutoFit) {\r\n\t\t\tlabelMaxWidth = typeof (this._options.labelMaxWidth) === \"undefined\" ? intervalInPixels * .9 >> 0 : this.labelMaxWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabelMaxWidth = typeof (this._options.labelMaxWidth) === \"undefined\" ? this.chart.width * .7 >> 0 : this.labelMaxWidth;\r\n\t\t}\r\n\r\n\t\tlabelMaxHeight = typeof (this._options.labelWrap) === \"undefined\" || this.labelWrap ? this.chart.height * .5 >> 0 : this.labelFontSize * 1.5;\r\n\t}\r\n\telse if (this._position === \"left\" || this._position === \"right\") {\r\n\r\n\t\tintervalInPixels = this.lineCoordinates.height / Math.abs(this.viewportMaximum - this.viewportMinimum) * this.interval;\r\n\r\n\r\n\t\tif (this.labelAutoFit) {\r\n\t\t\tlabelMaxWidth = typeof (this._options.labelMaxWidth) === \"undefined\" ? this.chart.width * .3 >> 0 : this.labelMaxWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabelMaxWidth = typeof (this._options.labelMaxWidth) === \"undefined\" ? this.chart.width * .5 >> 0 : this.labelMaxWidth;\r\n\t\t}\r\n\r\n\t\tlabelMaxHeight = typeof (this._options.labelWrap) === \"undefined\" || this.labelWrap ? intervalInPixels * 2 >> 0 : this.labelFontSize * 1.5;\r\n\t}\r\n\r\n\tif (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\r\n\t\tendPoint = addToDateTime(new Date(this.viewportMaximum), this.interval, this.intervalType)\r\n\t\t//endPoint = this.viewportMaximum;\r\n\r\n\t\tfor (i = this.intervalStartPosition; i < endPoint; addToDateTime(i, this.interval, this.intervalType)) {\r\n\r\n\t\t\t//var text = dateFormat(i, this.valueFormatString);\r\n\t\t\tvar timeInMilliseconds = i.getTime();\r\n\t\t\tvar text = this.labelFormatter ? this.labelFormatter({ chart: this.chart, axis: this._options, value: i, label: this.labels[i] ? this.labels[i] : null })\r\n\t\t\t\t: this.type === \"axisX\" && this.labels[timeInMilliseconds] ? this.labels[timeInMilliseconds] : dateFormat(i, this.valueFormatString, this.chart._cultureInfo);\r\n\r\n\t\t\ttextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\t//maxWidth: this.maxHeight,\r\n\t\t\t\t//maxHeight: this.labelFontSize,\r\n\t\t\t\tmaxWidth: labelMaxWidth,\r\n\t\t\t\tmaxHeight: labelMaxHeight,\r\n\t\t\t\tangle: this.labelAngle,\r\n\t\t\t\ttext: this.prefix + text + this.suffix,\r\n\t\t\t\thorizontalAlign: \"left\",//left, center, right\r\n\t\t\t\tfontSize: this.labelFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.labelFontFamily,\r\n\t\t\t\tfontWeight: this.labelFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.labelFontColor,\r\n\t\t\t\tfontStyle: this.labelFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"middle\"\r\n\t\t\t});\r\n\r\n\t\t\tthis._labels.push({ position: i.getTime(), textBlock: textBlock, effectiveHeight: null });\r\n\t\t}\r\n\r\n\t}\r\n\telse {\r\n\t\tendPoint = this.viewportMaximum;\r\n\r\n\t\t//if ((Math.floor(this.interval) < this.interval && !this._options.interval) || true) {\r\n\r\n\t\t//Check if it should be rendered as a category axis. If yes, then ceil the interval\r\n\t\tif (this.labels && this.labels.length) {\r\n\t\t\tvar tempInterval = Math.ceil(this.interval);\r\n\t\t\tvar tempStartPoint = Math.ceil(this.intervalStartPosition);\r\n\t\t\tvar hasAllLabels = false;\r\n\t\t\tfor (i = tempStartPoint; i < this.viewportMaximum; i += tempInterval) {\r\n\t\t\t\tif (this.labels[i]) {\r\n\t\t\t\t\thasAllLabels = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\thasAllLabels = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (hasAllLabels) {\r\n\t\t\t\tthis.interval = tempInterval;\r\n\t\t\t\tthis.intervalStartPosition = tempStartPoint;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//parseFloat & toPrecision are being used to avoid issues related to precision.\r\n\t\tfor (i = this.intervalStartPosition; i <= endPoint; i = parseFloat((i + this.interval).toFixed(14))) {\r\n\r\n\t\t\tvar text = this.labelFormatter ? this.labelFormatter({ chart: this.chart, axis: this._options, value: i, label: this.labels[i] ? this.labels[i] : null })\r\n\t\t\t\t: this.type === \"axisX\" && this.labels[i] ? this.labels[i] : numberFormat(i, this.valueFormatString, this.chart._cultureInfo);\r\n\r\n\t\t\ttextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\t//maxWidth: this.maxHeight,\r\n\t\t\t\t//maxHeight: this.labelFontSize,\r\n\t\t\t\tmaxWidth: labelMaxWidth,\r\n\t\t\t\tmaxHeight: labelMaxHeight,\r\n\t\t\t\tangle: this.labelAngle,\r\n\t\t\t\ttext: this.prefix + text + this.suffix,\r\n\t\t\t\thorizontalAlign: \"left\",//left, center, right\r\n\t\t\t\tfontSize: this.labelFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.labelFontFamily,\r\n\t\t\t\tfontWeight: this.labelFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.labelFontColor,\r\n\t\t\t\tfontStyle: this.labelFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"middle\",\r\n\t\t\t\tborderThickness: 0\r\n\t\t\t});\r\n\r\n\t\t\tthis._labels.push({ position: i, textBlock: textBlock, effectiveHeight: null });\r\n\t\t}\r\n\t}\r\n\r\n\tfor (var i = 0; i < this.stripLines.length; i++) {\r\n\r\n\t\tvar stripLine = this.stripLines[i];\r\n\r\n\t\ttextBlock = new TextBlock(this.ctx, {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\t//maxWidth: this.maxHeight,\r\n\t\t\t//maxHeight: this.labelFontSize,\r\n\t\t\tbackgroundColor: stripLine.labelBackgroundColor,\r\n\t\t\tmaxWidth: labelMaxWidth,\r\n\t\t\tmaxHeight: labelMaxHeight,\r\n\t\t\tangle: this.labelAngle,\r\n\t\t\ttext: stripLine.labelFormatter ? stripLine.labelFormatter({ chart: this.chart, axis: this, stripLine: stripLine }) : stripLine.label,\r\n\t\t\thorizontalAlign: \"left\",//left, center, right\r\n\t\t\tfontSize: stripLine.labelFontSize,//in pixels\r\n\t\t\tfontFamily: stripLine.labelFontFamily,\r\n\t\t\tfontWeight: stripLine.labelFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\tfontColor: stripLine._options.labelFontColor || stripLine.color,\r\n\t\t\tfontStyle: stripLine.labelFontStyle, // normal, italic, oblique\r\n\t\t\ttextBaseline: \"middle\",\r\n\t\t\tborderThickness: 0\r\n\t\t});\r\n\r\n\t\tthis._labels.push({ position: stripLine.value, textBlock: textBlock, effectiveHeight: null, stripLine: stripLine });\r\n\t}\r\n\r\n}\r\n\r\nAxis.prototype.createLabelsAndCalculateWidth = function () {\r\n\r\n\tvar maxLabelEffectiveWidth = 0;\r\n\tthis._labels = [];\r\n\r\n\tif (this._position === \"left\" || this._position === \"right\") {\r\n\r\n\t\tthis.createLabels();\r\n\r\n\t\tfor (var i = 0; i < this._labels.length; i++) {\r\n\r\n\t\t\tvar textBlock = this._labels[i].textBlock;\r\n\r\n\t\t\tvar size = textBlock.measureText();\r\n\r\n\t\t\t//var hypotenuse = Math.sqrt(Math.pow(size.height / 2, 2) + Math.pow(size.width, 2));\r\n\t\t\t//labelEffectiveWidth = hypotenuse * Math.cos(Math.abs(Math.PI / 180 * this.labelAngle) - Math.abs(Math.acos(size.width / hypotenuse)));\r\n\r\n\t\t\tvar labelEffectiveWidth = 0;\r\n\r\n\t\t\tif (this.labelAngle === 0)\r\n\t\t\t\tlabelEffectiveWidth = size.width;\r\n\t\t\telse\r\n\t\t\t\tlabelEffectiveWidth = (size.width * Math.cos(Math.PI / 180 * Math.abs(this.labelAngle))) + (size.height / 2 * Math.sin(Math.PI / 180 * Math.abs(this.labelAngle)));\r\n\r\n\r\n\t\t\tif (maxLabelEffectiveWidth < labelEffectiveWidth)\r\n\t\t\t\tmaxLabelEffectiveWidth = labelEffectiveWidth;\r\n\r\n\t\t\tthis._labels[i].effectiveWidth = labelEffectiveWidth;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tvar titleHeight = this.title ? getFontHeightInPixels(this.titleFontFamily, this.titleFontSize, this.titleFontWeight) + 2 : 0;\r\n\r\n\tvar axisWidth = titleHeight + maxLabelEffectiveWidth + this.tickLength + 5;\r\n\r\n\t//if (isDebugMode && window.console) {\r\n\t//\twindow.console.log(this.type + \"--- axisWidth: \" + axisWidth);\r\n\t//}\r\n\r\n\treturn axisWidth;\r\n}\r\n\r\nAxis.prototype.createLabelsAndCalculateHeight = function () {\r\n\tvar maxLabelEffectiveHeight = 0;\r\n\tthis._labels = [];\r\n\tvar textBlock;\r\n\tvar i = 0;\r\n\r\n\tthis.createLabels();\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\r\n\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\r\n\t\t\ttextBlock = this._labels[i].textBlock;\r\n\r\n\t\t\tvar size = textBlock.measureText();\r\n\t\t\t//var diagonal = Math.sqrt(Math.pow(size.height, 2) + Math.pow(size.width, 2));\r\n\r\n\t\t\t//var hypotenuse = Math.sqrt(Math.pow(size.height / 2, 2) + Math.pow(size.width, 2));\r\n\t\t\t//var labelEffectiveHeight = hypotenuse * Math.cos(Math.PI / 2 - (Math.abs(Math.PI / 180 * this.labelAngle) + Math.abs(Math.acos(size.width / hypotenuse))));\r\n\r\n\t\t\tvar labelEffectiveHeight = 0;\r\n\r\n\t\t\tif (this.labelAngle === 0)\r\n\t\t\t\tlabelEffectiveHeight = size.height;\r\n\t\t\telse\r\n\t\t\t\tlabelEffectiveHeight = (size.width * Math.sin(Math.PI / 180 * Math.abs(this.labelAngle))) + (size.height / 2 * Math.cos(Math.PI / 180 * Math.abs(this.labelAngle)));\r\n\r\n\t\t\tif (maxLabelEffectiveHeight < labelEffectiveHeight)\r\n\t\t\t\tmaxLabelEffectiveHeight = labelEffectiveHeight;\r\n\r\n\t\t\tthis._labels[i].effectiveHeight = labelEffectiveHeight;\r\n\t\t}\r\n\t}\r\n\r\n\t//var titleHeight = this.title ? this.titleFontSize + 5 : 0;\r\n\tvar titleHeight = this.title ? getFontHeightInPixels(this.titleFontFamily, this.titleFontSize, this.titleFontWeight) + 2 : 0;\r\n\r\n\treturn titleHeight + maxLabelEffectiveHeight + this.tickLength + 5;\r\n}\r\n\r\n//Static Method that co-ordinates between axisX, axisY and renders them\r\nAxis.setLayoutAndRender = function (axisX, axisY, axisY2, axisPlacement, freeSpace) {\r\n\tvar x1, y1, x2, y2;\r\n\tvar chart = axisX.chart;\r\n\tvar ctx = chart.ctx;\r\n\r\n\taxisX.calculateAxisParameters();\r\n\r\n\tif (axisY)\r\n\t\taxisY.calculateAxisParameters();\r\n\r\n\tif (axisY2)\r\n\t\taxisY2.calculateAxisParameters();\r\n\r\n\t//if (axisY && axisY2 && typeof (axisY._options.viewportMaximum) === \"undefined\" && typeof (axisY._options.viewportMinimum) === \"undefined\" && typeof (axisY._options.interval) === \"undefined\"\r\n\t//\t\t&& typeof (axisY2._options.viewportMaximum) === \"undefined\" && typeof (axisY2._options.viewportMinimum) === \"undefined\" && typeof (axisY2._options.interval) === \"undefined\") {\r\n\r\n\t//\tvar noTicksY = (axisY.viewportMaximum - axisY.viewportMinimum) / axisY.interval;\r\n\r\n\t//\tvar noTicksY2 = (axisY2.viewportMaximum - axisY2.viewportMinimum) / axisY2.interval;\r\n\r\n\t//\tif (noTicksY > noTicksY2) {\r\n\t//\t\taxisY2.viewportMaximum = axisY2.interval * noTicksY + axisY2.viewportMinimum;\r\n\t//\t} else if (noTicksY2 > noTicksY) {\r\n\t//\t\taxisY.viewportMaximum = axisY.interval * noTicksY2 + axisY.viewportMinimum;\r\n\t//\t}\r\n\t//}\r\n\r\n\tvar axisYlineThickness = axisY ? axisY.lineThickness ? axisY.lineThickness : 0 : 0;\r\n\tvar axisY2lineThickness = axisY2 ? axisY2.lineThickness ? axisY2.lineThickness : 0 : 0;\r\n\r\n\tvar axisYGridThickness = axisY ? axisY.gridThickness ? axisY.gridThickness : 0 : 0;\r\n\tvar axisY2GridThickness = axisY2 ? axisY2.gridThickness ? axisY2.gridThickness : 0 : 0;\r\n\r\n\tvar axisYMargin = axisY ? axisY.margin : 0;\r\n\tvar axisY2Margin = axisY ? axisY.margin : 0;\r\n\r\n\tif (axisPlacement === \"normal\") {\r\n\r\n\t\taxisX.lineCoordinates = {\r\n\t\t};\r\n\r\n\t\tvar axisYWidth = Math.ceil(axisY ? axisY.createLabelsAndCalculateWidth() : 0);\r\n\t\tx1 = Math.round(freeSpace.x1 + axisYWidth + axisYMargin);\r\n\t\taxisX.lineCoordinates.x1 = x1;\r\n\r\n\t\tvar axisY2Width = Math.ceil(axisY2 ? axisY2.createLabelsAndCalculateWidth() : 0);\r\n\t\tx2 = Math.round(freeSpace.x2 - axisY2Width > axisX.chart.width - 10 ? axisX.chart.width - 10 : freeSpace.x2 - axisY2Width);\r\n\t\taxisX.lineCoordinates.x2 = x2;\r\n\r\n\t\taxisX.lineCoordinates.width = Math.abs(x2 - x1); // required early on inside createLabels of axisX\r\n\r\n\t\tvar axisXHeight = Math.ceil(axisX.createLabelsAndCalculateHeight());\r\n\r\n\t\t// Position axisX based on the available free space, Margin and its height\r\n\t\t//x1 = freeSpace.x1 + axisYWidth + axisYMargin + axisYlineThickness / 2;\r\n\t\ty1 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\r\n\t\ty2 = Math.round(freeSpace.y2 - axisX.margin);\r\n\r\n\t\t//axisX.lineCoordinates = { x1: x1, y1: y1, x2: x2, y2: y1, width: Math.abs(x2 - x1) }\r\n\t\taxisX.lineCoordinates.y1 = y1;\r\n\t\taxisX.lineCoordinates.y2 = y1;\r\n\r\n\t\taxisX.boundingRect = {\r\n\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: y2 - y1\r\n\t\t};\r\n\r\n\t\t//if (isDebugMode) {\r\n\t\t//\taxisX.ctx.rect(axisX.boundingRect.x1, axisX.boundingRect.y1, axisX.boundingRect.width, axisX.boundingRect.height);\r\n\t\t//\taxisX.ctx.stroke();\r\n\t\t//}\r\n\r\n\t\t// Position axisY based on the available free space, Margin and its height\r\n\t\tif (axisY) {\r\n\t\t\tx1 = Math.round(freeSpace.x1 + axisY.margin);\r\n\t\t\ty1 = Math.round(freeSpace.y1 < 10 ? 10 : freeSpace.y1);\r\n\t\t\tx2 = Math.round(freeSpace.x1 + axisYWidth + axisY.margin);\r\n\t\t\t//y2 = freeSpace.y2 - axisXHeight - axisX.margin - axisX.lineThickness / 2;\r\n\t\t\ty2 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\r\n\r\n\t\t\taxisY.lineCoordinates = {\r\n\t\t\t\tx1: x2, y1: y1, x2: x2, y2: y2, height: Math.abs(y2 - y1)\r\n\t\t\t}\r\n\r\n\t\t\taxisY.boundingRect = {\r\n\t\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: y2 - y1\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t//if (isDebugMode && axisY) {\r\n\t\t//\taxisY.ctx.rect(axisY.boundingRect.x1, axisY.boundingRect.y1, axisY.boundingRect.width, axisY.boundingRect.height);\r\n\t\t//\taxisY.ctx.stroke();\r\n\t\t//}\r\n\r\n\t\t// Position axisY2 based on the available free space, Margin and its height\r\n\t\tif (axisY2) {\r\n\t\t\tx1 = Math.round(axisX.lineCoordinates.x2);\r\n\t\t\ty1 = Math.round(freeSpace.y1 < 10 ? 10 : freeSpace.y1);\r\n\t\t\tx2 = Math.round(x1 + axisY2Width + axisY2.margin);\r\n\t\t\t//y2 = freeSpace.y2 - axisXHeight - axisX.margin - axisX.lineThickness / 2;\r\n\t\t\ty2 = Math.round(freeSpace.y2 - axisXHeight - axisX.margin);\r\n\r\n\t\t\taxisY2.lineCoordinates = {\r\n\t\t\t\tx1: x1, y1: y1, x2: x1, y2: y2, height: Math.abs(y2 - y1)\r\n\t\t\t}\r\n\r\n\t\t\taxisY2.boundingRect = {\r\n\t\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: y2 - y1\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\taxisX.calculateValueToPixelConversionParameters();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.calculateValueToPixelConversionParameters();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.calculateValueToPixelConversionParameters();\r\n\r\n\r\n\t\tctx.save();\r\n\t\tctx.rect(5, axisX.boundingRect.y1, axisX.chart.width - 10, axisX.boundingRect.height);\r\n\t\tctx.clip();\r\n\r\n\t\taxisX.renderLabelsTicksAndTitle();\r\n\t\tctx.restore();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderLabelsTicksAndTitle();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderLabelsTicksAndTitle();\r\n\r\n\r\n\t\tchart.preparePlotArea();\r\n\t\tvar plotArea = axisX.chart.plotArea;\r\n\r\n\t\tctx.save();\r\n\r\n\t\tctx.rect(plotArea.x1, plotArea.y1, Math.abs(plotArea.x2 - plotArea.x1), Math.abs(plotArea.y2 - plotArea.y1));\r\n\r\n\t\tctx.clip();\r\n\r\n\t\taxisX.renderStripLinesOfThicknessType(\"value\");\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderStripLinesOfThicknessType(\"value\");\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderStripLinesOfThicknessType(\"value\");\r\n\r\n\r\n\t\taxisX.renderInterlacedColors();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderInterlacedColors();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderInterlacedColors();\r\n\r\n\t\tctx.restore();\r\n\r\n\r\n\t\taxisX.renderGrid();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderGrid();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderGrid();\r\n\r\n\r\n\t\taxisX.renderAxisLine();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderAxisLine();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderAxisLine();\r\n\r\n\r\n\t\t//No need to clip to plotArea because stripLines need to render on top of gridlines\r\n\t\taxisX.renderStripLinesOfThicknessType(\"pixel\");\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderStripLinesOfThicknessType(\"pixel\");\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderStripLinesOfThicknessType(\"pixel\");\r\n\t}\r\n\telse {\r\n\t\tvar axisXWidth = Math.ceil(axisX.createLabelsAndCalculateWidth());\r\n\r\n\t\tif (axisY) {\r\n\t\t\taxisY.lineCoordinates = {\r\n\t\t\t};\r\n\r\n\t\t\tx1 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\r\n\t\t\tx2 = Math.round(freeSpace.x2 > axisY.chart.width - 10 ? axisY.chart.width - 10 : freeSpace.x2);\r\n\r\n\t\t\taxisY.lineCoordinates.x1 = x1;\r\n\t\t\taxisY.lineCoordinates.x2 = x2;\r\n\t\t\taxisY.lineCoordinates.width = Math.abs(x2 - x1);\r\n\t\t}\r\n\r\n\t\tif (axisY2) {\r\n\t\t\taxisY2.lineCoordinates = {\r\n\t\t\t};\r\n\t\t\tx1 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\r\n\t\t\tx2 = Math.round(freeSpace.x2 > axisY2.chart.width - 10 ? axisY2.chart.width - 10 : freeSpace.x2);\r\n\r\n\t\t\taxisY2.lineCoordinates.x1 = x1;\r\n\t\t\taxisY2.lineCoordinates.x2 = x2;\r\n\t\t\taxisY2.lineCoordinates.width = Math.abs(x2 - x1);\r\n\t\t}\r\n\r\n\r\n\r\n\t\tvar axisYHeight = Math.ceil(axisY ? axisY.createLabelsAndCalculateHeight() : 0);\r\n\t\tvar axisY2Height = Math.ceil(axisY2 ? axisY2.createLabelsAndCalculateHeight() : 0);\r\n\r\n\r\n\t\t// Position axisY based on the available free space, Margin and its height\r\n\t\tif (axisY) {\r\n\t\t\t//x1 = freeSpace.x1 + axisXWidth + axisX.margin + axisX.lineThickness / 2;\r\n\t\t\t//x2 = freeSpace.x2 > axisY.chart.width - 10 ? axisY.chart.width - 10 : freeSpace.x2;\r\n\r\n\t\t\ty1 = Math.round(freeSpace.y2 - axisYHeight - axisY.margin);\r\n\t\t\ty2 = Math.round(freeSpace.y2 - axisYMargin > axisY.chart.height - 10 ? axisY.chart.height - 10 : freeSpace.y2 - axisYMargin);\r\n\r\n\t\t\t//axisY.lineCoordinates = { x1: x1, y1: y1, x2: x2, y2: y1, width: Math.abs(x2 - x1) }\r\n\t\t\taxisY.lineCoordinates.y1 = y1;\r\n\t\t\taxisY.lineCoordinates.y2 = y1;\r\n\r\n\t\t\taxisY.boundingRect = {\r\n\t\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: axisYHeight\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Position axisY based on the available free space, Margin and its height\r\n\t\tif (axisY2) {\r\n\t\t\t//x1 = freeSpace.x1 + axisXWidth + axisX.margin + axisX.lineThickness / 2;\r\n\t\t\t//x2 = freeSpace.x2 > axisY2.chart.width - 10 ? axisY2.chart.width - 10 : freeSpace.x2;\r\n\r\n\t\t\ty1 = Math.round(freeSpace.y1 + axisY2.margin);\r\n\t\t\ty2 = (freeSpace.y1 + axisY2.margin + axisY2Height);\r\n\r\n\t\t\t//axisY2.lineCoordinates = { x1: x1, y1: y2, x2: x2, y2: y2, width: Math.abs(x2 - x1) }\r\n\t\t\taxisY2.lineCoordinates.y1 = y2;\r\n\t\t\taxisY2.lineCoordinates.y2 = y2;\r\n\r\n\t\t\taxisY2.boundingRect = {\r\n\t\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: axisY2Height\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t//axisY.ctx.rect(axisY.boundingRect.x1, axisY.boundingRect.y1, axisY.boundingRect.width, axisY.boundingRect.height);\r\n\t\t//axisY.ctx.stroke();\r\n\r\n\t\t// Position axisX based on the available free space, Margin and its height\r\n\t\tx1 = Math.round(freeSpace.x1 + axisX.margin);\r\n\t\ty1 = Math.round(axisY2 ? axisY2.lineCoordinates.y2 : (freeSpace.y1 < 10 ? 10 : freeSpace.y1));\r\n\t\tx2 = Math.round(freeSpace.x1 + axisXWidth + axisX.margin);\r\n\t\ty2 = Math.round(axisY ? axisY.lineCoordinates.y1 : (freeSpace.y2 - axisYMargin > axisX.chart.height - 10 ? axisX.chart.height - 10 : freeSpace.y2 - axisYMargin));\r\n\r\n\r\n\t\taxisX.lineCoordinates = {\r\n\t\t\tx1: x2, y1: y1, x2: x2, y2: y2, height: Math.abs(y2 - y1)\r\n\t\t};\r\n\r\n\t\taxisX.boundingRect = {\r\n\t\t\tx1: x1, y1: y1, x2: x2, y2: y2, width: x2 - x1, height: y2 - y1\r\n\t\t};\r\n\r\n\t\t//axisX.ctx.rect(axisX.boundingRect.x1, axisX.boundingRect.y1, axisX.boundingRect.width, axisX.boundingRect.height);\r\n\t\t//axisX.ctx.stroke();\r\n\r\n\t\taxisX.calculateValueToPixelConversionParameters();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.calculateValueToPixelConversionParameters();\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.calculateValueToPixelConversionParameters();\r\n\r\n\r\n\t\t//ctx.save();\r\n\t\t//ctx.rect(axisY.boundingRect.x1 - 30, axisY.boundingRect.y1, axisY.boundingRect.width + 60, axisY.boundingRect.height);\r\n\t\t//ctx.clip();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderLabelsTicksAndTitle();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderLabelsTicksAndTitle();\r\n\r\n\t\t//ctx.restore();\r\n\r\n\t\taxisX.renderLabelsTicksAndTitle();\r\n\r\n\t\tchart.preparePlotArea();\r\n\t\tvar plotArea = axisX.chart.plotArea;\r\n\r\n\t\tctx.save();\r\n\t\tctx.rect(plotArea.x1, plotArea.y1, Math.abs(plotArea.x2 - plotArea.x1), Math.abs(plotArea.y2 - plotArea.y1));\r\n\r\n\t\tctx.clip();\r\n\r\n\r\n\t\t//No need to clip to plotArea because stripLines need to render on top of gridlines\r\n\t\taxisX.renderStripLinesOfThicknessType(\"value\");\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderStripLinesOfThicknessType(\"value\");\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderStripLinesOfThicknessType(\"value\");\r\n\r\n\t\taxisX.renderInterlacedColors();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderInterlacedColors();\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderInterlacedColors();\r\n\r\n\t\tctx.restore();\r\n\r\n\r\n\t\taxisX.renderGrid();\r\n\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderGrid();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderGrid();\r\n\r\n\r\n\t\taxisX.renderAxisLine();\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderAxisLine();\r\n\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderAxisLine();\r\n\r\n\r\n\t\taxisX.renderStripLinesOfThicknessType(\"pixel\");\r\n\r\n\t\tif (axisY)\r\n\t\t\taxisY.renderStripLinesOfThicknessType(\"pixel\");\r\n\t\tif (axisY2)\r\n\t\t\taxisY2.renderStripLinesOfThicknessType(\"pixel\");\r\n\t}\r\n\r\n}\r\n\r\nAxis.prototype.renderLabelsTicksAndTitle = function () {\r\n\r\n\tvar skipLabels = false;\r\n\tvar totalLabelWidth = 0;\r\n\tvar thresholdRatio = 1;\r\n\tvar labelCount = 0;\r\n\r\n\tvar intervalInPixels = this.conversionParameters.pixelPerUnit * this.interval;\r\n\r\n\tif (this.labelAngle !== 0 && this.labelAngle !== 360)\r\n\t\tthresholdRatio = 1.2;\r\n\r\n\t//Don't skip labels when interval is explicitely set\r\n\tif (typeof (this._options.interval) === \"undefined\") {\r\n\t\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\r\n\t\t\t//thresholdRatio = .9;// More space is preferred between labels when axis is horizontally aligned\r\n\r\n\t\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\t\t\t\tlabel = this._labels[i];\r\n\t\t\t\tif (label.position < this.viewportMinimum || label.stripLine)// don't consider stripLine's lable\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar width = label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle) + label.textBlock.height * Math.sin(Math.PI / 180 * this.labelAngle);\r\n\r\n\t\t\t\ttotalLabelWidth += width;\r\n\t\t\t}\r\n\r\n\t\t\tif (totalLabelWidth > this.lineCoordinates.width * thresholdRatio) {\r\n\t\t\t\tskipLabels = true;\r\n\t\t\t}\r\n\t\t} if (this._position === \"left\" || this._position === \"right\") {\r\n\t\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\t\t\t\tlabel = this._labels[i];\r\n\t\t\t\tif (label.position < this.viewportMinimum || label.stripLine)// don't consider stripLine's lable\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tvar width = label.textBlock.height * Math.cos(Math.PI / 180 * this.labelAngle) + label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle);\r\n\r\n\t\t\t\ttotalLabelWidth += width;\r\n\t\t\t}\r\n\r\n\t\t\tif (totalLabelWidth > this.lineCoordinates.height * thresholdRatio) {\r\n\t\t\t\tskipLabels = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (this._position === \"bottom\") {\r\n\t\tvar i = 0;\r\n\r\n\t\tvar label;\r\n\t\tvar xy;\r\n\r\n\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\r\n\t\t\tlabel = this._labels[i];\r\n\t\t\tif (label.position < this.viewportMinimum || label.position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(label.position);\r\n\r\n\t\t\tif ((this.tickThickness && !this._labels[i].stripLine) || (this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\")) {\r\n\r\n\t\t\t\tif (this._labels[i].stripLine) {\r\n\t\t\t\t\tstripLine = this._labels[i].stripLine;\r\n\t\t\t\t\tthis.ctx.lineWidth = stripLine.thickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = stripLine.color;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ctx.lineWidth = this.tickThickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = this.tickColor;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tvar tickX = (this.ctx.lineWidth % 2 === 1) ? (xy.x << 0) + .5 : (xy.x << 0);\r\n\t\t\t\tthis.ctx.beginPath();\r\n\t\t\t\tthis.ctx.moveTo(tickX, xy.y << 0);\r\n\t\t\t\tthis.ctx.lineTo(tickX, (xy.y + this.tickLength) << 0);\r\n\t\t\t\tthis.ctx.stroke();\r\n\t\t\t}\r\n\r\n\t\t\t//Don't skip stripLine's labels\r\n\t\t\tif (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (label.textBlock.angle === 0) {\r\n\t\t\t\txy.x -= label.textBlock.width / 2;\r\n\t\t\t\t//xy.y += this.tickLength + label.textBlock.height / 2;\r\n\t\t\t\txy.y += this.tickLength + label.textBlock.fontSize / 2;\r\n\r\n\t\t\t} else {\r\n\t\t\t\txy.x -= (this.labelAngle < 0 ? (label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle)) : 0);\r\n\t\t\t\txy.y += this.tickLength + Math.abs((this.labelAngle < 0 ? label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle) - 5 : 5));\r\n\t\t\t}\r\n\t\t\tlabel.textBlock.x = xy.x;\r\n\t\t\tlabel.textBlock.y = xy.y;\r\n\r\n\t\t\tlabel.textBlock.render(true);\r\n\t\t}\r\n\r\n\t\tif (this.title) {\r\n\r\n\t\t\tthis._titleTextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: this.lineCoordinates.x1,// This is recalculated again\r\n\t\t\t\ty: this.boundingRect.y2 - this.titleFontSize - 5,// This is recalculated again\r\n\t\t\t\tmaxWidth: this.lineCoordinates.width,\r\n\t\t\t\tmaxHeight: this.titleFontSize * 1.5,\r\n\t\t\t\tangle: 0,\r\n\t\t\t\ttext: this.title,\r\n\t\t\t\thorizontalAlign: \"center\",//left, center, right\r\n\t\t\t\tfontSize: this.titleFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.titleFontFamily,\r\n\t\t\t\tfontWeight: this.titleFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.titleFontColor,\r\n\t\t\t\tfontStyle: this.titleFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"top\"\r\n\t\t\t});\r\n\r\n\t\t\tthis._titleTextBlock.measureText();\r\n\t\t\tthis._titleTextBlock.x = this.lineCoordinates.x1 + this.lineCoordinates.width / 2 - this._titleTextBlock.width / 2;\r\n\t\t\tthis._titleTextBlock.y = this.boundingRect.y2 - this._titleTextBlock.height - 3;\r\n\t\t\tthis._titleTextBlock.render(true);\r\n\t\t}\r\n\t}\r\n\telse if (this._position === \"top\") {\r\n\t\tvar i = 0;\r\n\r\n\t\tvar label;\r\n\t\tvar xy;\r\n\t\tvar stripLine;\r\n\r\n\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\t\t\tlabel = this._labels[i];\r\n\t\t\tif (label.position < this.viewportMinimum || label.position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(label.position);\r\n\r\n\t\t\tif ((this.tickThickness && !this._labels[i].stripLine) || (this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\")) {\r\n\r\n\r\n\t\t\t\tif (this._labels[i].stripLine) {\r\n\t\t\t\t\tstripLine = this._labels[i].stripLine;\r\n\r\n\t\t\t\t\tthis.ctx.lineWidth = stripLine.thickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = stripLine.color;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ctx.lineWidth = this.tickThickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = this.tickColor;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tickX = (this.ctx.lineWidth % 2 === 1) ? (xy.x << 0) + .5 : (xy.x << 0);\r\n\t\t\t\tthis.ctx.beginPath();\r\n\t\t\t\tthis.ctx.moveTo(tickX, xy.y << 0);\r\n\t\t\t\tthis.ctx.lineTo(tickX, (xy.y - this.tickLength) << 0);\r\n\t\t\t\tthis.ctx.stroke();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//Don't skip stripLine's labels\r\n\t\t\tif (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (label.textBlock.angle === 0) {\r\n\t\t\t\txy.x -= label.textBlock.width / 2;\r\n\t\t\t\txy.y -= this.tickLength + label.textBlock.height / 2;\r\n\t\t\t} else {\r\n\t\t\t\txy.x -= (this.labelAngle > 0 ? (label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle)) : 0);\r\n\t\t\t\txy.y -= this.tickLength + Math.abs((this.labelAngle > 0 ? label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle) + 5 : 5));\r\n\t\t\t}\r\n\t\t\tlabel.textBlock.x = xy.x;\r\n\t\t\tlabel.textBlock.y = xy.y;\r\n\r\n\t\t\tlabel.textBlock.render(true);\r\n\t\t}\r\n\r\n\t\tif (this.title) {\r\n\r\n\t\t\tthis._titleTextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: this.lineCoordinates.x1,// This is recalculated again\r\n\t\t\t\ty: this.boundingRect.y1 + 1,\r\n\t\t\t\tmaxWidth: this.lineCoordinates.width,\r\n\t\t\t\tmaxHeight: this.titleFontSize * 1.5,\r\n\t\t\t\tangle: 0,\r\n\t\t\t\ttext: this.title,\r\n\t\t\t\thorizontalAlign: \"center\",//left, center, right\r\n\t\t\t\tfontSize: this.titleFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.titleFontFamily,\r\n\t\t\t\tfontWeight: this.titleFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.titleFontColor,\r\n\t\t\t\tfontStyle: this.titleFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"top\"\r\n\t\t\t});\r\n\r\n\t\t\tthis._titleTextBlock.measureText();\r\n\t\t\tthis._titleTextBlock.x = this.lineCoordinates.x1 + this.lineCoordinates.width / 2 - this._titleTextBlock.width / 2;\r\n\t\t\tthis._titleTextBlock.render(true);\r\n\t\t}\r\n\t}\r\n\telse if (this._position === \"left\") {\r\n\r\n\r\n\t\tvar label;\r\n\t\tvar xy;\r\n\t\tfor (var i = 0; i < this._labels.length; i++) {\r\n\t\t\tlabel = this._labels[i];\r\n\t\t\tif (label.position < this.viewportMinimum || label.position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(label.position);\r\n\r\n\t\t\tif ((this.tickThickness && !this._labels[i].stripLine) || (this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\")) {\r\n\r\n\t\t\t\tif (this._labels[i].stripLine) {\r\n\t\t\t\t\tstripLine = this._labels[i].stripLine;\r\n\r\n\t\t\t\t\tthis.ctx.lineWidth = stripLine.thickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = stripLine.color;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ctx.lineWidth = this.tickThickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = this.tickColor;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tickY = (this.ctx.lineWidth % 2 === 1) ? (xy.y << 0) + .5 : (xy.y << 0);\r\n\t\t\t\tthis.ctx.beginPath();\r\n\t\t\t\tthis.ctx.moveTo(xy.x << 0, tickY);\r\n\t\t\t\tthis.ctx.lineTo((xy.x - this.tickLength) << 0, tickY);\r\n\t\t\t\tthis.ctx.stroke();\r\n\t\t\t}\r\n\r\n\t\t\t//Don't skip stripLine's labels\r\n\t\t\tif (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tlabel.textBlock.x = xy.x - (label.textBlock.width * Math.cos(Math.PI / 180 * this.labelAngle)) - this.tickLength - 5;\r\n\r\n\t\t\tif (this.labelAngle === 0) {\r\n\t\t\t\tlabel.textBlock.y = xy.y;\r\n\t\t\t} else\r\n\t\t\t\tlabel.textBlock.y = xy.y - (label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle));\r\n\r\n\t\t\tlabel.textBlock.render(true);\r\n\t\t}\r\n\r\n\t\tif (this.title) {\r\n\r\n\t\t\tthis._titleTextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: this.boundingRect.x1 + 1,\r\n\t\t\t\ty: this.lineCoordinates.y2,\r\n\t\t\t\tmaxWidth: this.lineCoordinates.height,\r\n\t\t\t\tmaxHeight: this.titleFontSize * 1.5,\r\n\t\t\t\tangle: -90,\r\n\t\t\t\ttext: this.title,\r\n\t\t\t\thorizontalAlign: \"center\",//left, center, right\r\n\t\t\t\tfontSize: this.titleFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.titleFontFamily,\r\n\t\t\t\tfontWeight: this.titleFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.titleFontColor,\r\n\t\t\t\tfontStyle: this.titleFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"top\"\r\n\t\t\t});\r\n\r\n\t\t\tvar size = this._titleTextBlock.measureText();\r\n\r\n\t\t\t//this._titleTextBlock.x -= 4;\r\n\r\n\t\t\tthis._titleTextBlock.y = (this.lineCoordinates.height / 2 + this._titleTextBlock.width / 2 + this.lineCoordinates.y1);\r\n\t\t\tthis._titleTextBlock.render(true);\r\n\r\n\t\t\t//if (isDebugMode) {\r\n\t\t\t//\twindow.console.log(\"titleFontSize: \" + this.titleFontSize + \"; width: \" + size.width + \"; height: \" + size.height);\r\n\t\t\t//\twindow.console.log(\"this.boundingRect.x1: \" + this.boundingRect.x1);\r\n\r\n\t\t\t//\t//this.ctx.rect(this._titleTextBlock.x, this._titleTextBlock.y, this._titleTextBlock.height, -this._titleTextBlock.width);\r\n\t\t\t//\t//this.ctx.stroke();\r\n\r\n\t\t\t//}\r\n\r\n\t\t}\r\n\t}\r\n\telse if (this._position === \"right\") {\r\n\r\n\r\n\t\tvar label;\r\n\t\tvar xy;\r\n\r\n\t\tfor (var i = 0; i < this._labels.length; i++) {\r\n\t\t\tlabel = this._labels[i];\r\n\t\t\tif (label.position < this.viewportMinimum || label.position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(label.position);\r\n\r\n\t\t\tif ((this.tickThickness && !this._labels[i].stripLine) || (this._labels[i].stripLine && this._labels[i].stripLine._thicknessType === \"pixel\")) {\r\n\r\n\t\t\t\tif (this._labels[i].stripLine) {\r\n\t\t\t\t\tstripLine = this._labels[i].stripLine;\r\n\r\n\t\t\t\t\tthis.ctx.lineWidth = stripLine.thickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = stripLine.color;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.ctx.lineWidth = this.tickThickness;\r\n\t\t\t\t\tthis.ctx.strokeStyle = this.tickColor;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar tickY = (this.ctx.lineWidth % 2 === 1) ? (xy.y << 0) + .5 : (xy.y << 0);\r\n\t\t\t\tthis.ctx.beginPath();\r\n\t\t\t\tthis.ctx.moveTo(xy.x << 0, tickY);\r\n\t\t\t\tthis.ctx.lineTo((xy.x + this.tickLength) << 0, tickY);\r\n\t\t\t\tthis.ctx.stroke();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//Don't skip stripLine's labels\r\n\t\t\tif (skipLabels && labelCount++ % 2 !== 0 && !this._labels[i].stripLine)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tlabel.textBlock.x = xy.x + this.tickLength + 5;\r\n\t\t\t//label.textBlock.y = xy.y - (label.textBlock.width * Math.sin(Math.PI / 180 * this.labelAngle));\r\n\t\t\tif (this.labelAngle === 0) {\r\n\t\t\t\tlabel.textBlock.y = xy.y;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tlabel.textBlock.y = xy.y;\r\n\r\n\t\t\tlabel.textBlock.render(true);\r\n\t\t}\r\n\r\n\t\tif (this.title) {\r\n\r\n\t\t\tthis._titleTextBlock = new TextBlock(this.ctx, {\r\n\t\t\t\tx: this.boundingRect.x2 - 1,\r\n\t\t\t\ty: this.lineCoordinates.y2,\r\n\t\t\t\tmaxWidth: this.lineCoordinates.height,\r\n\t\t\t\tmaxHeight: this.titleFontSize * 1.5,\r\n\t\t\t\tangle: 90,\r\n\t\t\t\ttext: this.title,\r\n\t\t\t\thorizontalAlign: \"center\",//left, center, right\r\n\t\t\t\tfontSize: this.titleFontSize,//in pixels\r\n\t\t\t\tfontFamily: this.titleFontFamily,\r\n\t\t\t\tfontWeight: this.titleFontWeight, //normal, bold, bolder, lighter,\r\n\t\t\t\tfontColor: this.titleFontColor,\r\n\t\t\t\tfontStyle: this.titleFontStyle, // normal, italic, oblique\r\n\t\t\t\ttextBaseline: \"top\"\r\n\t\t\t});\r\n\r\n\t\t\tthis._titleTextBlock.measureText();\r\n\t\t\tthis._titleTextBlock.y = (this.lineCoordinates.height / 2 - this._titleTextBlock.width / 2 + this.lineCoordinates.y1);\r\n\t\t\tthis._titleTextBlock.render(true);\r\n\r\n\t\t}\r\n\t}\r\n}\r\n\r\nAxis.prototype.renderInterlacedColors = function () {\r\n\tvar ctx = this.chart.plotArea.ctx;\r\n\t//return;\r\n\r\n\tvar interlacedGridStartPoint;\r\n\tvar interlacedGridEndPoint;\r\n\tvar plotAreaCoordinates = this.chart.plotArea;\r\n\tvar i = 0, renderInterlacedGrid = true;\r\n\r\n\tif ((this._position === \"bottom\" || this._position === \"top\") && this.interlacedColor) {\r\n\r\n\t\tctx.fillStyle = this.interlacedColor;\r\n\r\n\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\r\n\t\t\tif (this._labels[i].stripLine)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (renderInterlacedGrid) {//So that the interlaced color alternates\r\n\t\t\t\tinterlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this._labels[i].position);\r\n\r\n\t\t\t\tif (i + 1 >= this._labels.length - 1)\r\n\t\t\t\t\tinterlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this.viewportMaximum);\r\n\t\t\t\telse\r\n\t\t\t\t\tinterlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this._labels[i + 1].position);\r\n\r\n\t\t\t\tctx.fillRect(interlacedGridStartPoint.x, plotAreaCoordinates.y1, Math.abs(interlacedGridEndPoint.x - interlacedGridStartPoint.x), Math.abs(plotAreaCoordinates.y1 - plotAreaCoordinates.y2));\r\n\t\t\t\trenderInterlacedGrid = false;\r\n\t\t\t} else\r\n\t\t\t\trenderInterlacedGrid = true;\r\n\r\n\t\t}\r\n\r\n\t} else if ((this._position === \"left\" || this._position === \"right\") && this.interlacedColor) {\r\n\r\n\t\tctx.fillStyle = this.interlacedColor;\r\n\r\n\t\tfor (i = 0; i < this._labels.length; i++) {\r\n\t\t        if (this._labels[i].stripLine)\r\n\t\t            continue;\r\n\r\n\t\t\tif (renderInterlacedGrid) {//So that the interlaced color alternates\r\n\r\n\t\t\t\tinterlacedGridEndPoint = this.getPixelCoordinatesOnAxis(this._labels[i].position);\r\n\r\n\t\t\t\tif (i + 1 >= this._labels.length - 1)\r\n\t\t\t\t\tinterlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this.viewportMaximum);\r\n\t\t\t\telse\r\n\t\t\t\t\tinterlacedGridStartPoint = this.getPixelCoordinatesOnAxis(this._labels[i + 1].position);\r\n\r\n\t\t\t\tctx.fillRect(plotAreaCoordinates.x1, interlacedGridStartPoint.y, Math.abs(plotAreaCoordinates.x1 - plotAreaCoordinates.x2), Math.abs(interlacedGridStartPoint.y - interlacedGridEndPoint.y));\r\n\t\t\t\trenderInterlacedGrid = false;\r\n\t\t\t} else\r\n\t\t\t\trenderInterlacedGrid = true;\r\n\t\t}\r\n\t\t    //throw \"123\";\r\n\t}\r\n\r\n\tctx.beginPath();\r\n}\r\n\r\n//Renders stripLines of given thickness type.\r\nAxis.prototype.renderStripLinesOfThicknessType = function (thicknessType) {\r\n\r\n\tif (!(this.stripLines && this.stripLines.length > 0) || !thicknessType)\r\n\t\treturn;\r\n\r\n\tvar _this = this;\r\n\r\n\tvar i = 0;\r\n\tfor (i = 0; i < this.stripLines.length; i++) {\r\n\r\n\t\tvar stripLine = this.stripLines[i];\r\n\r\n\t\tif (stripLine._thicknessType !== thicknessType)\r\n\t\t\tcontinue;\r\n\r\n\r\n\t\t//Should be skipped only if thicknessType is \"pixel\". If it is \"value\" then clipping is automatically applied before calling.\r\n\t\tif (thicknessType === \"pixel\" && (stripLine.value < this.viewportMinimum || stripLine.value > this.viewportMaximum))\r\n\t\t\tcontinue;\r\n\r\n\t\tif (stripLine.showOnTop) {\r\n\t\t\tthis.chart.addEventListener(\"dataAnimationIterationEnd\", stripLine.render, stripLine);\r\n\t\t}\r\n\t\telse\r\n\t\t\tstripLine.render();\r\n\t}\r\n};\r\n\r\nAxis.prototype.renderGrid = function () {\r\n\r\n\tif (!(this.gridThickness && this.gridThickness > 0))\r\n\t\treturn;\r\n\r\n\t//var ctx = this.chart.plotArea.ctx;\r\n\tvar ctx = this.chart.ctx;\r\n\r\n\tvar xy;\r\n\tvar plotAreaCoordinates = this.chart.plotArea;\r\n\tvar stripLine;\r\n\tvar tempLineWidth, tempStrokeStyle;\r\n\t//return;\r\n\r\n\tctx.lineWidth = this.gridThickness;\r\n\tctx.strokeStyle = this.gridColor;\r\n\r\n\tif (ctx.setLineDash) {\r\n\t\tctx.setLineDash(getLineDashArray(this.gridDashType, this.gridThickness));\r\n\t}\r\n\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\r\n\t\tfor (i = 0; i < this._labels.length && !this._labels[i].stripLine; i++) {\r\n\r\n\t\t\tif (this._labels[i].position < this.viewportMinimum || this._labels[i].position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tctx.beginPath();\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(this._labels[i].position);\r\n\r\n\t\t\tvar gridX = (ctx.lineWidth % 2 === 1) ? (xy.x << 0) + .5 : (xy.x << 0);\r\n\r\n\t\t\tctx.moveTo(gridX, plotAreaCoordinates.y1 << 0);\r\n\t\t\tctx.lineTo(gridX, plotAreaCoordinates.y2 << 0);\r\n\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t}\r\n\telse if (this._position === \"left\" || this._position === \"right\") {\r\n\r\n\t\tfor (var i = 0; i < this._labels.length && !this._labels[i].stripLine; i++) {\r\n\r\n\t\t\tif (i === 0 && this.type === \"axisY\" && this.chart.axisX && this.chart.axisX.lineThickness)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (this._labels[i].position < this.viewportMinimum || this._labels[i].position > this.viewportMaximum)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tctx.beginPath();\r\n\r\n\t\t\txy = this.getPixelCoordinatesOnAxis(this._labels[i].position);\r\n\r\n\t\t\tvar gridY = (ctx.lineWidth % 2 === 1) ? (xy.y << 0) + .5 : (xy.y << 0);\r\n\r\n\t\t\tctx.moveTo(plotAreaCoordinates.x1 << 0, gridY);\r\n\t\t\tctx.lineTo(plotAreaCoordinates.x2 << 0, gridY);\r\n\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nAxis.prototype.renderAxisLine = function () {\r\n\t//var ctx = this.chart.plotArea.ctx;\r\n\tvar ctx = this.chart.ctx;\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\t\tif (this.lineThickness) {\r\n\t\t\tctx.lineWidth = this.lineThickness;\r\n\t\t\tctx.strokeStyle = this.lineColor ? this.lineColor : \"black\";\r\n\r\n\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\tctx.setLineDash(getLineDashArray(this.lineDashType, this.lineThickness));\r\n\t\t\t}\r\n\r\n\t\t\tvar lineY = (this.lineThickness % 2 === 1) ? (this.lineCoordinates.y1 << 0) + .5 : (this.lineCoordinates.y1 << 0);\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(this.lineCoordinates.x1, lineY);\r\n\t\t\tctx.lineTo(this.lineCoordinates.x2, lineY);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\r\n\t} else if (this._position === \"left\" || this._position === \"right\") {\r\n\t\tif (this.lineThickness) {\r\n\t\t\tctx.lineWidth = this.lineThickness;\r\n\t\t\tctx.strokeStyle = this.lineColor;\r\n\r\n\t\t\tif (ctx.setLineDash) {\r\n\t\t\t\tctx.setLineDash(getLineDashArray(this.lineDashType, this.lineThickness));\r\n\t\t\t}\r\n\r\n\t\t\tvar lineX = (this.lineThickness % 2 === 1) ? (this.lineCoordinates.x1 << 0) + .5 : (this.lineCoordinates.x1 << 0);\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(lineX, this.lineCoordinates.y1);\r\n\t\t\tctx.lineTo(lineX, this.lineCoordinates.y2);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nAxis.prototype.getPixelCoordinatesOnAxis = function (value) {\r\n\tvar xy = {\r\n\t};\r\n\tvar width = this.lineCoordinates.width;\r\n\tvar height = this.lineCoordinates.height;\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\t\t//var pixelPerUnit = width / Math.abs(this.viewportMaximum - this.viewportMinimum);\r\n\t\tvar pixelPerUnit = this.conversionParameters.pixelPerUnit;\r\n\r\n\t\t//xy.x = this.lineCoordinates.x1 + (pixelPerUnit * (value - this.viewportMinimum));\r\n\t\txy.x = this.conversionParameters.reference + (pixelPerUnit * (value - this.viewportMinimum));\r\n\t\txy.y = this.lineCoordinates.y1;\r\n\t}\r\n\tif (this._position === \"left\" || this._position === \"right\") {\r\n\t\t//var pixelPerUnit = height / Math.abs(this.viewportMaximum - this.viewportMinimum);\r\n\t\tvar pixelPerUnit = -this.conversionParameters.pixelPerUnit;\r\n\r\n\t\t//xy.y = this.lineCoordinates.y2 - (pixelPerUnit * (value - this.viewportMinimum));\r\n\t\txy.y = this.conversionParameters.reference - (pixelPerUnit * (value - this.viewportMinimum));\r\n\t\txy.x = this.lineCoordinates.x2;\r\n\t}\r\n\r\n\treturn xy;\r\n}\r\n\r\nAxis.prototype.convertPixelToValue = function (pixel) {\r\n\r\n\tif (!pixel)\r\n\t\treturn null;\r\n\r\n\tvar value = 0;\r\n\tvar p = (this._position === \"left\" || this._position === \"right\") ? pixel.y : pixel.x;\r\n\r\n\tvalue = this.conversionParameters.minimum + (p - this.conversionParameters.reference) / this.conversionParameters.pixelPerUnit;\r\n\r\n\treturn value;\r\n}\r\n\r\nAxis.prototype.setViewPortRange = function (viewportMinimum, viewportMaximum) {\r\n\r\n\tthis.sessionVariables.newViewportMinimum = this.viewportMinimum = Math.min(viewportMinimum, viewportMaximum);\r\n\tthis.sessionVariables.newViewportMaximum = this.viewportMaximum = Math.max(viewportMinimum, viewportMaximum);\r\n\r\n}\r\n\r\nAxis.prototype.getXValueAt = function (pixel) {\r\n\tif (!pixel)\r\n\t\treturn null;\r\n\r\n\tvar xval = null;\r\n\r\n\tif (this._position === \"left\") {\r\n\t\txval = (this.chart.axisX.viewportMaximum - this.chart.axisX.viewportMinimum) / this.chart.axisX.lineCoordinates.height * ((this.chart.axisX.lineCoordinates.y2 - pixel.y)) + this.chart.axisX.viewportMinimum;\r\n\t}\r\n\telse if (this._position === \"bottom\") {\r\n\t\txval = (this.chart.axisX.viewportMaximum - this.chart.axisX.viewportMinimum) / this.chart.axisX.lineCoordinates.width * (pixel.x - this.chart.axisX.lineCoordinates.x1) + this.chart.axisX.viewportMinimum;\r\n\t}\r\n\r\n\treturn xval;\r\n}\r\n\r\nAxis.prototype.calculateValueToPixelConversionParameters = function (value) {\r\n\tthis.reversed = false;\r\n\r\n\tvar conversionParameters = {\r\n\t\tpixelPerUnit: null, minimum: null, reference: null\r\n\t};\r\n\r\n\tvar width = this.lineCoordinates.width;\r\n\tvar height = this.lineCoordinates.height;\r\n\r\n\tconversionParameters.minimum = this.viewportMinimum;\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\t\tconversionParameters.pixelPerUnit = (this.reversed ? -1 : 1) * width / Math.abs(this.viewportMaximum - this.viewportMinimum);\r\n\t\tconversionParameters.reference = (this.reversed ? this.lineCoordinates.x2 : this.lineCoordinates.x1);\r\n\t}\r\n\r\n\tif (this._position === \"left\" || this._position === \"right\") {\r\n\t\tconversionParameters.pixelPerUnit = (this.reversed ? 1 : -1) * height / Math.abs(this.viewportMaximum - this.viewportMinimum);\r\n\t\tconversionParameters.reference = (this.reversed ? this.lineCoordinates.y1 : this.lineCoordinates.y2);\r\n\t}\r\n\r\n\r\n\tthis.conversionParameters = conversionParameters;\r\n}\r\n\r\nAxis.prototype.calculateAxisParameters = function () {\r\n\r\n\tvar freeSpace = this.chart.layoutManager.getFreeSpace();\r\n\tvar availableWidth = 0;\r\n\tvar availableHeight = 0;\r\n\tvar isLessThanTwoDataPoints = false;\r\n\r\n\tif (this._position === \"bottom\" || this._position === \"top\") {\r\n\t\tthis.maxWidth = freeSpace.width;\r\n\t\tthis.maxHeight = freeSpace.height;\r\n\t} else {\r\n\t\tthis.maxWidth = freeSpace.height;\r\n\t\tthis.maxHeight = freeSpace.width;\r\n\t}\r\n\r\n\tvar noTicks = this.type === \"axisX\" ? (this.maxWidth < 500 ? 8 : Math.max(6, Math.floor(this.maxWidth / 62))) : Math.max(Math.floor(this.maxWidth / 40), 2);\r\n\tvar min, max;\r\n\tvar minDiff;\r\n\tvar range;\r\n\tvar rangePadding = 0;\r\n\r\n\r\n\tif (this.viewportMinimum === null || isNaN(this.viewportMinimum))\r\n\t\tthis.viewportMinimum = this.minimum;\r\n\r\n\tif (this.viewportMaximum === null || isNaN(this.viewportMaximum))\r\n\t\tthis.viewportMaximum = this.maximum;\r\n\r\n\tif (this.type === \"axisX\") {\r\n\t\tmin = (this.viewportMinimum !== null) ? this.viewportMinimum : this.dataInfo.viewPortMin;\r\n\t\tmax = (this.viewportMaximum !== null) ? this.viewportMaximum : this.dataInfo.viewPortMax;\r\n\r\n\t\tif (max - min === 0) {\r\n\t\t\trangePadding = typeof (this._options.interval) === \"undefined\" ? .4 : this._options.interval;\r\n\r\n\t\t\tmax += rangePadding;\r\n\t\t\tmin -= rangePadding;\r\n\t\t}\r\n\r\n\t\tif (this.dataInfo.minDiff !== Infinity)\r\n\t\t\tminDiff = this.dataInfo.minDiff;\r\n\t\telse if (max - min > 1) {\r\n\t\t\tminDiff = Math.abs(max - min) * .5;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tminDiff = 1;\r\n\r\n\t\t\tif (this.chart.plotInfo.axisXValueType === \"dateTime\")\r\n\t\t\t\tisLessThanTwoDataPoints = true;\r\n\t\t}\r\n\r\n\t} else if (this.type === \"axisY\") {\r\n\r\n\t\t//min = typeof (this._options.viewportMinimum) === \"undefined\" || this._options.viewportMinimum === null ? this.dataInfo.viewPortMin : this._options.viewportMinimum;\r\n\t\t//max = typeof (this._options.viewportMaximum) === \"undefined\" || this._options.viewportMaximum === null ? this.dataInfo.viewPortMax : this._options.viewportMaximum;\r\n\t\tmin = (this.viewportMinimum !== null) ? this.viewportMinimum : this.dataInfo.viewPortMin;\r\n\t\tmax = (this.viewportMaximum !== null) ? this.viewportMaximum : this.dataInfo.viewPortMax;\r\n\r\n\t\tif (!isFinite(min) && !isFinite(max)) {\r\n\t\t\tmax = typeof (this._options.interval) === \"undefined\" ? -Infinity : this._options.interval;\r\n\t\t\tmin = 0;\r\n\t\t} else if (!isFinite(min)) {\r\n\t\t\tmin = max;\r\n\t\t} else if (!isFinite(max)) {\r\n\t\t\tmax = min;\r\n\t\t}\r\n\r\n\t\t\tif (min === 0 && max === 0) {// When all dataPoints are zero\r\n\t\t\t\tmax += 9;\r\n\t\t\t\tmin = 0;\r\n\t\t\t}\r\n\t\t\telse if (max - min === 0) {// When there is only a single dataPoint or when all dataPoints have same Y Value\r\n\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max) * .01), 5);\r\n\t\t\t\tmax += rangePadding;\r\n\t\t\t\tmin -= rangePadding;\r\n\t\t\t}\r\n\t\t\telse if (min > max) {\r\n\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), 5);\r\n\r\n\t\t\t\tif (max >= 0)\r\n\t\t\t\t\tmin = max - rangePadding;\r\n\t\t\t\telse\r\n\t\t\t\t\tmax = min + rangePadding;\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), .05);\r\n\r\n\t\t\t\tif (max !== 0)\r\n\t\t\t\t\tmax += rangePadding;\r\n\t\t\t\tif (min !== 0)\r\n\t\t\t\t\tmin -= rangePadding;\r\n\t\t\t}\r\n\r\n\t\tif (this.dataInfo.minDiff !== Infinity)\r\n\t\t\tminDiff = this.dataInfo.minDiff;\r\n\t\telse if (max - min > 1) {\r\n\t\t\tminDiff = Math.abs(max - min) * .5;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tminDiff = 1;\r\n\t\t}\r\n\r\n\r\n\t\t//Apply includeZero\r\n\t\tif (this.includeZero && (this.viewportMinimum === null || isNaN(this.viewportMinimum))) {\r\n\t\t\tif (min > 0)\r\n\t\t\t\tmin = 0;\r\n\t\t}\r\n\t\tif (this.includeZero && (this.viewportMaximum === null || isNaN(this.viewportMaximum))) {\r\n\t\t\tif (max < 0)\r\n\t\t\t\tmax = 0;\r\n\t\t}\r\n\t}\r\n\r\n\trange = (isNaN(this.viewportMaximum) || this.viewportMaximum === null ? max : this.viewportMaximum) - (isNaN(this.viewportMinimum) || this.viewportMinimum === null ? min : this.viewportMinimum);\r\n\r\n\tif (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\r\n\r\n\t\tif (!this.intervalType) {\r\n\r\n\t\t\tif (range / (1 * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 5) <= noTicks) {\r\n\t\t\t\tthis.interval = 5;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 10) <= noTicks) {\r\n\t\t\t\tthis.interval = 10;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 20) <= noTicks) {\r\n\t\t\t\tthis.interval = 20;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 50) <= noTicks) {\r\n\t\t\t\tthis.interval = 50;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 100) <= noTicks) {\r\n\t\t\t\tthis.interval = 100;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 200) <= noTicks) {\r\n\t\t\t\tthis.interval = 200;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 250) <= noTicks) {\r\n\t\t\t\tthis.interval = 250;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 300) <= noTicks) {\r\n\t\t\t\tthis.interval = 300;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 400) <= noTicks) {\r\n\t\t\t\tthis.interval = 400;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (1 * 500) <= noTicks) {\r\n\t\t\t\tthis.interval = 500;\r\n\t\t\t\tthis.intervalType = \"millisecond\";\r\n\t\t\t} else if (range / (constants.secondDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 5) <= noTicks) {\r\n\t\t\t\tthis.interval = 5;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 10) <= noTicks) {\r\n\t\t\t\tthis.interval = 10;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 15) <= noTicks) {\r\n\t\t\t\tthis.interval = 15;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 20) <= noTicks) {\r\n\t\t\t\tthis.interval = 20;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.secondDuration * 30) <= noTicks) {\r\n\t\t\t\tthis.interval = 30;\r\n\t\t\t\tthis.intervalType = \"second\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 5) <= noTicks) {\r\n\t\t\t\tthis.interval = 5;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 10) <= noTicks) {\r\n\t\t\t\tthis.interval = 10;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 15) <= noTicks) {\r\n\t\t\t\tthis.interval = 15;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 20) <= noTicks) {\r\n\t\t\t\tthis.interval = 20;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.minuteDuration * 30) <= noTicks) {\r\n\t\t\t\tthis.interval = 30;\r\n\t\t\t\tthis.intervalType = \"minute\";\r\n\t\t\t} else if (range / (constants.hourDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"hour\";\r\n\t\t\t} else if (range / (constants.hourDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"hour\";\r\n\t\t\t} else if (range / (constants.hourDuration * 3) <= noTicks) {\r\n\t\t\t\tthis.interval = 3;\r\n\t\t\t\tthis.intervalType = \"hour\";\r\n\t\t\t} else if (range / (constants.hourDuration * 6) <= noTicks) {\r\n\t\t\t\tthis.interval = 6;\r\n\t\t\t\tthis.intervalType = \"hour\";\r\n\t\t\t} else if (range / (constants.dayDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"day\";\r\n\t\t\t} else if (range / (constants.dayDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"day\";\r\n\t\t\t} else if (range / (constants.dayDuration * 4) <= noTicks) {\r\n\t\t\t\tthis.interval = 4;\r\n\t\t\t\tthis.intervalType = \"day\";\r\n\t\t\t} else if (range / (constants.weekDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"week\";\r\n\t\t\t} else if (range / (constants.weekDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"week\";\r\n\t\t\t} else if (range / (constants.weekDuration * 3) <= noTicks) {\r\n\t\t\t\tthis.interval = 3;\r\n\t\t\t\tthis.intervalType = \"week\";\r\n\t\t\t} else if (range / (constants.monthDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"month\";\r\n\t\t\t} else if (range / (constants.monthDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"month\";\r\n\t\t\t} else if (range / (constants.monthDuration * 3) <= noTicks) {\r\n\t\t\t\tthis.interval = 3;\r\n\t\t\t\tthis.intervalType = \"month\";\r\n\t\t\t} else if (range / (constants.monthDuration * 6) <= noTicks) {\r\n\t\t\t\tthis.interval = 6;\r\n\t\t\t\tthis.intervalType = \"month\";\r\n\t\t\t} else if (range / (constants.yearDuration * 1) <= noTicks) {\r\n\t\t\t\tthis.interval = 1;\r\n\t\t\t\tthis.intervalType = \"year\";\r\n\t\t\t} else if (range / (constants.yearDuration * 2) <= noTicks) {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.intervalType = \"year\";\r\n\t\t\t} else if (range / (constants.yearDuration * 4) <= noTicks) {\r\n\t\t\t\tthis.interval = 4;\r\n\t\t\t\tthis.intervalType = \"year\";\r\n\t\t\t} else {\r\n\t\t\t\tthis.interval = Math.floor(Axis.getNiceNumber(range / (noTicks - 1), true) / constants.yearDuration);\r\n\t\t\t\tthis.intervalType = \"year\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this.viewportMinimum === null || isNaN(this.viewportMinimum))\r\n\t\t\tthis.viewportMinimum = min - minDiff / 2;\r\n\r\n\t\tif (this.viewportMaximum === null || isNaN(this.viewportMaximum))\r\n\t\t\tthis.viewportMaximum = max + minDiff / 2;\r\n\r\n\r\n\t\tif (!this.valueFormatString) {\r\n\t\t\tif (isLessThanTwoDataPoints) {\r\n\t\t\t\tthis.valueFormatString = \"MMM DD YYYY HH:mm\";\r\n\t\t\t} else if (this.intervalType === \"year\") {\r\n\t\t\t\tthis.valueFormatString = \"YYYY\";\r\n\t\t\t} else if (this.intervalType === \"month\") {\r\n\t\t\t\tthis.valueFormatString = \"MMM YYYY\";\r\n\t\t\t} else if (this.intervalType === \"week\") {\r\n\t\t\t\tthis.valueFormatString = \"MMM DD YYYY\";\r\n\t\t\t} else if (this.intervalType === \"day\") {\r\n\t\t\t\tthis.valueFormatString = \"MMM DD YYYY\";\r\n\t\t\t} else if (this.intervalType === \"hour\") {\r\n\t\t\t\tthis.valueFormatString = \"hh:mm TT\";\r\n\t\t\t} else if (this.intervalType === \"minute\") {\r\n\t\t\t\tthis.valueFormatString = \"hh:mm TT\";\r\n\t\t\t} else if (this.intervalType === \"second\") {\r\n\t\t\t\tthis.valueFormatString = \"hh:mm:ss TT\";\r\n\t\t\t} else if (this.intervalType === \"millisecond\") {\r\n\t\t\t\tthis.valueFormatString = \"fff'ms'\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.intervalType = \"number\";\r\n\r\n\t\trange = Axis.getNiceNumber(range, false);\r\n\r\n\t\tif (this._options && this._options.interval)\r\n\t\t\tthis.interval = this._options.interval;\r\n\t\telse {\r\n\t\t\tthis.interval = Axis.getNiceNumber(range / (noTicks - 1), true);\r\n\t\t}\r\n\r\n\t\tif (this.viewportMinimum === null || isNaN(this.viewportMinimum)) {\r\n\t\t\tif (this.type === \"axisX\")\r\n\t\t\t\tthis.viewportMinimum = min - minDiff / 2;\r\n\t\t\telse\r\n\t\t\t\tthis.viewportMinimum = Math.floor(min / this.interval) * this.interval;\r\n\t\t}\r\n\r\n\t\tif (this.viewportMaximum === null || isNaN(this.viewportMaximum)) {\r\n\t\t\tif (this.type === \"axisX\")\r\n\t\t\t\tthis.viewportMaximum = max + minDiff / 2;\r\n\t\t\telse\r\n\t\t\t\tthis.viewportMaximum = Math.ceil(max / this.interval) * this.interval;\r\n\t\t}\r\n\r\n\t\tif (this.viewportMaximum === 0 && this.viewportMinimum === 0) {\r\n\r\n\t\t\tif (this._options.viewportMinimum === 0) {\r\n\t\t\t\tthis.viewportMaximum += 10;\r\n\t\t\t}\r\n\t\t\telse if (this._options.viewportMaximum === 0) {\r\n\t\t\t\tthis.viewportMinimum -= 10;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._options && typeof (this._options.interval) === \"undefined\") {\r\n\t\t\t\tthis.interval = Axis.getNiceNumber((this.viewportMaximum - this.viewportMinimum) / (noTicks - 1), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//Calculate minimum and maximum if not provided by the user\r\n\tif (this.minimum === null || this.maximum === null) {\r\n\t\tif (this.type === \"axisX\") {\r\n\t\t\tmin = (this.minimum !== null) ? this.minimum : this.dataInfo.min;\r\n\t\t\tmax = (this.maximum !== null) ? this.maximum : this.dataInfo.max;\r\n\r\n\t\t\tif (max - min === 0) {\r\n\t\t\t\trangePadding = typeof (this._options.interval) === \"undefined\" ? .4 : this._options.interval;\r\n\r\n\t\t\t\tmax += rangePadding;\r\n\t\t\t\tmin -= rangePadding;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.dataInfo.minDiff !== Infinity)\r\n\t\t\t\tminDiff = this.dataInfo.minDiff;\r\n\t\t\telse if (max - min > 1) {\r\n\t\t\t\tminDiff = Math.abs(max - min) * .5;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tminDiff = 1;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.type === \"axisY\") {\r\n\r\n\t\t\tmin = (this.minimum !== null) ? this.minimum : this.dataInfo.min;\r\n\t\t\tmax = (this.maximum !== null) ? this.maximum : this.dataInfo.max;\r\n\r\n\t\t\tif (!isFinite(min) && !isFinite(max)) {\r\n\t\t\t\tmax = typeof (this._options.interval) === \"undefined\" ? -Infinity : this._options.interval;\r\n\t\t\t\tmin = 0;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tif (min === 0 && max === 0) {// When all dataPoints are zero\r\n\t\t\t\t\tmax += 9;\r\n\t\t\t\t\tmin = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (max - min === 0) {// When there is only a single dataPoint or when all dataPoints have same Y Value\r\n\t\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max) * .01), 5);\r\n\t\t\t\t\tmax += rangePadding;\r\n\t\t\t\t\tmin -= rangePadding;\r\n\t\t\t\t}\r\n\t\t\t\telse if (min > max) {\r\n\t\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), 5);\r\n\r\n\t\t\t\t\tif (max >= 0)\r\n\t\t\t\t\t\tmin = max - rangePadding;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tmax = min + rangePadding;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\trangePadding = Math.min(Math.abs(Math.abs(max - min) * .01), .05);\r\n\r\n\t\t\t\t\tif (max !== 0)\r\n\t\t\t\t\t\tmax += rangePadding;\r\n\t\t\t\t\tif (min !== 0)\r\n\t\t\t\t\t\tmin -= rangePadding;\r\n\t\t\t\t}\r\n\r\n\t\t\tif (this.dataInfo.minDiff !== Infinity)\r\n\t\t\t\tminDiff = this.dataInfo.minDiff;\r\n\t\t\telse if (max - min > 1) {\r\n\t\t\t\tminDiff = Math.abs(max - min) * .5;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tminDiff = 1;\r\n\t\t\t}\r\n\r\n\r\n\t\t\t//Apply includeZero\r\n\t\t\tif (this.includeZero && (this.minimum === null || isNaN(this.minimum))) {\r\n\t\t\t\tif (min > 0)\r\n\t\t\t\t\tmin = 0;\r\n\t\t\t}\r\n\t\t\tif (this.includeZero && (this.maximum === null || isNaN(this.maximum))) {\r\n\t\t\t\tif (max < 0)\r\n\t\t\t\t\tmax = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trange = max - min;\r\n\r\n\t\tif (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\") {\r\n\r\n\t\t\tif (this.minimum === null || isNaN(this.minimum))\r\n\t\t\t\tthis.minimum = min - minDiff / 2;\r\n\r\n\t\t\tif (this.maximum === null || isNaN(this.maximum))\r\n\t\t\t\tthis.maximum = max + minDiff / 2;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.intervalType = \"number\";\r\n\r\n\t\t\tif (this.minimum === null) {\r\n\t\t\t\tif (this.type === \"axisX\")\r\n\t\t\t\t\tthis.minimum = min - minDiff / 2;\r\n\t\telse\r\n\t\t\tthis.minimum = Math.floor(min / this.interval) * this.interval;\r\n\r\n\t\t\t\tthis.minimum = Math.min(this.minimum, this.sessionVariables.viewportMinimum === null || isNaN(this.sessionVariables.viewportMinimum) ? Infinity : this.sessionVariables.viewportMinimum);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.maximum === null) {\r\n\t\t\t\tif (this.type === \"axisX\")\r\n\t\t\t\t\tthis.maximum = max + minDiff / 2;\r\n\t\telse\r\n\t\t\tthis.maximum = Math.ceil(max / this.interval) * this.interval;\r\n\r\n\t\t\t\tthis.maximum = Math.max(this.maximum, this.sessionVariables.viewportMaximum === null || isNaN(this.sessionVariables.viewportMaximum) ? -Infinity : this.sessionVariables.viewportMaximum);\r\n\t\t\t}\r\n\r\n\t\t//var nfrac = Math.max(-Math.floor(Math.log(d)/Math.LN10), 0); //number of fractional digits to show\r\n\r\n\r\n\t\tif (this.maximum === 0 && this.minimum === 0) {\r\n\r\n\t\t\tif (this._options.minimum === 0) {\r\n\t\t\t\tthis.maximum += 10;\r\n\t\t\t}\r\n\t\t\telse if (this._options.maximum === 0) {\r\n\t\t\t\tthis.minimum -= 10;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\tthis.viewportMinimum = Math.max(this.viewportMinimum, this.minimum);\r\n\tthis.viewportMaximum = Math.min(this.viewportMaximum, this.maximum);\r\n\r\n\tif (this.type === \"axisX\" && this.chart.plotInfo.axisXValueType === \"dateTime\")\r\n\t\tthis.intervalStartPosition = this.getLabelStartPoint(new Date(this.viewportMinimum), this.intervalType, this.interval);\r\n\telse\r\n\t\tthis.intervalStartPosition = Math.floor((this.viewportMinimum + (this.interval * .2)) / this.interval) * this.interval;\r\n\r\n\t//Set valueFormatString\r\n\tif (!this.valueFormatString) {\r\n\t\tthis.valueFormatString = \"#,##0.##\";\r\n\r\n\t\trange = Math.abs(this.viewportMaximum - this.viewportMinimum);\r\n\r\n\t\tif (range < 1) {\r\n\t\t\tvar numberOfDecimals = Math.floor(Math.abs(Math.log(range) / Math.LN10)) + 2;\r\n\r\n\t\t\tif (isNaN(numberOfDecimals) || !isFinite(numberOfDecimals))\r\n\t\t\t\tnumberOfDecimals = 2;\r\n\r\n\t\t\tif (numberOfDecimals > 2) {\r\n\t\t\t\tfor (var i = 0; i < numberOfDecimals - 2; i++)\r\n\t\t\t\t\tthis.valueFormatString += \"#\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//if (isDebugMode && window.console) {\r\n\t//    window.console.log(this.type + \": Min = \" + this.viewportMinimum);\r\n\t//    window.console.log(this.type + \": Max = \" + this.viewportMaximum);\r\n\t//    window.console.log(this.type + \": Interval = \" + this.interval);\r\n\t//}\r\n}\r\n\r\nAxis.getNiceNumber = function (x, round) {\r\n\r\n\tvar exp = Math.floor(Math.log(x) / Math.LN10);\r\n\tvar f = x / Math.pow(10, exp);\r\n\tvar nf;\r\n\r\n\tif (round) {\r\n\t\tif (f < 1.5)\r\n\t\t\tnf = 1;\r\n\t\telse if (f < 3)\r\n\t\t\tnf = 2;\r\n\t\telse if (f < 7)\r\n\t\t\tnf = 5;\r\n\t\telse\r\n\t\t\tnf = 10;\r\n\t}\r\n\telse {\r\n\t\tif (f <= 1)\r\n\t\t\tnf = 1;\r\n\t\telse if (f <= 2)\r\n\t\t\tnf = 2;\r\n\t\telse if (f <= 5)\r\n\t\t\tnf = 5;\r\n\t\telse nf = 10;\r\n\t}\r\n\r\n\treturn Number((nf * Math.pow(10, exp)).toFixed(20));\r\n}\r\n\r\nAxis.prototype.getLabelStartPoint = function () {\r\n\r\n\tvar intervalInMilliseconds = convertToNumber(this.interval, this.intervalType);\r\n\tvar minimum = Math.floor((this.viewportMinimum) / intervalInMilliseconds) * intervalInMilliseconds;\r\n\tvar dateTime = new Date(minimum);\r\n\r\n\tif (this.intervalType === \"millisecond\") {\r\n\t\t//millisecond = dateTime.getMilliSecond();\r\n\t\t//millisecond = Math.floor((millisecond + this.interval) / this.interval) * this.interval;\r\n\t}\r\n\telse if (this.intervalType === \"second\") {\r\n\t\tif (dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setSeconds(dateTime.getSeconds() + 1);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"minute\") {\r\n\t\tif (dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setMinutes(dateTime.getMinutes() + 1);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"hour\") {\r\n\t\tif (dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setHours(dateTime.getHours() + 1);\r\n\t\t\tdateTime.setMinutes(0);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"day\") {\r\n\t\tif (dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setDate(dateTime.getDate() + 1);\r\n\t\t\tdateTime.setHours(0);\r\n\t\t\tdateTime.setMinutes(0);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"week\") {\r\n\t\tif (dateTime.getDay() > 0 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setDate(dateTime.getDate() + (7 - dateTime.getDay()));\r\n\t\t\tdateTime.setHours(0);\r\n\t\t\tdateTime.setMinutes(0);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"month\") {\r\n\t\tif (dateTime.getDate() > 1 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setMonth(dateTime.getMonth() + 1);\r\n\t\t\tdateTime.setDate(1);\r\n\t\t\tdateTime.setHours(0);\r\n\t\t\tdateTime.setMinutes(0);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\telse if (this.intervalType === \"year\") {\r\n\t\tif (dateTime.getMonth() > 0 || dateTime.getDate() > 1 || dateTime.getHours() > 0 || dateTime.getMinutes() > 0 || dateTime.getSeconds() > 0 || dateTime.getMilliseconds() > 0) {\r\n\t\t\tdateTime.setFullYear(dateTime.getFullYear() + 1);\r\n\t\t\tdateTime.setMonth(0);\r\n\t\t\tdateTime.setDate(1);\r\n\t\t\tdateTime.setHours(0);\r\n\t\t\tdateTime.setMinutes(0);\r\n\t\t\tdateTime.setSeconds(0);\r\n\t\t\tdateTime.setMilliseconds(0);\r\n\t\t}\r\n\t}\r\n\r\n\treturn dateTime;\r\n}\r\n\r\nexport default Axis;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}