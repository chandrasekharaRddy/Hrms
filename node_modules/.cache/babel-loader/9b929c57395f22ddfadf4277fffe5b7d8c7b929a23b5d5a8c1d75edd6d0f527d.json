{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Working Hours\")])], -1 /* HOISTED */);\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"InTime1\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"OutTime1\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"InTime2\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"OutTime2\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"table\", _hoisted_1, [_createCommentVNode(\" Working Hours Table \"), _hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.workingHours, (hour, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", {\n      onClick: $event => _ctx.getDate(hour.Date)\n    }, _toDisplayString(hour.Date), 9 /* TEXT, PROPS */, _hoisted_3), _createElementVNode(\"td\", null, _toDisplayString(hour.WorkingHours), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"div\", null, [_createCommentVNode(\" Goals Table \"), _createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.goals, (goal, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(goal.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.Date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.InTime1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.OutTime1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.InTime2), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.OutTime2), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_createCommentVNode","_hoisted_2","_createElementBlock","_Fragment","_renderList","$data","workingHours","hour","index","key","onClick","$event","_ctx","getDate","Date","_hoisted_3","_toDisplayString","WorkingHours","_hoisted_4","_hoisted_5","goals","goal","name","InTime1","OutTime1","InTime2","OutTime2"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <!-- Working Hours Table -->\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(hour, index) in workingHours\" :key=\"index\">\r\n          <td @click=\"getDate(hour.Date)\">{{ hour.Date }}</td>\r\n          <td>{{ hour.WorkingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <!-- Goals Table -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime1</th>\r\n          <th>OutTime1</th>\r\n          <th>InTime2</th>\r\n          <th>OutTime2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n          <td>{{ goal.name }}</td>\r\n          <td>{{ goal.Date }}</td>\r\n          <td>{{ goal.InTime1 }}</td>\r\n          <td>{{ goal.OutTime1 }}</td>\r\n          <td>{{ goal.InTime2 }}</td>\r\n          <td>{{ goal.OutTime2 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n      goals: []\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  watch: {\r\n    userData: {\r\n      handler(newValue) {\r\n        if (Array.isArray(newValue)) {\r\n          this.workingHours = newValue.map((detail) => ({\r\n            Date: detail.Date,\r\n            WorkingHours: this.calculateWorkingHours(detail.InTime1, detail.OutTime1, detail.InTime2, detail.OutTime2),\r\n          }));\r\n\r\n          this.goals = newValue.map((user) => ({\r\n            name: user.name,\r\n            Date: user.Date,\r\n            InTime1: user.InTime1,\r\n            OutTime1: user.OutTime1,\r\n            InTime2: user.InTime2,\r\n            OutTime2: user.OutTime2,\r\n          }));\r\n        } else {\r\n          this.workingHours = [];\r\n          this.goals = [];\r\n        }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    calculateWorkingHours(InTime1, OutTime1, InTime2, OutTime2) {\r\n\r\n      const inTime1 = new Date(`2000-01-01T${InTime1}`);\r\n      const outTime1 = new Date(`2000-01-01T${OutTime1}`);\r\n      const inTime2 = new Date(`2000-01-01T${InTime2}`);\r\n      const outTime2 = new Date(`2000-01-01T${OutTime2}`);\r\n      const diff1 = outTime1 - inTime1;\r\n      const diff2 = outTime2 - inTime2;\r\n      const hours1 = diff1 / (1000 * 60 * 60);\r\n      const hours2 = diff2 / (1000 * 60 * 60);\r\n      const totalHours = hours1 + hours2;\r\n      return totalHours.toFixed(2);\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EAEWA,KAAK,EAAC;AAAsB;gCAEjCC,mBAAA,CAKQ;EALDD,KAAK,EAAC;AAAY,I,aACvBC,mBAAA,CAGK,a,aAFHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAsB,YAAlB,eAAa,E;;;EAahBD,KAAK,EAAC;AAAsB;gCACjCC,mBAAA,CASQ;EATDD,KAAK,EAAC;AAAY,I,aACvBC,mBAAA,CAOK,a,aANHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAiB,YAAb,UAAQ,E;;6DA3BpBA,mBAAA,CAgBM,cAfJA,mBAAA,CAcQ,SAdRC,UAcQ,GAbNC,mBAAA,yBAA4B,EAC5BC,UAKQ,EACRH,mBAAA,CAKQ,iB,kBAJNI,mBAAA,CAGKC,SAAA,QAAAC,WAAA,CAHuBC,KAAA,CAAAC,YAAY,GAA5BC,IAAI,EAAEC,KAAK;yBAAvBN,mBAAA,CAGK;MAHsCO,GAAG,EAAED;IAAK,IACnDV,mBAAA,CAAoD;MAA/CY,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACN,IAAI,CAACO,IAAI;wBAAMP,IAAI,CAACO,IAAI,wBAAAC,UAAA,GAC5CjB,mBAAA,CAAgC,YAAAkB,gBAAA,CAAzBT,IAAI,CAACU,YAAY,iB;wCAKhCnB,mBAAA,CAwBM,cAvBJE,mBAAA,iBAAoB,EACpBF,mBAAA,CAqBQ,SArBRoB,UAqBQ,GApBNC,UASQ,EACRrB,mBAAA,CASQ,iB,kBARNI,mBAAA,CAOKC,SAAA,QAAAC,WAAA,CAPuBC,KAAA,CAAAe,KAAK,GAArBC,IAAI,EAAEb,KAAK;yBAAvBN,mBAAA,CAOK;MAP+BO,GAAG,EAAED;IAAK,IAC5CV,mBAAA,CAAwB,YAAAkB,gBAAA,CAAjBK,IAAI,CAACC,IAAI,kBAChBxB,mBAAA,CAAwB,YAAAkB,gBAAA,CAAjBK,IAAI,CAACP,IAAI,kBAChBhB,mBAAA,CAA2B,YAAAkB,gBAAA,CAApBK,IAAI,CAACE,OAAO,kBACnBzB,mBAAA,CAA4B,YAAAkB,gBAAA,CAArBK,IAAI,CAACG,QAAQ,kBACpB1B,mBAAA,CAA2B,YAAAkB,gBAAA,CAApBK,IAAI,CAACI,OAAO,kBACnB3B,mBAAA,CAA4B,YAAAkB,gBAAA,CAArBK,IAAI,CAACK,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}