{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"table table-bordered\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"UserId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Role\")])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" User Table \"), $data.openTable && $options.userData.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.userData, user => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: user.id\n    }, [_createCommentVNode(\" Check data bindings \"), _createElementVNode(\"td\", null, _toDisplayString(user.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.role), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Add a message if no data is available \"), $data.openTable && $options.userData.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"No user data available.\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","$data","openTable","$options","userData","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","user","key","id","_toDisplayString","name","email","role","_hoisted_4"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<!-- <template>\r\n  <div class=\"container\">\r\n    \r\n    <table class=\"table table-bordered\" v-if=\"openTable\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in userData\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>{{ user.role }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div>\r\n    \r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in uniqueEmployeeData\" :key=\"index\" @click=\"selectEmployee(employee)\">\r\n          <td>{{ employee.id }}</td>\r\n          <td>{{ employee.name }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"attendance\">\r\n  \r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime</th>\r\n          <th>OutTime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-if=\"selectedEmployee\">\r\n          <td>{{ selectedEmployee.id }}</td>\r\n          <td>{{ selectedEmployee.name }}</td>\r\n          <td>{{ selectedEmployee.attendance.date }}</td>\r\n          <td>{{ selectedEmployee.attendance.inTime }}</td>\r\n          <td>{{ selectedEmployee.attendance.outTime }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      openTable:true\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      const userData = this.$store.getters.getUserData.user;\r\n      console.log('userData:', userData); \r\n      return userData;\r\n    },\r\n    employeeData() {\r\n      return this.$store.getters.getUserData.employeeData;\r\n    },\r\n    uniqueEmployeeData() {\r\n      const uniqueIds = new Set();\r\n      return this.employeeData.filter(employee => {\r\n        if (!uniqueIds.has(employee.id)) {\r\n          uniqueIds.add(employee.id);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    selectEmployee(employee) {\r\n      this.selectedEmployee = employee;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style> -->\r\n\r\n<template>\r\n  <div class=\"container\">\r\n    <!-- User Table -->\r\n    <table class=\"table table-bordered\" v-if=\"openTable && userData.length > 0\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in userData\" :key=\"user.id\">\r\n          <!-- Check data bindings -->\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>{{ user.role }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <!-- Add a message if no data is available -->\r\n    <div v-if=\"openTable && userData.length === 0\">No user data available.</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      openTable: true\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      const userData = this.$store.getters.getUserData.user;\r\n      console.log('userData:', userData);\r\n      return userData;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your CSS styles */\r\n</style>\r\n"],"mappings":";;EA2GOA,KAAK,EAAC;AAAW;;;EAEbA,KAAK,EAAC;;gCACXC,mBAAA,CAOQ;EAPDD,KAAK,EAAC;AAAY,I,aACvBC,mBAAA,CAKK,a,aAJHA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAa,YAAT,MAAI,E;;;;;uBARhBC,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,mBAAA,gBAAmB,EACuBC,KAAA,CAAAC,SAAS,IAAIC,QAAA,CAAAC,QAAQ,CAACC,MAAM,Q,cAAtEP,mBAAA,CAkBQ,SAlBRQ,UAkBQ,GAjBNC,UAOQ,EACRV,mBAAA,CAQQ,iB,kBAPNC,mBAAA,CAMKU,SAAA,QAAAC,WAAA,CANcN,QAAA,CAAAC,QAAQ,EAAhBM,IAAI;yBAAfZ,mBAAA,CAMK;MANyBa,GAAG,EAAED,IAAI,CAACE;QACtCZ,mBAAA,yBAA4B,EAC5BH,mBAAA,CAAsB,YAAAgB,gBAAA,CAAfH,IAAI,CAACE,EAAE,kBACdf,mBAAA,CAAwB,YAAAgB,gBAAA,CAAjBH,IAAI,CAACI,IAAI,kBAChBjB,mBAAA,CAAyB,YAAAgB,gBAAA,CAAlBH,IAAI,CAACK,KAAK,kBACjBlB,mBAAA,CAAwB,YAAAgB,gBAAA,CAAjBH,IAAI,CAACM,IAAI,iB;2EAItBhB,mBAAA,2CAA8C,EACnCC,KAAA,CAAAC,SAAS,IAAIC,QAAA,CAAAC,QAAQ,CAACC,MAAM,U,cAAvCP,mBAAA,CAA4E,OAAAmB,UAAA,EAA7B,yBAAuB,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}