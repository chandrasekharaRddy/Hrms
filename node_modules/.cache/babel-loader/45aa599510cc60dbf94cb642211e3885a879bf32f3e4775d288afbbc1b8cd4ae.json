{"ast":null,"code":"export default {\n  data() {\n    return {\n      workingHours: [],\n      goals: [],\n      filteredGoals: [],\n      selectedDate: null,\n      dateVisible: true\n    };\n  },\n  computed: {\n    userData() {\n      return this.$store.getters.getUserData;\n    }\n  },\n  watch: {\n    userData: {\n      handler(newValue) {\n        if (Array.isArray(newValue)) {\n          newValue.forEach(user => {\n            this.user.id = user.id;\n            this.user.name = user.name;\n            this.user.email = user.email;\n            this.user.role = user.role;\n          });\n          this.goals = newValue.map(user => ({\n            name: user.fullName,\n            user: user.id,\n            email: user.email,\n            role: user.role\n          }));\n        } else {\n          console.log('error');\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    calculateWorkingHours(...timePairs) {\n      let totalHours = 0;\n      for (let i = 0; i < timePairs.length; i += 2) {\n        const inTime = new Date(`2000-01-01T${timePairs[i]}`);\n        const outTime = new Date(`2000-01-01T${timePairs[i + 1]}`);\n        const diff = outTime - inTime;\n        const hours = diff / (1000 * 60 * 60);\n        totalHours += hours;\n      }\n      return totalHours.toFixed(2);\n    },\n    getDate(date) {\n      if (this.selectedDate === date) {\n        this.selectedDate = null;\n      } else {\n        this.selectedDate = date;\n        this.filteredGoals = this.goals.filter(goal => goal.Date === date);\n        this.dateVisible = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","workingHours","goals","filteredGoals","selectedDate","dateVisible","computed","userData","$store","getters","getUserData","watch","handler","newValue","Array","isArray","forEach","user","id","name","email","role","map","fullName","console","log","immediate","methods","calculateWorkingHours","timePairs","totalHours","i","length","inTime","Date","outTime","diff","hours","toFixed","getDate","date","filter","goal"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n     <div class=\"container\">\r\n      <table class=\"table1\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>EmployeeId</th>\r\n            <th>EmployeeName</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{{ employee.id}}</td>\r\n            <td>{{employee.name}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <table class=\"table2\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>UserId</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{{user.id }}</td>\r\n            <td>{{user.name}}</td>\r\n            <td>{{user.email}}</td>\r\n            <td>{{user.role}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <br>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <table v-if=\"dateVisible\" class=\"table table-bordered\">\r\n      <!-- Working Hours Table -->\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(hour, index) in workingHours\" :key=\"index\">\r\n          <td @click=\"getDate(hour.Date)\">{{ hour.Date }}</td>\r\n          <td>{{ hour.WorkingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <!-- Goals Table -->\r\n    <table v-if=\"selectedDate\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime</th>\r\n          <th>OutTime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in filteredGoals\" :key=\"index\">\r\n          <td>{{ goal.fullName }}</td>\r\n          <td>{{ goal.id }}</td>\r\n          <td>{{ goal.email }}</td>\r\n          <td>{{ goal.role }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n      goals: [],\r\n      filteredGoals: [],\r\n      selectedDate: null,\r\n      dateVisible: true\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  watch: {\r\n    userData: {\r\n      handler(newValue) {\r\n        if (Array.isArray(newValue)) {\r\n          newValue.forEach(user => {\r\n            this.user.id = user.id;\r\n            this.user.name = user.name;\r\n            this.user.email = user.email;\r\n            this.user.role = user.role;\r\n          });\r\n          this.goals = newValue.map((user) => ({\r\n            name: user.fullName,\r\n            user: user.id,\r\n            email: user.email,\r\n            role: user.role,\r\n          }));\r\n        } else {\r\n          console.log('error')\r\n        }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    calculateWorkingHours(...timePairs) {\r\n      let totalHours = 0;\r\n      for (let i = 0; i < timePairs.length; i += 2) {\r\n        const inTime = new Date(`2000-01-01T${timePairs[i]}`);\r\n        const outTime = new Date(`2000-01-01T${timePairs[i + 1]}`);\r\n        const diff = outTime - inTime;\r\n        const hours = diff / (1000 * 60 * 60);\r\n        totalHours += hours;\r\n      }\r\n      return totalHours.toFixed(2);\r\n    },\r\n    getDate(date) {\r\n      if (this.selectedDate === date) {\r\n        this.selectedDate = null; \r\n      } else {\r\n        this.selectedDate = date;\r\n        this.filteredGoals = this.goals.filter((goal) => goal.Date === date);\r\n        this.dateVisible = false;\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AA6FA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE,EAAE;MACTC,aAAa,EAAE,EAAE;MACjBC,YAAY,EAAE,IAAI;MAClBC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,WAAW;IACxC;EACF,CAAC;EACDC,KAAK,EAAE;IACLJ,QAAQ,EAAE;MACRK,OAAOA,CAACC,QAAQ,EAAE;QAChB,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;UAC3BA,QAAQ,CAACG,OAAO,CAACC,IAAG,IAAK;YACvB,IAAI,CAACA,IAAI,CAACC,EAAC,GAAID,IAAI,CAACC,EAAE;YACtB,IAAI,CAACD,IAAI,CAACE,IAAG,GAAIF,IAAI,CAACE,IAAI;YAC1B,IAAI,CAACF,IAAI,CAACG,KAAI,GAAIH,IAAI,CAACG,KAAK;YAC5B,IAAI,CAACH,IAAI,CAACI,IAAG,GAAIJ,IAAI,CAACI,IAAI;UAC5B,CAAC,CAAC;UACF,IAAI,CAACnB,KAAI,GAAIW,QAAQ,CAACS,GAAG,CAAEL,IAAI,KAAM;YACnCE,IAAI,EAAEF,IAAI,CAACM,QAAQ;YACnBN,IAAI,EAAEA,IAAI,CAACC,EAAE;YACbE,KAAK,EAAEH,IAAI,CAACG,KAAK;YACjBC,IAAI,EAAEJ,IAAI,CAACI;UACb,CAAC,CAAC,CAAC;QACL,OAAO;UACLG,OAAO,CAACC,GAAG,CAAC,OAAO;QACrB;MACF,CAAC;MACDC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,qBAAqBA,CAAC,GAAGC,SAAS,EAAE;MAClC,IAAIC,UAAS,GAAI,CAAC;MAClB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIF,SAAS,CAACG,MAAM,EAAED,CAAA,IAAK,CAAC,EAAE;QAC5C,MAAME,MAAK,GAAI,IAAIC,IAAI,CAAE,cAAaL,SAAS,CAACE,CAAC,CAAE,EAAC,CAAC;QACrD,MAAMI,OAAM,GAAI,IAAID,IAAI,CAAE,cAAaL,SAAS,CAACE,CAAA,GAAI,CAAC,CAAE,EAAC,CAAC;QAC1D,MAAMK,IAAG,GAAID,OAAM,GAAIF,MAAM;QAC7B,MAAMI,KAAI,GAAID,IAAG,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC;QACrCN,UAAS,IAAKO,KAAK;MACrB;MACA,OAAOP,UAAU,CAACQ,OAAO,CAAC,CAAC,CAAC;IAC9B,CAAC;IACDC,OAAOA,CAACC,IAAI,EAAE;MACZ,IAAI,IAAI,CAACpC,YAAW,KAAMoC,IAAI,EAAE;QAC9B,IAAI,CAACpC,YAAW,GAAI,IAAI;MAC1B,OAAO;QACL,IAAI,CAACA,YAAW,GAAIoC,IAAI;QACxB,IAAI,CAACrC,aAAY,GAAI,IAAI,CAACD,KAAK,CAACuC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACR,IAAG,KAAMM,IAAI,CAAC;QACpE,IAAI,CAACnC,WAAU,GAAI,KAAK;MAC1B;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}