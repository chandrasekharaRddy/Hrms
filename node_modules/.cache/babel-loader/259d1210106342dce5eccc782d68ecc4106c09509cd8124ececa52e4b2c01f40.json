{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      selectedEmployee: null,\n      workingHours: false,\n      employeeTable: true\n    };\n  },\n  computed: {\n    userDetails() {\n      return this.$store.state.userData && this.$store.state.userData.length > 0 ? this.$store.state.userData[0] : null;\n    },\n    employeeList() {\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\n        const groupedEmployees = this.$store.state.userData.reduce((acc, employee) => {\n          const key = employee.empId;\n          if (!acc[key]) {\n            acc[key] = {\n              empId: employee.empId,\n              empName: employee.empName,\n              empRole: employee.empRole,\n              attendances: []\n            };\n          }\n          acc[key].attendances.push(employee);\n          return acc;\n        }, {});\n        const uniqueEmployees = Object.values(groupedEmployees);\n        return uniqueEmployees;\n      }\n      return [];\n    },\n    totalWorkingTime() {\n      const totalWorkingTimePerDate = {};\n      this.employeeList.forEach(employee => {\n        employee.attendances.forEach(attendance => {\n          if (attendance.inTime && attendance.outTime) {\n            const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\n            const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\n            const diff = Math.abs(outtimeDate - intimeDate);\n            const hours = Math.floor(diff / (1000 * 60 * 60));\n            const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n            const totalHours = hours + minutes / 60; // Convert minutes to hours\n            if (!totalWorkingTimePerDate[attendance.date]) {\n              totalWorkingTimePerDate[attendance.date] = {\n                hours: 0,\n                minutes: 0\n              };\n            }\n            totalWorkingTimePerDate[attendance.date].hours += Math.floor(totalHours);\n            totalWorkingTimePerDate[attendance.date].minutes += minutes % 60;\n          }\n        });\n      });\n      // Adjust for minutes exceeding 60\n      Object.keys(totalWorkingTimePerDate).forEach(date => {\n        const totalHours = totalWorkingTimePerDate[date].hours;\n        const totalMinutes = totalWorkingTimePerDate[date].minutes;\n        totalWorkingTimePerDate[date].hours += Math.floor(totalMinutes / 60);\n        totalWorkingTimePerDate[date].minutes = totalMinutes % 60;\n      });\n      return totalWorkingTimePerDate;\n    }\n  },\n  methods: {\n    showEmployeeDetails(employee) {\n      console.log(\"Selected Employee:\", employee);\n      this.selectedEmployee = employee;\n      this.workingHours = true;\n      this.employeeTable = false;\n    }\n  }\n};","map":{"version":3,"names":["data","selectedEmployee","workingHours","employeeTable","computed","userDetails","$store","state","userData","length","employeeList","groupedEmployees","reduce","acc","employee","key","empId","empName","empRole","attendances","push","uniqueEmployees","Object","values","totalWorkingTime","totalWorkingTimePerDate","forEach","attendance","inTime","outTime","intimeDate","Date","outtimeDate","diff","Math","abs","hours","floor","minutes","totalHours","date","keys","totalMinutes","methods","showEmployeeDetails","console","log"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- User Table -->\r\n    <table v-if=\"userDetails\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\" id=\"tbl\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ userDetails.userId }}</td>\r\n          <td>{{ userDetails.userName }}</td>\r\n          <td>{{ userDetails.email }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <!-- Employee Table -->\r\n    <div v-if=\"employeeTable\">\r\n      <table v-if=\"employeeList && employeeList.length > 0\" class=\"table table-bordered\" id=\"tbl\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>EmployeeId</th>\r\n            <th>EmployeeName</th>\r\n            <th>EmployeeRole</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(employee, index) in employeeList\" :key=\"index\" @click=\"showEmployeeDetails(employee)\">\r\n            <td>{{ employee.empId }}</td>\r\n            <td>{{ employee.empName }}</td>\r\n            <td>{{employee.empRole}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <!-- Working Hours Table -->\r\n  <div v-if=\"workingHours\">\r\n    <table class=\"table table-bordered\" id=\"tbl\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Total Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(totalTime, date) in totalWorkingTime\" :key=\"date\">\r\n          <td>{{ date }}</td>\r\n          <td>{{ totalTime.hours }} hours {{ totalTime.minutes }} minutes</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <!-- Employee Details Table -->\r\n  <div v-if=\"selectedEmployee\">\r\n    <table class=\"table table-bordered\" id=\"tbl\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>Date</th>\r\n          <th>Intime</th>\r\n          <th>Outtime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(attendance, index) in selectedEmployee.attendances\" :key=\"index\">\r\n          <td>{{ selectedEmployee.empId }}</td>\r\n          <td>{{ attendance.date }}</td>\r\n          <td>{{ attendance.inTime }}</td>\r\n          <td>{{ attendance.outTime }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      workingHours: false,\r\n      employeeTable: true\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n        const groupedEmployees = this.$store.state.userData.reduce((acc, employee) => {\r\n          const key = employee.empId;\r\n          if (!acc[key]) {\r\n            acc[key] = {\r\n              empId: employee.empId,\r\n              empName: employee.empName,\r\n              empRole: employee.empRole,\r\n              attendances: []\r\n            };\r\n          }\r\n          acc[key].attendances.push(employee);\r\n          return acc;\r\n        }, {});\r\n        const uniqueEmployees = Object.values(groupedEmployees);\r\n        return uniqueEmployees;\r\n      }\r\n      return [];\r\n    },\r\n    totalWorkingTime() {\r\n      const totalWorkingTimePerDate = {};\r\n      this.employeeList.forEach(employee => {\r\n        employee.attendances.forEach(attendance => {\r\n          if (attendance.inTime && attendance.outTime) {\r\n            const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\r\n            const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\r\n            const diff = Math.abs(outtimeDate - intimeDate);\r\n            const hours = Math.floor(diff / (1000 * 60 * 60));\r\n            const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n            const totalHours = hours + minutes / 60; // Convert minutes to hours\r\n            if (!totalWorkingTimePerDate[attendance.date]) {\r\n              totalWorkingTimePerDate[attendance.date] = { hours: 0, minutes: 0 };\r\n            }\r\n            totalWorkingTimePerDate[attendance.date].hours += Math.floor(totalHours);\r\n            totalWorkingTimePerDate[attendance.date].minutes += minutes % 60;\r\n          }\r\n        });\r\n      });\r\n      // Adjust for minutes exceeding 60\r\n      Object.keys(totalWorkingTimePerDate).forEach(date => {\r\n        const totalHours = totalWorkingTimePerDate[date].hours;\r\n        const totalMinutes = totalWorkingTimePerDate[date].minutes;\r\n        totalWorkingTimePerDate[date].hours += Math.floor(totalMinutes / 60);\r\n        totalWorkingTimePerDate[date].minutes = totalMinutes % 60;\r\n      });\r\n      return totalWorkingTimePerDate;\r\n    }\r\n  },\r\n  methods: {\r\n    showEmployeeDetails(employee) {\r\n      console.log(\"Selected Employee:\", employee);\r\n      this.selectedEmployee = employee;\r\n      this.workingHours = true;\r\n      this.employeeTable = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n#tbl tr:nth-child(even) {\r\n  background: #ccc;\r\n}\r\n\r\n#tbl tr:hover td {\r\n  background: #839192;\r\n  color: #000;\r\n  transition: all 0.3s ease-in;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}