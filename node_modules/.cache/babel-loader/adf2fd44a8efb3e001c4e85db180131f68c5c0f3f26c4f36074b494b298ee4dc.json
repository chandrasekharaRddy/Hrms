{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      id: \"\",\n      name: \"\",\n      leave: \"\",\n      date1: \"\",\n      date2: \"\",\n      email: \"\",\n      reason: \"\",\n      Status: \"\",\n      daysDifference: \"\",\n      goals: [],\n      totallength: '',\n      leavehistory: '',\n      month: new Date().toISOString().slice(0, 7),\n      datesLength: 0\n    };\n  },\n  computed: {\n    daysInMonth() {\n      const [year, month] = this.month.split('-');\n      return new Date(year, month, 0).getDate();\n    },\n    userDetails() {\n      return this.$store.state.userData && this.$store.state.userData.length > 0 ? this.$store.state.userData[0] : null;\n    },\n    getteam() {\n      return this.$store.getters.getTeamMembers;\n    },\n    employeeList() {\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\n        const userId = this.userDetails ? this.userDetails.userId : null;\n        if (userId) {\n          const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\n          const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\n            const key = employee.empId;\n            if (!acc[key]) {\n              acc[key] = {\n                empId: employee.empId,\n                empName: employee.empName,\n                empRole: employee.empRole,\n                attendances: []\n              };\n            }\n            acc[key].attendances.push(employee);\n            return acc;\n          }, {});\n          const uniqueEmployees = Object.values(groupedEmployees);\n          return uniqueEmployees;\n        }\n      }\n      return [];\n    },\n    workingHoursData() {\n      const attendanceDates = {};\n      this.employeeList.forEach(employee => {\n        employee.attendances.forEach(attendance => {\n          if (!attendanceDates[attendance.date]) {\n            attendanceDates[attendance.date] = {\n              date: attendance.date,\n              year: new Date(attendance.date).getFullYear(),\n              month: new Date(attendance.date).getMonth() + 1,\n              totalDifference: 0\n            };\n          }\n          this.datesLength = Object.keys(attendanceDates).length;\n          if (attendance.outTime) {\n            const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\n            const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\n            const diff = Math.abs(outtimeDate - intimeDate);\n            attendanceDates[attendance.date].totalDifference += diff;\n          }\n        });\n      });\n      const result = Object.values(attendanceDates).map(dateInfo => {\n        const hours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\n        const minutes = Math.floor(dateInfo.totalDifference % (1000 * 60 * 60) / (1000 * 60));\n        return {\n          date: dateInfo.date,\n          totalHours: hours,\n          totalMinutes: minutes\n        };\n      });\n      return result;\n    },\n    averageHours() {\n      if (this.workingHoursData.length > 0) {\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\n        const totalInMinutes = totalHours * 60 + totalMinutes;\n        const averageInMinutes = totalInMinutes / this.workingHoursData.length;\n        const averageHours = Math.floor(averageInMinutes / 60);\n        const averageMinutes = Math.floor(averageInMinutes % 60);\n        const totallength = this.workingHoursData.length;\n        console.log(totallength);\n        return `${averageHours} hrs ${averageMinutes} mins`;\n      }\n      return null;\n    }\n  },\n  watch: {\n    date1(newValue) {\n      this.calculateDaysDifference();\n      console.log(newValue);\n    },\n    date2(newValue) {\n      this.calculateDaysDifference();\n      console.log(newValue);\n    },\n    month(newMonth) {\n      this.updateDatesLength();\n      console.log(newMonth);\n    }\n  },\n  created() {\n    this.getHistoryTable();\n    this.updateDatesLength();\n  },\n  methods: {\n    getCurrentDate() {\n      const today = new Date();\n      const year = today.getFullYear();\n      let month = today.getMonth() + 1;\n      let day = today.getDate();\n      if (month < 10) {\n        month = '0' + month;\n      }\n      if (day < 10) {\n        day = '0' + day;\n      }\n      return `${year}-${month}-${day}`;\n    },\n    MonthChange() {\n      this.updateDatesLength();\n    },\n    updateDatesLength() {\n      const [year, month] = this.month.split('-');\n      this.datesLength = this.workingHoursData.filter(data => {\n        const date = new Date(data.date);\n        return date.getFullYear() === parseInt(year) && date.getMonth() + 1 === parseInt(month);\n      }).length;\n    },\n    calculateDaysDifference() {\n      const date1 = new Date(this.date1);\n      const date2 = new Date(this.date2);\n      const timeDiff = date2.getTime() - date1.getTime();\n      this.daysDifference = Math.floor(timeDiff / (1000 * 60 * 60 * 24)) + 1;\n    },\n    logout() {\n      this.$router.push({\n        path: '/'\n      });\n    },\n    async submit() {\n      const today = new Date();\n      const startDate = new Date(this.date1);\n      const endDate = new Date(this.date2);\n      if (startDate < today) {\n        alert(\"We cannot apply the previous date\");\n        return;\n      }\n      if (endDate < startDate) {\n        alert(\"ToDate must be after the FormDate\");\n        return;\n      }\n      if (this.leave === '') {\n        alert(\"LeaveType Will be required\");\n        return;\n      }\n      const diff = (endDate - startDate) / (1000 * 60 * 60 * 24) + 1;\n      if (this.leave === \"Normal Leave\" && diff > 4) {\n        alert(\"You can't apply for leaves because you cannot have permission to apply for more than 4 days\");\n        return;\n      }\n      // if (this.userDetails && this.userDetails.normalLeaveBalance == 1) {\n      //     alert(\"You do not have sufficient normal leaves\");\n      //     return;\n      // }\n      // if (this.userDetails && this.userDetails.sickLeaveBalance == 1) {\n      //     alert(\"You do not have sufficient sick leaves\");\n      //     return;\n      // }\n      const leaveExists = this.leavehistory.some(leave => {\n        const leaveStartDate = new Date(leave.startDate);\n        console.log(\"ðŸš€ ~ leaveExists ~ leaveStartDate:\", leaveStartDate);\n        const leaveEndDate = new Date(leave.endDate);\n        return leaveStartDate <= startDate && leaveEndDate >= endDate;\n      });\n      if (leaveExists) {\n        alert(\"Leave for the selected period already exists.\");\n        return;\n      }\n      const leaveData = {\n        leaveType: this.leave,\n        startDate: this.date1,\n        endDate: this.date2,\n        reason: this.reason,\n        days: diff,\n        emp_name: this.name,\n        email: this.email,\n        Status: this.Status\n      };\n      try {\n        const response = await axios.post('https://localhost:7188/api/User/createleave', leaveData);\n        const leaveDetails = response.data;\n        this.goals.push({\n          leaveDetails,\n          day: diff\n        });\n        if (this.userDetails) {\n          if (this.userDetails.normalLeaveBalance <= 0) {\n            alert(\"alert we cannot aply the normal leave\");\n          }\n          if (this.userDetails.sickLeaveBalance <= 0) {\n            alert(\"alert we cannot aply the sick leave\");\n          }\n          if (this.leavehistory.startDate == this.date1) {\n            alert(\"hi\");\n            return;\n          }\n          this.userDetails.normalLeaveBalance = leaveDetails.normalLeaveBalance;\n          this.userDetails.sickLeaveBalance = leaveDetails.sickLeaveBalance;\n          this.userDetails.totalLeaveBalance = leaveDetails.totalLeaveBalance;\n        }\n        this.getHistoryTable();\n      } catch (error) {\n        alert(error);\n      }\n    },\n    isDateDisabled(date1) {\n      const today = new Date();\n      return date1 < today;\n    },\n    getHistoryTable() {\n      const empId = this.userDetails.userId;\n      axios.get('https://localhost:7188/api/User/getleave').then(response => {\n        this.leavehistory = response.data.filter(leave => leave.emp_id === empId);\n        console.log(\"ðŸš€ ~ getHistoryTable ~ this.leavehistory:\", this.leavehistory);\n      }).catch(error => {\n        console.error('Error fetching leave data:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","id","name","leave","date1","date2","email","reason","Status","daysDifference","goals","totallength","leavehistory","month","Date","toISOString","slice","datesLength","computed","daysInMonth","year","split","getDate","userDetails","$store","state","userData","length","getteam","getters","getTeamMembers","employeeList","userId","filteredEmployees","filter","employee","empId","groupedEmployees","reduce","acc","key","empName","empRole","attendances","push","uniqueEmployees","Object","values","workingHoursData","attendanceDates","forEach","attendance","date","getFullYear","getMonth","totalDifference","keys","outTime","intimeDate","inTime","outtimeDate","diff","Math","abs","result","map","dateInfo","hours","floor","minutes","totalHours","totalMinutes","averageHours","curr","totalInMinutes","averageInMinutes","averageMinutes","console","log","watch","newValue","calculateDaysDifference","newMonth","updateDatesLength","created","getHistoryTable","methods","getCurrentDate","today","day","MonthChange","parseInt","timeDiff","getTime","logout","$router","path","submit","startDate","endDate","alert","leaveExists","some","leaveStartDate","leaveEndDate","leaveData","leaveType","days","emp_name","response","post","leaveDetails","normalLeaveBalance","sickLeaveBalance","totalLeaveBalance","error","isDateDisabled","get","then","emp_id","catch"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\theNavigation.vue"],"sourcesContent":["<template>\r\n  <div class=\"mainHeading\">\r\n    <p>HRMS- Human Resource Management System</p>\r\n  </div>\r\n  <div class=\"mainContainer\">\r\n    <div class=\"tableContainer\">\r\n      <div class=\"table1\">\r\n        <h3 class=\"Heading\">Leave Summary</h3>\r\n        <div class=\"leavesContainer \">\r\n    <div class=\"leavesBox1\">\r\n    <label class=\"label\">Total Leaves</label>\r\n      <div class=\"leavebalance1\">{{ userDetails ? userDetails.totalLeaveBalance : ''  }} / 24</div>\r\n    </div><br>\r\n    <div class=\"leavesBox2\">\r\n     <label class=\"label\">NormalLeaves</label>\r\n      <div class=\"leavebalance2\">{{ userDetails ? userDetails.normalLeaveBalance : ''  }} / 12</div>\r\n    </div><br>\r\n    <div class=\"leavesBox3\">\r\n      <label class=\"label\">SickLeaves</label>\r\n      <div class=\"leavebalance3\">{{ userDetails ? userDetails.sickLeaveBalance : '' }} / 12</div>\r\n    </div>\r\n  </div>\r\n        <h3 class=\"Heading\">Leave Application</h3>\r\n        <div class=\"From\">\r\n<div><input type=\"hidden\" v-model=\"email\"></div>\r\n<div><input type=\"hidden\" v-model=\"name\"></div>\r\n<div>\r\n  <label class=\"Label\">Leave_type:</label>\r\n  <select class=\"select\" v-model=\"leave\">\r\n    <option>Normal Leave</option>\r\n    <option>Sick Leave</option>\r\n  </select>\r\n</div>\r\n<div><label class=\"Label\">From:</label><input type=\"date\" v-model=\"date1\" :min=\"getCurrentDate()\" ></div>\r\n<div><label class=\"Label\">To:</label><input type=\"date\" style=\"margin-left: 71px;\" v-model=\"date2\" :min=\"getCurrentDate()\" ></div>\r\n<div><label class=\"Label\">Days:</label><div class=\"datedifference\"><span v-show=\"!daysDifference\"> </span><span v-show=\"daysDifference\"> {{ daysDifference }}</span></div></div>\r\n<div><label class=\"Label\">Reason:</label><input type=\"textArea\" v-model=\"reason\"></div><br>\r\n<div><input type=\"hidden\" v-model=\"Status\"></div>\r\n<button type=\"submit\" @click=\"submit\">Apply</button>\r\n        </div>\r\n        <div>\r\n          <br>\r\n <div class=\"table4\" >\r\n     <div class=\"Heading\"><h3>leaveHistory</h3></div>\r\n      <table class=\"table table-bordered\" >\r\n        <thead>\r\n          <th>Employee_name</th>\r\n          <th>Leave_Type</th>\r\n          <th>FormDate</th>\r\n          <th>ToDate</th>\r\n          <th>Days</th>\r\n          <th>Reason</th>\r\n          <th>Status</th>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(leave, index) in leavehistory\" :key=\"index\" >\r\n            <td>{{ leave.emp_name }}</td>\r\n            <td>{{ leave.leaveType}}</td>\r\n            <td>{{leave.startDate}}</td>\r\n            <td>{{leave.endDate}}</td>\r\n            <td>{{leave.days}}</td>\r\n            <td>{{leave.reason}}</td>\r\n            <td>{{leave.status}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n        </div>\r\n      </div>\r\n   \r\n      <div class=\"table2\">\r\n        <div class=\"Heading\"><h3>Attendence Summary</h3></div>\r\n        <div class=\"leavesContainer \">\r\n    <div class=\"AvgHours\">\r\n    <label class=\"label\">AvgHrs/Day</label>\r\n      <div class=\"AvgBalance\">{{ averageHours }} / 9Hrs</div>\r\n    </div><br>\r\n    <div>\r\n      \r\n    <div class=\"presentDays\">\r\n      <!-- <input type=\"month\" class=\"monthChange\" v-model=\"month\" placeholder=\"month\" @change=\"MonthChange\"> -->\r\n     <label class=\"label\">PresntDays/Month</label>\r\n     <div class=\"leavebalance2\">{{ this.workingHoursData.length }}/31</div>\r\n      <!-- <div class=\"leavebalance2\">{{ this.datesLength }}/{{daysInMonth}} </div> -->\r\n    </div>\r\n  </div><br>\r\n    </div>\r\n        <h3 class=\"Heading\">Holidays</h3>\r\n        <table class=\"table table-bordered\">\r\n          <tbody>\r\n            <tr>\r\n              <td>01-Jan-2024</td>\r\n              <td>Monday</td>\r\n              <td>New Year</td>\r\n            </tr>\r\n            <tr>\r\n              <td>15-Jan-2024</td>\r\n              <td>Monday</td>\r\n              <td>Sankranti</td>\r\n            </tr>\r\n            <tr>\r\n              <td>26-Jan-2024</td>\r\n              <td>Friday</td>\r\n              <td>Republic Day</td>\r\n            </tr>\r\n            <tr>\r\n              <td>08-Mar-2024</td>\r\n              <td>Friday</td>\r\n              <td>Maha Shivaratri</td>\r\n            </tr>\r\n            <tr>\r\n              <td>09-Apr-2024</td>\r\n              <td>Tuesday</td>\r\n              <td>Ugadi</td>\r\n            </tr>\r\n            <tr>\r\n              <td>15-Aug-2024</td>\r\n              <td>Thursday</td>\r\n              <td>Independence Day</td>\r\n            </tr>\r\n            <tr>\r\n              <td>19-Aug-2024</td>\r\n              <td>Monday</td>\r\n              <td>Rakhi</td>\r\n            </tr>\r\n            <tr>\r\n              <td>06-Sep-2024</td>\r\n              <td>Friday</td>\r\n              <td>Ganesh chaturthi</td>\r\n            </tr>\r\n            \r\n            <tr>\r\n              <td>02-Oct-2024</td>\r\n              <td>Wednesday</td>\r\n              <td>Gandhi Jayanti</td>\r\n            </tr>\r\n            <tr>\r\n              <td>14-Oct-2024</td>\r\n              <td>Monday</td>\r\n              <td>Vijaya Dashami</td>\r\n            </tr>\r\n            <tr>\r\n              <td>31-Oct-2024</td>\r\n              <td>Thursday</td>\r\n              <td>Deepavali</td>\r\n            </tr>\r\n            <tr>\r\n              <td>25-Dec-2024</td>\r\n              <td>Wednesday</td>\r\n              <td>Christmas Day</td>\r\n            </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"table3\">\r\n        <div class=\"userDetails\">\r\n          <div class=\"head\"> <i class=' font bx bxs-user-circle'></i><br>\r\n            <h3  >{{ userDetails.userName}}</h3>\r\n            <h4>{{userDetails.designation  }}</h4>\r\n          </div>\r\n          <div class=\"paragraph\">\r\n            <p>Gender: {{ userDetails.gender}}</p>\r\n            <p>Date Of Birth : {{ userDetails.dob }}</p>\r\n            <p>Email :{{ userDetails.email }}</p>\r\n            <p>Phone : {{ userDetails.phone }}</p>\r\n            <p>Address :{{userDetails.address}}</p>\r\n            <p>Department : {{ userDetails.dept }}</p>\r\n            <p>Joining Date : {{userDetails.joiningDate}}</p>\r\n            <p>Manager : {{ userDetails.manager }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n  </div>\r\n \r\n</div>\r\n    <div class=\"sidebar\">\r\n      <div class=\"nav\">\r\n        <div class=\"menu\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"#\">\r\n                <i class='bx bx-home'></i>\r\n                <span class=\"text\">Home</span>\r\n              </a>\r\n            </li>\r\n            <li class=\"active\" v-if=\"getteam\">\r\n              <a href=\"#\">\r\n                <i class=\"fa-solid fa-users\"></i>\r\n                <RouterLink to=\"/members\" class=\"text\"> Team Members</RouterLink>\r\n              </a>\r\n            </li>\r\n            <li class=\"active\">\r\n              <a href=\"#\">\r\n                <i class='bx bxs-calendar'></i>\r\n              \r\n                <RouterLink to=\"/attendence\" class=\"text\">Attendence</RouterLink>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"menu\" id=\"logout\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"#\">\r\n                <i class='bx bx-info-circle'></i>\r\n                <span class=\"text\">Help</span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">\r\n                <i class='bx bx-log-out'></i>\r\n                <RouterLink to=\"/\" class=\"text\" @click=\"logout\"> Logout</RouterLink>\r\n              </a>\r\n            </li>\r\n            \r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n  export default {\r\n    data() {\r\n      return {\r\n        id: \"\",\r\n        name: \"\",\r\n        leave: \"\",\r\n        date1: \"\",\r\n        date2: \"\",\r\n        email: \"\",\r\n        reason:\"\",\r\n        Status:\"\",\r\n        daysDifference: \"\",\r\n      goals: [],\r\n      totallength:'',\r\n      leavehistory:'',\r\n      month: new Date().toISOString().slice(0, 7),\r\n      datesLength: 0\r\n      };\r\n    },\r\n    computed: {\r\n      daysInMonth() {\r\n      const [year, month] = this.month.split('-');\r\n      return new Date(year, month, 0).getDate();\r\n    },\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    getteam(){\r\n      return this.$store.getters.getTeamMembers;\r\n    },\r\n    employeeList() {\r\n  if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n    const userId = this.userDetails ? this.userDetails.userId : null;\r\n    if (userId) {\r\n      const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\r\n      const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n        const key = employee.empId;\r\n        if (!acc[key]) {\r\n          acc[key] = {\r\n            empId: employee.empId,\r\n            empName: employee.empName,\r\n            empRole: employee.empRole,\r\n            attendances: []\r\n          };\r\n        }\r\n        acc[key].attendances.push(employee);\r\n        return acc;\r\n      }, {});\r\n      const uniqueEmployees = Object.values(groupedEmployees);\r\n      return uniqueEmployees;\r\n    }\r\n  }\r\n  return [];\r\n},\r\n    workingHoursData() {\r\n  const attendanceDates = {};\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      if (!attendanceDates[attendance.date]) {\r\n        attendanceDates[attendance.date] = {\r\n          date: attendance.date,\r\n          year: new Date(attendance.date).getFullYear(),\r\n          month: new Date(attendance.date).getMonth() + 1,\r\n          totalDifference: 0\r\n        };\r\n\r\n      }\r\n      this.datesLength = Object.keys(attendanceDates).length;\r\n      if (attendance.outTime) {\r\n        const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\r\n        const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\r\n        const diff = Math.abs(outtimeDate - intimeDate);\r\n        attendanceDates[attendance.date].totalDifference += diff;\r\n      }\r\n    });\r\n  });\r\n\r\n  const result = Object.values(attendanceDates).map(dateInfo => {\r\n    const hours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n    const minutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n    return {\r\n      date: dateInfo.date,\r\n      totalHours: hours,\r\n      totalMinutes: minutes,\r\n    };\r\n  });\r\n\r\n  return result;\r\n},\r\n    averageHours() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / this.workingHoursData.length;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength=this.workingHoursData.length;\r\n        console.log(totallength);\r\n        return `${averageHours} hrs ${averageMinutes} mins`;\r\n       \r\n      }\r\n      return null;\r\n    }\r\n  },\r\n  watch:{\r\ndate1(newValue){\r\n  this.calculateDaysDifference();\r\n  console.log(newValue);\r\n},\r\ndate2(newValue){\r\n  this.calculateDaysDifference();\r\n  console.log(newValue);\r\n},\r\nmonth(newMonth) {\r\n      this.updateDatesLength();\r\n      console.log(newMonth)\r\n    }\r\n    },\r\n  created(){\r\n   this.getHistoryTable();\r\n   this.updateDatesLength();\r\n},\r\nmethods: {\r\n  getCurrentDate() {\r\n        const today = new Date();\r\n        const year = today.getFullYear();\r\n        let month = today.getMonth() + 1;\r\n        let day = today.getDate();\r\n        if (month < 10) {\r\n            month = '0' + month; \r\n        }\r\n        if (day < 10) {\r\n            day = '0' + day; \r\n        }\r\n        return `${year}-${month}-${day}`;\r\n    },\r\n  MonthChange() {\r\n      this.updateDatesLength();\r\n    },\r\n    updateDatesLength() {\r\n      const [year, month] = this.month.split('-');\r\n      this.datesLength = this.workingHoursData.filter(data => {\r\n        const date = new Date(data.date);\r\n        return date.getFullYear() === parseInt(year) && date.getMonth() + 1 === parseInt(month);\r\n      }).length;\r\n    },\r\n  calculateDaysDifference() {\r\n      const date1 = new Date(this.date1)\r\n      const date2 = new Date(this.date2)\r\n      const timeDiff = date2.getTime() - date1.getTime()\r\n      this.daysDifference = Math.floor(timeDiff / (1000 * 60 * 60 * 24))+1\r\n    },\r\n      logout(){\r\n        this.$router.push({ path: '/' });\r\n      },\r\n      async submit() {\r\n    const today = new Date();\r\n    const startDate = new Date(this.date1);\r\n    const endDate = new Date(this.date2);\r\n    \r\n    if (startDate < today) {\r\n        alert(\"We cannot apply the previous date\");\r\n        return;\r\n    }\r\n    if (endDate < startDate) {\r\n        alert(\"ToDate must be after the FormDate\");\r\n        return;\r\n    }\r\n    if (this.leave === '') {\r\n        alert(\"LeaveType Will be required\");\r\n        return;\r\n    }\r\n    const diff = (endDate - startDate) / (1000 * 60 * 60 * 24) + 1;\r\n    if ( this.leave === \"Normal Leave\" && diff > 4) {\r\n        alert(\"You can't apply for leaves because you cannot have permission to apply for more than 4 days\");\r\n        return;\r\n    }\r\n    // if (this.userDetails && this.userDetails.normalLeaveBalance == 1) {\r\n    //     alert(\"You do not have sufficient normal leaves\");\r\n    //     return;\r\n    // }\r\n    // if (this.userDetails && this.userDetails.sickLeaveBalance == 1) {\r\n    //     alert(\"You do not have sufficient sick leaves\");\r\n    //     return;\r\n    // }\r\n    const leaveExists  = this.leavehistory.some(leave => {\r\n        const leaveStartDate = new Date(leave.startDate);\r\n        console.log(\"ðŸš€ ~ leaveExists ~ leaveStartDate:\", leaveStartDate)\r\n        const leaveEndDate = new Date(leave.endDate);\r\n        return (\r\n            leaveStartDate <= startDate && leaveEndDate >= endDate\r\n        );\r\n    });\r\n    if (leaveExists) {\r\n        alert(\"Leave for the selected period already exists.\");\r\n        return;\r\n    }\r\n    const leaveData = {\r\n        leaveType: this.leave,\r\n        startDate: this.date1,\r\n        endDate: this.date2,\r\n        reason: this.reason,\r\n        days: diff,\r\n        emp_name: this.name,\r\n        email: this.email,\r\n        Status: this.Status\r\n    };\r\n    try {\r\n        const response = await axios.post('https://localhost:7188/api/User/createleave',leaveData);\r\n        const leaveDetails = response.data;\r\n       \r\n        this.goals.push({ leaveDetails, day: diff });\r\n        if (this.userDetails) {\r\n          if( this.userDetails.normalLeaveBalance <=0){\r\n            alert(\"alert we cannot aply the normal leave\")\r\n          }\r\n        if(this.userDetails.sickLeaveBalance <=0){\r\n          alert(\"alert we cannot aply the sick leave\")\r\n        }\r\n        if(this. leavehistory.startDate == this.date1){\r\n      alert(\"hi\")\r\n      return;\r\n    }\r\n            this.userDetails.normalLeaveBalance = leaveDetails.normalLeaveBalance;\r\n            this.userDetails.sickLeaveBalance = leaveDetails.sickLeaveBalance;\r\n            this.userDetails.totalLeaveBalance = leaveDetails.totalLeaveBalance;\r\n        }\r\n        this.getHistoryTable();\r\n    } \r\n    \r\n    catch (error) {\r\n        alert(error);\r\n    }\r\n    \r\n\r\n},\r\nisDateDisabled(date1) {\r\n      const today = new Date();\r\n      return date1 < today;\r\n    },\r\n  getHistoryTable() {\r\n  const empId = this.userDetails.userId;\r\n  axios.get('https://localhost:7188/api/User/getleave')\r\n    .then(response => {\r\n      this.leavehistory = response.data.filter(leave => leave.emp_id === empId);\r\n      console.log(\"ðŸš€ ~ getHistoryTable ~ this.leavehistory:\", this.leavehistory)\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching leave data:', error);\r\n    });\r\n},\r\n\r\n    }\r\n  };\r\n  </script>\r\n<style>\r\n@import url(https://fonts.googleapis.com/css?family=Inter:100,200,300,regular,500,600,700,800,900);\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n\r\n}\r\n.mainHeading {\r\n  font-family:'Calibri Light';\r\n  color: black;\r\n  font-size: 22px;\r\n  background-color: aqua;\r\n  text-align: left;\r\n  padding-left: 45px;\r\n  height: 40px;\r\n}\r\n.tableContainer {\r\n  display: flex;\r\n  margin-top: 4px;\r\n  padding-top: 5px;\r\n  padding-left: 30px;\r\n  padding-right: 10px;\r\n  background-color:whitesmoke;\r\n  margin-left: 10px;\r\n  border-radius: 10px;\r\n  margin-right: 20px;\r\n  margin-bottom: 10px;\r\n  border: 4px solid;\r\n  padding-bottom: 10px;\r\n \r\n}\r\n\r\nbody {\r\n  background-color: white;\r\n  background-size: 20%;\r\n  background-repeat: no-repeat;\r\n  background-position: 55% center;\r\n\r\n}\r\n\r\n.leavesummary {\r\n  padding-right: 200px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.Holidays {\r\n  padding-right: 210px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n.leave {\r\n  padding-right: 370px;\r\n}\r\n.reason {\r\n  padding-right: 530px;\r\n}\r\n\r\n.Label {\r\n  padding-left: 130px;\r\n}\r\n\r\n.textArea {\r\n  padding-right: 0px;\r\n  height: 10p;\r\n}\r\n.number{\r\n  padding-right: 5px;\r\n  height: 10p;\r\n}\r\n.sidebar {\r\n\r\n  top: 40px;\r\n  left: 0;\r\n  width: 275px;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #1f3050;\r\n  padding: 24px;\r\n  gap: 40px;\r\n  transition: all 0.3s;\r\n  padding-left: 0%;\r\n  padding-top: 100px;\r\n\r\n}\r\n\r\n.menu .title {\r\n  position: absolute;\r\n  padding-left: 20px;\r\n  font-size: 10px;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.menu ul li {\r\n  position: relative;\r\n  list-style: none;\r\n  margin-bottom: 5px;\r\n\r\n}\r\n\r\n.menu ul li a.bx {\r\n  font-size: 20px;\r\n}\r\n\r\n.menu ul li a.bi {\r\n  font-size: 20px;\r\n}\r\n\r\n.menu ul li a {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-decoration: none;\r\n  padding: 10px 4px;\r\n  padding-left: 5px;\r\n  border-radius: 8px;\r\n  transition: all 0.3s;\r\n  font-family: Arial, Helvetica, sans-serif\r\n}\r\n.menu ul li a:hover{\r\n  background-color: blue;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 230px;\r\n}\r\n\r\n#logout {\r\n  padding-bottom: 0px;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.table1 {\r\n  margin-left: 0px;\r\n  margin-right: -10px;\r\n  padding-right: 18px;\r\n  padding-left:-10px ;\r\n}\r\n.table2{\r\n  margin-left: -12px;\r\n}\r\n\r\n.table2 table{\r\n  width: 450px;\r\n  margin-right: 5px;\r\n  padding-right: 5px;\r\n  padding-left: 10px;\r\n\r\n}\r\n.table2 td{\r\n  font-family:Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\r\n  width: 200px;\r\n} \r\n.paragraph {\r\n  align-items: center;\r\n  padding-top: 40px;\r\n}\r\n\r\n.mainContainer {\r\n  margin-top: -12px;\r\n  border-radius: 20px;\r\n  margin-left: 17%;\r\n  margin-right: 4px;\r\n}\r\n.userDetails {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 20px;\r\n}\r\n.userDetails h3{\r\n margin-bottom: 20px;\r\n}\r\n.head {\r\n  flex: 1;\r\n  padding: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.paragraph{\r\n  font-size: 20px;\r\n  font-family:'Calibri';\r\n}\r\n.font {\r\n  font-size: 100px;\r\n  padding-right: 10px;\r\n}\r\n\r\n.table3 {\r\n  border: 1px solid;\r\n  width: 400px;\r\n  margin-left: 30px;\r\n  height: 90vh;\r\n  background-color:antiquewhite;\r\n  border-radius: 10px;\r\n  margin-top: 40px;\r\n}\r\n#leaveHistory{\r\n  width: 700px;\r\n  margin-top: 50px;\r\nmargin-right: 100px;\r\n}\r\n#leaveHistory th{\r\ntext-align: center;\r\n}\r\n.employeeHeading {\r\n  font-size: 30px;\r\n  padding-top: 2px;\r\n  margin-left: -20px;\r\n}\r\n.leavesBox1{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color: palevioletred;\r\n  width:130px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\nheight: 100px;\r\n}\r\n.AvgHours{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color: palevioletred;\r\n  width:160px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\nheight: 100px;\r\n}\r\n.leavesBox2{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color:rgb(70, 206, 70);\r\n  width:140px;\r\nmargin-left: 20px;\r\nheight: 100px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n}\r\n.leavesBox3{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color:rgb(231, 14, 14);\r\n  width:130px;\r\nmargin-left: 20px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\nheight: 100px;\r\nmargin-right: 10px;\r\n}\r\n.leavebalance1{\r\n  font-size: 30px;\r\n  text-align: left;\r\n  padding-left: 15px;\r\n  font-family:'Times New Roman', Times, serif;\r\n  color:  palevioletred;\r\n}\r\n.AvgBalance{\r\n  font-size: 20px;\r\n  text-align: left;\r\n  padding-left: 9px;\r\n  font-family:'Times New Roman', Times, serif;\r\n  color:  palevioletred;\r\n}\r\n.leavebalance2{\r\n  font-size: 30px;\r\n  text-align: left;\r\n  padding-left: 9px;\r\n  color: rgb(70, 206, 70);\r\n  font-family:'Times New Roman', Times, serif;\r\n}\r\n.leavebalance3{\r\n  font-size: 30px;\r\n  text-align: left;\r\n  padding-left: 30px;\r\n  color: rgb(231, 14, 14);\r\n  font-family:'Times New Roman', Times, serif;\r\n}\r\n.presentDays{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color:rgb(70, 206, 70);\r\n  width:180px;\r\nmargin-left: 20px;\r\nheight: 100px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n}\r\n.leavesContainer {\r\n  display: flex;\r\n  border-radius: 10px;\r\n  padding-bottom: 2px;\r\n}\r\n.label{\r\n  font-size: 20px;\r\n  padding-left: -10px;\r\n  text-align: left;\r\n  font-family: Georgia, 'Times New Roman', Times, serif;\r\n}\r\n.leavesContainer{\r\n  margin-left: -10px;\r\n  padding-left: 19px;\r\n  height: 120px;\r\n  padding-top: 10px;\r\n}\r\n.Heading{\r\n  padding-top: 10px;\r\n  padding-bottom: 5px;\r\n  padding-left: 13px;\r\n  font-size: 25px;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  color: rgb(214, 60, 32);\r\n}\r\n.From {\r\n  border: 1px solid;\r\n  width: 450px;\r\n  border-radius: 15px;\r\n  padding-left: 40px;\r\n  margin-left: -2px;\r\n  padding-top: 20px;\r\n  padding-bottom: 30px;\r\n  margin-top: 10px;\r\n}\r\n.From div {\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\nmargin-bottom: 16px;\r\npadding-top: 10px;\r\nwidth: 400px;\r\ncolor:#000;\r\nmargin-right: 97px;\r\n}\r\n\r\n.From label {\r\ndisplay: block;\r\nmargin-right: 3px; \r\nmargin-top: 4px;\r\npadding-left: 2px;\r\nfont-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\nfont-size: 20px;\r\n}\r\n\r\n.From input,\r\n.From select{\r\nwidth: 200px;\r\npadding: 10px; \r\nmargin-bottom: 3px; \r\nborder: 1px solid;\r\nborder-radius: 4px;\r\n}\r\n.From input[type=\"date\"] {\r\n    margin-left: 52px;\r\n}\r\n.From input[type=\"textArea\"] {\r\n    margin-left: 35px;\r\n}\r\n.From input[type=\"number\"]{\r\n  margin-left: 52px;\r\n}\r\n.datedifference{\r\n  border: 1px solid;\r\n  border-radius: 5px;\r\n  width: 10px;\r\n  margin-left: 52px;\r\n  padding-left: 30px;\r\n  font-size: 20px;\r\n  padding-bottom: 3px;\r\n  height: 50px;\r\n}\r\n.From button {\r\nbackground-color: #8db422;\r\ncolor: white;\r\nborder: none;\r\nborder-radius: 4px;\r\ncursor: pointer;\r\nmargin-left: 120px;\r\nwidth: 120px;\r\nheight: 40px;\r\n}\r\n.form button:hover {\r\nbackground-color: #45a049;\r\n}\r\n.select {\r\nwidth: 250px;\r\nheight: 40px;\r\nborder-radius: 10px;\r\nmargin: 5px;\r\ndisplay: inline-block;\r\n}\r\n.table4{\r\n  margin-top: 20px;\r\n}\r\n.table4 td{\r\n  font-family:'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n}\r\n.table4 th{\r\n  font-family: sans-serif;\r\n}\r\n\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}