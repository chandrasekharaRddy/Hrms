{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"container-fluid border w-100 p-2 mainHeading\"\n}, \"HRMS - Human Resource Management System\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"container-fluid mainContainer\"\n};\nconst _hoisted_3 = {\n  class: \"row flex-nowrap\"\n};\nconst _hoisted_4 = {\n  class: \"bg-dark col-auto col-md-2 col-lg-2 min-vh-100 d-flex flex-column justify-content\"\n};\nconst _hoisted_5 = {\n  class: \"bg-dark p-2\"\n};\nconst _hoisted_6 = {\n  class: \"nav nav-pills flex-column mainnav mt-5 gap-3\"\n};\nconst _hoisted_7 = {\n  class: \"nav-item py-2 py-sm-0\"\n};\nconst _hoisted_8 = {\n  href: \"#\",\n  class: \"nav-link text-white\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-solid fa-house\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"nav-item py-2 py-sm-0\"\n};\nconst _hoisted_11 = {\n  href: \"#\",\n  class: \"nav-link text-white\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-solid fa-calendar-days\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_13 = {\n  key: 0,\n  class: \"nav-item py-2 py-sm-0\"\n};\nconst _hoisted_14 = {\n  href: \"#\",\n  class: \"nav-link text-white\"\n};\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-solid fa-users\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_16 = {\n  class: \"col p-4 content-area\"\n};\nconst _hoisted_17 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_18 = {\n  class: \"row\"\n};\nconst _hoisted_19 = {\n  class: \"col border\"\n};\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-info\"\n}, \"Summary:\", -1 /* HOISTED */);\nconst _hoisted_21 = {\n  class: \"container mt-5 d-flex justify-content-center gap-3\"\n};\nconst _hoisted_22 = {\n  class: \"card text-center\"\n};\nconst _hoisted_23 = {\n  class: \"card-header\"\n};\nconst _hoisted_24 = {\n  class: \"d-flex justify-content-center\"\n};\nconst _hoisted_25 = {\n  class: \"col\"\n};\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bx bxs-time attend\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"attendHeading\"\n}, \"Avg Hours\", -1 /* HOISTED */);\nconst _hoisted_28 = {\n  class: \"card text-center\"\n};\nconst _hoisted_29 = {\n  class: \"card-header\"\n};\nconst _hoisted_30 = {\n  class: \"d-flex justify-content-center\"\n};\nconst _hoisted_31 = {\n  class: \"col\"\n};\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bx bxs-log-in-circle attend\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"attendHeading\"\n}, \"Avg Check-in\", -1 /* HOISTED */);\nconst _hoisted_34 = {\n  class: \"container mt-5 d-flex justify-content-center gap-3 bottom-padding\"\n};\nconst _hoisted_35 = {\n  class: \"card text-center\"\n};\nconst _hoisted_36 = {\n  class: \"card-header\"\n};\nconst _hoisted_37 = {\n  class: \"d-flex justify-content-center align-items-center\"\n};\nconst _hoisted_38 = {\n  class: \"col\"\n};\nconst _hoisted_39 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bx bxs-time-five attend\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_40 = /*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"attendHeading\"\n}, \"On-time\", -1 /* HOISTED */);\nconst _hoisted_41 = {\n  class: \"card text-center\"\n};\nconst _hoisted_42 = {\n  class: \"card-header\"\n};\nconst _hoisted_43 = {\n  class: \"d-flex justify-content-center\"\n};\nconst _hoisted_44 = {\n  class: \"col\"\n};\nconst _hoisted_45 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bx bxs-log-out-circle attend\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_46 = /*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"attendHeading\"\n}, \"Avg Check-out\", -1 /* HOISTED */);\nconst _hoisted_47 = {\n  class: \"col border\"\n};\nconst _hoisted_48 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-info\"\n}, \"Statistics:\", -1 /* HOISTED */);\nconst _hoisted_49 = {\n  class: \"bargraph2\",\n  ref: \"myChart\",\n  width: \"480\",\n  height: \"390\",\n  style: {\n    \"padding-left\": \"-10px\"\n  }\n};\nconst _hoisted_50 = {\n  class: \"col border\"\n};\nconst _hoisted_51 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-info\"\n}, \"Date Activity:\", -1 /* HOISTED */);\nconst _hoisted_52 = {\n  class: \"container\"\n};\nconst _hoisted_53 = {\n  class: \"row\"\n};\nconst _hoisted_54 = {\n  class: \"insidepunchValues\"\n};\nconst _hoisted_55 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"punchheading\"\n}, \"Punch In At:\", -1 /* HOISTED */);\nconst _hoisted_56 = {\n  class: \"punchValues\"\n};\nconst _hoisted_57 = {\n  class: \"insidepunchValues\"\n};\nconst _hoisted_58 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"punchheading\"\n}, \"Punch Out At:\", -1 /* HOISTED */);\nconst _hoisted_59 = {\n  class: \"punchValues\"\n};\nconst _hoisted_60 = {\n  class: \"insidepunchValues\"\n};\nconst _hoisted_61 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"punchheading\"\n}, \"Punch In At:\", -1 /* HOISTED */);\nconst _hoisted_62 = {\n  class: \"punchValues\"\n};\nconst _hoisted_63 = {\n  class: \"insidepunchValues\"\n};\nconst _hoisted_64 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"punchheading\"\n}, \"Punch Out At:\", -1 /* HOISTED */);\nconst _hoisted_65 = {\n  class: \"punchValues\"\n};\nconst _hoisted_66 = {\n  key: 0\n};\nconst _hoisted_67 = {\n  class: \"insidepunchValues\"\n};\nconst _hoisted_68 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"punchheading\"\n}, \"Punch In At:\", -1 /* HOISTED */);\nconst _hoisted_69 = {\n  class: \"punchValues\"\n};\nconst _hoisted_70 = {\n  class: \"insidepunchValues\"\n};\nconst _hoisted_71 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"punchheading\"\n}, \"Punch Out At:\", -1 /* HOISTED */);\nconst _hoisted_72 = {\n  class: \"punchValues\"\n};\nconst _hoisted_73 = {\n  class: \"container border\"\n};\nconst _hoisted_74 = {\n  class: \"row\"\n};\nconst _hoisted_75 = {\n  class: \"col-8\"\n};\nconst _hoisted_76 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-info\"\n}, \"Attendance:\", -1 /* HOISTED */);\nconst _hoisted_77 = {\n  class: \"col-sm-3 search\"\n};\nconst _hoisted_78 = {\n  style: {\n    \"max-height\": \"400px\",\n    \"overflow-y\": \"auto\"\n  }\n};\nconst _hoisted_79 = {\n  class: \"table table-sm\"\n};\nconst _hoisted_80 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Intime\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Outtime\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"WorkingHours\")])], -1 /* HOISTED */);\nconst _hoisted_81 = [\"onClick\"];\nconst _hoisted_82 = {\n  class: \"col-4\",\n  style: {\n    \"height\": \"500px\"\n  }\n};\nconst _hoisted_83 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-info\"\n}, \"Bargraph:\", -1 /* HOISTED */);\nconst _hoisted_84 = {\n  ref: \"myChart3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_RouterLink = _resolveComponent(\"RouterLink\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"ul\", _hoisted_6, [_createElementVNode(\"li\", _hoisted_7, [_createElementVNode(\"a\", _hoisted_8, [_hoisted_9, _createVNode(_component_RouterLink, {\n    to: \"/navigation\",\n    class: \"fs-4 d-none d-sm-inline\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Home\")]),\n    _: 1 /* STABLE */\n  })])]), _createElementVNode(\"li\", _hoisted_10, [_createElementVNode(\"a\", _hoisted_11, [_hoisted_12, _createVNode(_component_RouterLink, {\n    to: \"/attendence\",\n    class: \"fs-4 d-none d-sm-inline\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Attendence\")]),\n    _: 1 /* STABLE */\n  })])]), $options.getteam ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, [_createElementVNode(\"a\", _hoisted_14, [_hoisted_15, _createVNode(_component_RouterLink, {\n    to: \"/members\",\n    class: \"fs-4 d-none d-sm-inline\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Team Members\")]),\n    _: 1 /* STABLE */\n  })])])) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_hoisted_20, _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_hoisted_26, _hoisted_27, _createElementVNode(\"h6\", null, _toDisplayString($options.averageHours), 1 /* TEXT */)])])])]), _createElementVNode(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_hoisted_32, _hoisted_33, _createElementVNode(\"h6\", null, _toDisplayString(this.summaryavgcheckIn), 1 /* TEXT */)])])])])]), _createElementVNode(\"div\", _hoisted_34, [_createElementVNode(\"div\", _hoisted_35, [_createElementVNode(\"div\", _hoisted_36, [_createElementVNode(\"div\", _hoisted_37, [_createElementVNode(\"div\", _hoisted_38, [_hoisted_39, _hoisted_40, _createElementVNode(\"h6\", null, _toDisplayString(this.ontimePercentage + '%'), 1 /* TEXT */)])])])]), _createElementVNode(\"div\", _hoisted_41, [_createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"div\", _hoisted_43, [_createElementVNode(\"div\", _hoisted_44, [_hoisted_45, _hoisted_46, _createElementVNode(\"h6\", null, _toDisplayString(this.summaryavgCheckOut), 1 /* TEXT */)])])])])])]), _createElementVNode(\"div\", _hoisted_47, [_hoisted_48, _createElementVNode(\"canvas\", _hoisted_49, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_50, [_hoisted_51, _createElementVNode(\"div\", _hoisted_52, [_createElementVNode(\"div\", _hoisted_53, [_createElementVNode(\"div\", _hoisted_54, [_hoisted_55, _createElementVNode(\"p\", _hoisted_56, _toDisplayString($data.punchValues.Intime1), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_57, [_hoisted_58, _createElementVNode(\"p\", _hoisted_59, _toDisplayString($data.punchValues.Outtime1), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_60, [_hoisted_61, _createElementVNode(\"p\", _hoisted_62, _toDisplayString($data.punchValues.Intime2), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_63, [_hoisted_64, _createElementVNode(\"p\", _hoisted_65, _toDisplayString($data.punchValues.Outtime2), 1 /* TEXT */)]), $data.punchValues.Intime3 && $data.punchValues.Intime3.length > 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_66, [_createElementVNode(\"div\", _hoisted_67, [_hoisted_68, _createElementVNode(\"p\", _hoisted_69, _toDisplayString($data.punchValues.Intime3), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_70, [_hoisted_71, _createElementVNode(\"p\", _hoisted_72, _toDisplayString($data.punchValues.Outtime3), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"div\", _hoisted_73, [_createElementVNode(\"div\", _hoisted_74, [_createElementVNode(\"div\", _hoisted_75, [_hoisted_76, _createElementVNode(\"div\", _hoisted_77, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    placeholder: \"Search\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.Search = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.Search]])]), _createElementVNode(\"div\", _hoisted_78, [_createElementVNode(\"table\", _hoisted_79, [_hoisted_80, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.workingHoursData, (record, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      onClick: $event => $options.getPunchDetails(record)\n    }, [_createElementVNode(\"td\", null, _toDisplayString(record.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.Intime[0]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.Outtime[1]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.totalHours) + \" hrs \" + _toDisplayString(record.totalMinutes) + \" mins\", 1 /* TEXT */)], 8 /* PROPS */, _hoisted_81);\n  }), 128 /* KEYED_FRAGMENT */))])])])]), _createElementVNode(\"div\", _hoisted_82, [_hoisted_83, _createElementVNode(\"canvas\", _hoisted_84, null, 512 /* NEED_PATCH */)])])])])])])])])]);\n}","map":{"version":3,"names":["_createElementVNode","class","href","ref","width","height","style","scope","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_createVNode","_component_RouterLink","to","_hoisted_10","_hoisted_11","_hoisted_12","$options","getteam","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_toDisplayString","averageHours","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","summaryavgcheckIn","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","ontimePercentage","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","summaryavgCheckOut","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","$data","punchValues","Intime1","_hoisted_57","_hoisted_58","_hoisted_59","Outtime1","_hoisted_60","_hoisted_61","_hoisted_62","Intime2","_hoisted_63","_hoisted_64","_hoisted_65","Outtime2","Intime3","length","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","Outtime3","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","type","placeholder","Search","$event","_hoisted_78","_hoisted_79","_hoisted_80","_Fragment","_renderList","workingHoursData","record","index","key","onClick","getPunchDetails","date","Intime","Outtime","totalHours","totalMinutes","_hoisted_82","_hoisted_83","_hoisted_84"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"container-fluid border w-100 p-2 mainHeading\">HRMS - Human Resource Management System</div>\r\n    <div class=\"container-fluid mainContainer\">\r\n      <div class=\"row flex-nowrap\">\r\n        <div class=\"bg-dark col-auto col-md-2 col-lg-2 min-vh-100 d-flex flex-column justify-content\">\r\n          <div class=\"bg-dark p-2\">\r\n            <ul class=\"nav nav-pills flex-column mainnav mt-5 gap-3\">\r\n              <li class=\"nav-item py-2 py-sm-0\">\r\n                <a href=\"#\" class=\"nav-link text-white\">\r\n                  <i class=\"fa-solid fa-house\"></i>\r\n                  <RouterLink to=\"/navigation\"  class=\"fs-4 d-none d-sm-inline\">Home</RouterLink>\r\n                </a>\r\n              </li>\r\n              <li class=\"nav-item py-2 py-sm-0\">\r\n                <a href=\"#\" class=\"nav-link text-white\">\r\n                  <i class=\"fa-solid fa-calendar-days\"></i>\r\n                  <RouterLink to=\"/attendence\" class=\"fs-4 d-none d-sm-inline\">Attendence</RouterLink>\r\n                </a>\r\n              </li>\r\n              <li class=\"nav-item py-2 py-sm-0\" v-if=\"getteam\">\r\n                <a href=\"#\" class=\"nav-link text-white\">\r\n                  <i class=\"fa-solid fa-users\"></i>\r\n                  <RouterLink to=\"/members\" class=\"fs-4 d-none d-sm-inline\">Team Members</RouterLink>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"col p-4 content-area\">\r\n          <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n              <div class=\"col border\">\r\n                <h4 class=\"text-info\">Summary:</h4>\r\n      <div class=\"container mt-5 d-flex justify-content-center  gap-3\">\r\n  <div class=\"card text-center\">\r\n    <div class=\"card-header \">\r\n      <div class=\"d-flex justify-content-center \">\r\n        <div class=\"col\">\r\n          <i class='bx bxs-time attend'></i>\r\n            <h6 class=\"attendHeading\">Avg Hours</h6>\r\n            <h6>{{ averageHours }}</h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card text-center\">\r\n    <div class=\"card-header \">\r\n      <div class=\"d-flex justify-content-center\">\r\n        <div class=\"col\">\r\n          <i class='bx bxs-log-in-circle attend'></i>\r\n          <h6 class=\"attendHeading\">Avg Check-in</h6>\r\n          <h6>{{ this.summaryavgcheckIn }}</h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n      <div class=\"container mt-5 d-flex justify-content-center gap-3 bottom-padding\">\r\n  <div class=\"card text-center\">\r\n    <div class=\"card-header \">\r\n      <div class=\"d-flex justify-content-center align-items-center\">\r\n        <div class=\"col\">\r\n          <i class='bx bxs-time-five attend' ></i>\r\n          <h6 class=\"attendHeading\">On-time</h6>\r\n          <h6>{{ this.ontimePercentage+'%' }}</h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card text-center\">\r\n    <div class=\"card-header \">\r\n      <div class=\"d-flex justify-content-center\">\r\n        <div class=\"col\">\r\n          <i class='bx bxs-log-out-circle attend' ></i>\r\n          <h6 class=\"attendHeading\">Avg Check-out</h6>\r\n          <h6>{{ this.summaryavgCheckOut }}</h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n    </div>\r\n    <div class=\"col border\">\r\n      <h4 class=\"text-info\">Statistics:</h4>\r\n      <canvas class=\"bargraph2\" ref=\"myChart\" width=\"480\" height=\"390\" style=\"padding-left: -10px;\"></canvas>\r\n    </div>\r\n    <div class=\"col border\">\r\n      <h4 class=\"text-info\">Date Activity:</h4>\r\n      <div class=\"container\">\r\n      <div class=\"row\">\r\n          <div class=\"insidepunchValues\">\r\n            <h4 class=\"punchheading\">Punch In At:</h4>\r\n          <p class=\"punchValues\">{{ punchValues.Intime1 }}</p>\r\n        </div>\r\n        <div class=\"insidepunchValues\">\r\n            <h4 class=\"punchheading\">Punch Out At:</h4>\r\n          <p class=\"punchValues\">{{ punchValues.Outtime1 }}</p>\r\n        </div>\r\n        <div class=\"insidepunchValues\">\r\n            <h4 class=\"punchheading\">Punch In At:</h4>\r\n          <p class=\"punchValues\">{{  punchValues.Intime2 }}</p>\r\n        </div>\r\n        <div class=\"insidepunchValues\">\r\n            <h4 class=\"punchheading\">Punch Out At:</h4>\r\n          <p class=\"punchValues\">{{punchValues.Outtime2 }}</p>\r\n        </div>\r\n        <div v-if=\"punchValues.Intime3 && punchValues.Intime3.length > 1\" >\r\n          <div class=\"insidepunchValues\">\r\n            <h4 class=\"punchheading\">Punch In At:</h4>\r\n          <p class=\"punchValues\">{{  punchValues.Intime3 }}</p>\r\n        </div>\r\n        <div class=\"insidepunchValues\">\r\n            <h4 class=\"punchheading\">Punch Out At:</h4>\r\n          <p class=\"punchValues\">{{punchValues.Outtime3 }}</p>\r\n        </div>\r\n        </div>\r\n     </div>\r\n    </div>\r\n    </div>\r\n    <div class=\"container border\">\r\n      <div class=\"row\">     \r\n  <div class=\"col-8\">\r\n    <h4 class=\"text-info\">Attendance:</h4>\r\n    <div class=\"col-sm-3 search\">\r\n      <input type=\"password\" class=\"form-control\" placeholder=\"Search\" v-model=\"Search\">\r\n    </div>\r\n    <div style=\"max-height: 400px; overflow-y: auto;\">\r\n                <table class=\"table table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Date</th>\r\n                            <th scope=\"col\">Intime</th>\r\n                            <th scope=\"col\">Outtime</th>\r\n                            <th scope=\"col\">WorkingHours</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"(record, index) in workingHoursData\" :key=\"index\" @click=\"getPunchDetails(record)\">\r\n                            <td>{{ record.date }}</td>\r\n                            <td>{{ record.Intime[0] }}</td>\r\n                            <td>{{ record.Outtime[1] }}</td>\r\n                            <td>{{ record.totalHours }} hrs {{ record.totalMinutes }} mins</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n  </div>\r\n  <div class=\"col-4\" style=\"height: 500px;\">\r\n    <h4 class=\"text-info\">Bargraph:</h4>\r\n    <canvas ref=\"myChart3\"></canvas>\r\n  </div>\r\n</div>\r\n    </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  data() {\r\n    return { \r\n      selectedDate: null,\r\n      employeeTable: true,\r\n      hours: true,\r\n      Search: \"\",\r\n      punchValues: {\r\n        Intime1: null,\r\n        Intime2: null,\r\n        Outtime1: null,\r\n        Outtime2: null,\r\n        Intime3: [],\r\n        Outtime3: []\r\n      },\r\n      chart: null, \r\n      chartData3: {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n        datasets: [\r\n          {\r\n          label: 'earlyEntry',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n        {\r\n          label: 'ontime',\r\n          data: [0,0,0,0,0,0]\r\n        },\r\n        {\r\n          label: 'late',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n        {\r\n          label: 'earlyleave',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n        {\r\n          label: 'overtime',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n      ]\r\n      },\r\n      \r\n      chartOptions3: {\r\n         responsive: true,\r\n          maintainAspectRatio: false,\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: 'Attendance'\r\n            \r\n          }\r\n        },\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n  },\r\n  created() {\r\n    this.initializePunchValues();\r\n  },\r\n  mounted() {\r\n    this.chartVersion = Chart.version;\r\n    this.renderChart();\r\n    const ctx = this.$refs.myChart.getContext('2d');\r\n    new Chart(ctx, {\r\n      type: 'bar',\r\n      data: this.chartData,\r\n      options: this.chartOptions,\r\n      plugins: [this.progressBarPlugin]\r\n    });\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.getters. getUserData && this.$store.getters.getUserData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.getters. getUserData && this.$store.getters.getUserData.length > 0) {\r\n        const userId = this.userDetails ? this.userDetails.userId : null;\r\n        if (userId) {\r\n          const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\r\n          const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n            const key = employee.empId;\r\n            if (!acc[key]) {\r\n              acc[key] = {\r\n                empId: employee.empId,\r\n                empName: employee.empName,\r\n                empRole: employee.empRole,\r\n                attendances: []\r\n              };\r\n            }\r\n            acc[key].attendances.push(employee);\r\n            return acc;\r\n          }, {});\r\n          const uniqueEmployees = Object.values(groupedEmployees);\r\n          return uniqueEmployees;\r\n        }\r\n      }\r\n      return [];\r\n    },\r\n    workingHoursData() {\r\n  const attendanceDates = {};\r\n  const referenceDate = '01/01/2000';\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      const { date, inTime, outTime } = attendance;\r\n      if (!attendanceDates[date]) {\r\n        attendanceDates[date] = {\r\n          date: date,\r\n          Intime: [],\r\n          Outtime: [],\r\n          totalDifference: 0,\r\n        };\r\n      }\r\n      attendanceDates[date].Intime.push(inTime);\r\n      if (outTime) {\r\n        const intimeDate = new Date(`${referenceDate} ${inTime}`);\r\n        const outtimeDate = new Date(`${referenceDate} ${outTime}`);\r\n        const diff = Math.abs(outtimeDate - intimeDate);\r\n        attendanceDates[date].totalDifference += diff;\r\n        attendanceDates[date].Outtime.push(outTime);\r\n      }\r\n    });\r\n  });\r\n \r\n  const result = Object.values(attendanceDates).map(dateInfo => {\r\n    const totalHours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n    const totalMinutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n    return {\r\n      date: dateInfo.date,\r\n      Intime: dateInfo.Intime,\r\n      Outtime: dateInfo.Outtime,\r\n      totalHours: totalHours,\r\n      totalMinutes: totalMinutes\r\n    };\r\n  }).filter(record => record.date.includes(this.Search));\r\n  return result;\r\n},\r\naverageHours() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / this.workingHoursData.length;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength=this.workingHoursData.length;\r\n        console.log(totallength);\r\n        return `${averageHours} hrs ${averageMinutes} mins`;\r\n       \r\n      }\r\n      return null;\r\n    },\r\n\r\nWeekHours() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / 5;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength = this.filteredWorkingHoursData.length;\r\n         console.log(totallength);\r\n        return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n      }\r\n      return null;\r\n    },\r\n    MonthHours() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.WorkingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.WorkingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength = this.filteredWorkingHoursData.length;\r\n         console.log(totallength);\r\n        return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n\r\n      }\r\n      return null;\r\n    },\r\n    chartData() {\r\n      return {\r\n        labels: ['Today', 'Week', 'Month'],\r\n        datasets: [{\r\n          data: [\r\n        { value: 0, max: 9 },\r\n        { value: 0, max: 45 },\r\n        { value: 0, max: 180 }\r\n      ],\r\n          backgroundColor: [\r\n            'rgba(255, 26, 104, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n            'rgba(255, 206, 86, 0.2)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 26, 104, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n          borderSkipped: false,\r\n          borderRadius: 5,\r\n          barPercentage: 0.2,\r\n          categoryPercentage: 0.5,\r\n        }]\r\n      };\r\n    },\r\n    getteam() {\r\n      return this.$store.getters.getTeamMembers;\r\n    },\r\n    chartOptions() {\r\n      return {\r\n        indexAxis: 'y',\r\n        plugins: {\r\n          legend: { display: false }\r\n        },\r\n        scales: {\r\n          x: { grid: { display: false }, ticks: { display: false } },\r\n          y: { beginAtZero: true, grid: { display: false }, ticks: { display: false } }\r\n        }\r\n      };\r\n    },\r\n    progressBarPlugin() {\r\n  return {\r\n    beforeDatasetDraw(chart) {\r\n      const { ctx, chartArea: { left, right, width, height }, scales: { y } } = chart;\r\n      ctx.save();\r\n\r\n      const dataset = chart.data.datasets[0];\r\n      const barHeight = height / y.ticks.length * dataset.barPercentage * dataset.categoryPercentage;\r\n\r\n      dataset.data.forEach((data, index) => {\r\n        const yPosition = y.getPixelForValue(index) - barHeight / 2;\r\n\r\n        ctx.font = '15px sans-serif';\r\n        ctx.fillStyle = 'rgba(102, 102, 102, 1)';\r\n        ctx.textAlign = 'left';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.fillText(chart.data.labels[index], left, yPosition - 10);\r\n        const dataText = `${data.value}/${data.max} Hrs`;\r\n        ctx.font = 'bold 15px sans-serif';\r\n        ctx.textAlign = 'right';\r\n        ctx.fillText(dataText, right, yPosition - 10);\r\n        const barWidth = width * (data.value / data.max);\r\n        ctx.fillStyle = dataset.borderColor[index];\r\n        ctx.fillRect(left, yPosition, barWidth, barHeight);\r\n      });\r\n\r\n      ctx.restore();\r\n    }\r\n  };\r\n}\r\n  },\r\n  methods:{\r\n    initializePunchValues() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const record = this.workingHoursData[0];\r\n        this.punchValues.Intime1 = record.Intime[0];\r\n        this.punchValues.Intime2 = record.Intime[1];\r\n        this.punchValues.Outtime1 = record.Outtime[0];\r\n        this.punchValues.Outtime2 = record.Outtime[1];\r\n        this.punchValues.Intime3 = record.Intime[2] || [];\r\n        this.punchValues.Outtime3 = record.Outtime[2] || [];\r\n      }\r\n      this.updateEnteries();\r\n      this.avgcheckin();\r\n      this.avgCheckOut();\r\n      this.OntimePercentage();\r\n      this.averageHours1();\r\n       this.MonthHours1();\r\n       this.WeekHours1();\r\n    },\r\n    getPunchDetails(record) {\r\n      this.punchValues.Intime1 = record.Intime[0];\r\n      this.punchValues.Intime2 = record.Intime[1];\r\n      this.punchValues.Outtime1 = record.Outtime[0];\r\n      this.punchValues.Outtime2 = record.Outtime[1];\r\n      this.punchValues.Intime3 = record.Intime[2] || [];\r\n      this.punchValues.Outtime3 = record.Outtime[2] || [];\r\n    },\r\n    updateEnteries(){\r\n      const attendanceDates = {};\r\n  const referenceDate = '01/01/2000';\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      const { date, inTime, outTime } = attendance;\r\n      if (!attendanceDates[date]) {\r\n        attendanceDates[date] = {\r\n          date: date,\r\n          Intime: [],\r\n          Outtime: [],\r\n          totalDifference: 0,\r\n        };\r\n      }\r\n      attendanceDates[date].Intime.push(inTime);\r\n      if (outTime) {\r\n        const intimeDate = new Date(`${referenceDate} ${inTime}`);\r\n        const outtimeDate = new Date(`${referenceDate} ${outTime}`);\r\n        const diff = Math.abs(outtimeDate - intimeDate);\r\n        attendanceDates[date].totalDifference += diff;\r\n        attendanceDates[date].Outtime.push(outTime);\r\n      }\r\n    });\r\n  });\r\n  const  marchpresentdays= Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n  const date = new Date(dateInfo.date);\r\n  const month = date.getMonth();\r\n  if (month === 2) {\r\n    return count + 1; \r\n  }\r\n  return count;\r\n}, 0);\r\nconsole.log(\"🚀 ~ no of days present in MarchMonth:\", marchpresentdays);\r\nconst  AprilPresentDays= Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n  const date = new Date(dateInfo.date);\r\n  const month = date.getMonth();\r\n  if (month === 3) {\r\n    return count + 1; \r\n  }\r\n  return count;\r\n}, 0);\r\n\r\nconsole.log(\"🚀 ~ no of days present in April Month:\", AprilPresentDays);\r\n  const earlyentry3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n      const month = new Date(dateInfo.date).getMonth();\r\n      if (month === 2) {\r\n        return count + dateInfo.Intime.filter(time => time <'09:00:00').length;\r\n        \r\n      }\r\n      return count;\r\n    }, 0);\r\n  const ontime3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 2) {\r\n    return count + dateInfo.Intime.filter(time => time === '09:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const lateentry3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 2) {\r\n    return count + dateInfo.Intime.filter(time => time > '09:00:00' && time < '12:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const overtime3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 2) {\r\n    return count + dateInfo.Outtime.filter(time => time > '18:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\nconst earlyLeave3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n  const month = new Date(dateInfo.date).getMonth();\r\n  if (month === 2) {\r\n  return count + dateInfo.Outtime.filter(time => time > '15:30:00' && time < '18:00:00').length;\r\n  }\r\n  return count;\r\n}, 0);\r\n  // console.log(\"🚀 ~ early:\", earlyentry3);\r\n  // console.log(\"🚀 ~ ontime:\", ontime3);\r\n  // console.log(\"🚀 ~ lateentry:\", lateentry3);\r\n  // console.log(\"🚀 ~ overtime:\", overtime3);\r\n  // console.log(\"🚀 ~ earlyLeave:\", earlyLeave3);\r\n  this.chartData3.datasets[0].data[2] = earlyentry3;\r\n      this.chartData3.datasets[1].data[2] = ontime3;\r\n      this.chartData3.datasets[2].data[2] = lateentry3;\r\n      this.chartData3.datasets[3].data[2] = earlyLeave3;\r\n      this.chartData3.datasets[4].data[2] = overtime3;\r\n\r\n     \r\n  \r\n  const earlyentry4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n      const month = new Date(dateInfo.date).getMonth();\r\n      if (month === 3) {\r\n        return count + dateInfo.Intime.filter(time => time <'09:00:00').length;\r\n      }\r\n      return count;\r\n    }, 0);\r\n  const ontime4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 3) {\r\n    return count + dateInfo.Intime.filter(time => time === '09:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const lateentry4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 3) {\r\n    return count + dateInfo.Intime.filter(time => time > '09:00:00' && time < '12:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const overtime4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 3) {\r\n    return count + dateInfo.Outtime.filter(time => time > '18:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\nconst earlyLeave4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n  const month = new Date(dateInfo.date).getMonth();\r\n  if (month === 4) {\r\n  return count + dateInfo.Outtime.filter(time => time > '15:30:00' && time < '18:00:00').length;\r\n  }\r\n  return count;\r\n}, 0);\r\n  \r\n  this.chartData3.datasets[0].data[3] = earlyentry4;\r\n      this.chartData3.datasets[1].data[3] = ontime4;\r\n      this.chartData3.datasets[2].data[3] = lateentry4;\r\n      this.chartData3.datasets[3].data[3] = earlyLeave4;\r\n      this.chartData3.datasets[4].data[3] = overtime4;\r\n\r\n  const result = Object.values(attendanceDates).map(dateInfo => {\r\n    const totalHours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n    const totalMinutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n    return {\r\n      date: dateInfo.date,\r\n      Intime: dateInfo.Intime,\r\n      Outtime: dateInfo.Outtime,\r\n      totalHours: totalHours,\r\n      totalMinutes: totalMinutes\r\n    };\r\n  })\r\n  return result;\r\n},\r\navgcheckin(){\r\n  let totalFilteredTime = 0;\r\n  let filteredEntryCount = 0;\r\n\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      const { inTime } = attendance;\r\n      const timeParts = inTime.split(':').map(part => parseInt(part, 10));\r\n      const hour = timeParts[0];\r\n      const minute = timeParts[1];\r\n      const second = timeParts[2];\r\n\r\n      if (hour >= 8 && hour < 10) {\r\n        const timeMilliseconds = (hour * 3600 + minute * 60 + second) * 1000;\r\n        totalFilteredTime += timeMilliseconds;\r\n        filteredEntryCount++;\r\n      }\r\n    });\r\n  });\r\n\r\n  const averageTimeMilliseconds = filteredEntryCount ? totalFilteredTime / filteredEntryCount : 0;\r\n  const averageHour = Math.floor(averageTimeMilliseconds / (1000 * 60 * 60));\r\n  const averageMinute = Math.floor((averageTimeMilliseconds % (1000 * 60 * 60)) / (1000 * 60));\r\n  const averageSecond = Math.floor((averageTimeMilliseconds % (1000 * 60)) / 1000);\r\n  const averageCheckIn = `${averageHour}:${averageMinute}:${averageSecond}`;\r\n\r\n  console.log(\"🚀 ~ averageCheckIn :\", averageCheckIn);\r\n  this.summaryavgcheckIn=averageCheckIn \r\n  return averageCheckIn;\r\n},\r\navgCheckOut() {\r\n  let totalFilteredTime = 0;\r\n  let filteredEntryCount = 0;\r\n  this.employeeList.forEach(employee => {\r\n    if (employee.attendances && Array.isArray(employee.attendances)) {\r\n      employee.attendances.forEach(attendance => {\r\n        if (attendance.inTime) {\r\n          const timeParts = attendance.inTime.split(':').map(part => parseInt(part, 10));\r\n          if (timeParts.length === 3) { \r\n            const hour = timeParts[0];\r\n            const minute = timeParts[1];\r\n            const second = timeParts[2];\r\n\r\n            if (hour >= 17 && hour < 18) {\r\n              const timeMilliseconds = (hour * 3600 + minute * 60 + second) * 1000;\r\n              totalFilteredTime += timeMilliseconds;\r\n              filteredEntryCount++;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  const averageTimeMilliseconds = filteredEntryCount ? totalFilteredTime / filteredEntryCount : 0;\r\n  const averageHour = Math.floor(averageTimeMilliseconds / (1000 * 60 * 60));\r\n  const averageMinute = Math.floor((averageTimeMilliseconds % (1000 * 60 * 60)) / (1000 * 60));\r\n  const averageSecond = Math.floor((averageTimeMilliseconds % (1000 * 60)) / 1000);\r\n\r\n  const formattedHour = String(averageHour).padStart(2, '0');\r\n  const formattedMinute = String(averageMinute).padStart(2, '0');\r\n  const formattedSecond = String(averageSecond).padStart(2, '0');\r\n\r\n  const averageCheckOut = `${formattedHour}:${formattedMinute}:${formattedSecond}`;\r\n\r\n  console.log(\"🚀 ~ averageCheckOut :\", averageCheckOut);\r\n  this.summaryavgCheckOut = averageCheckOut;\r\n  return averageCheckOut;\r\n},\r\nOntimePercentage(){\r\n  let onTimeCount = 0;\r\n  let totalEntriesCount = 0;\r\n\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      const { inTime } = attendance;\r\n      const timeParts = inTime.split(':').map(part => parseInt(part, 10));\r\n      const hour = timeParts[0];\r\n      const minute = timeParts[1];\r\n      const second = timeParts[2];\r\n      totalEntriesCount++;\r\n      if (hour === 9 && minute === 0 && second === 0) {\r\n        onTimeCount++; \r\n      }\r\n    });\r\n  });\r\n\r\n  const onTimePercentage = Math.round((onTimeCount / totalEntriesCount) * 100);\r\n  console.log(\"🚀 ~ onTimePercentage:\", onTimePercentage + '%');\r\nthis.ontimePercentage= onTimePercentage\r\n  return onTimePercentage + '%';\r\n},\r\n    renderChart() {\r\n      const ctx = this.$refs.myChart3.getContext('2d');\r\n      this.chart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: this.chartData3,\r\n        options: this.chartOptions3\r\n      });\r\n    },\r\n    WeekHours1() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / 5;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength = this.workingHoursData.length;\r\n         console.log(totallength);\r\n         this.chartData.datasets[0].data[1] = { value: averageHours, max: 45 };\r\n        return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n      }\r\n      return null;\r\n    },\r\n     MonthHours1() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength = this.workingHoursData.length;\r\n         console.log(totallength);\r\n          this.chartData.datasets[0].data[2] = { value: averageHours, max: 180 };\r\n        return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n      }\r\n      return null;\r\n    },\r\n    averageHours1() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / this.workingHoursData.length;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength=this.workingHoursData.length;\r\n        console.log(totallength);\r\n        this.chartData.datasets[0].data[0] = { value: averageHours, max: 9 };\r\n        return `${averageHours} hrs ${averageMinutes} mins`;\r\n       \r\n      }\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\n</script>\r\n<style>\r\n.mainHeading {\r\n  background-color: aqua;\r\n}\r\n\r\n.mainContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n\r\n.bg-dark {\r\n  background-color: #343a40 !important;\r\n}\r\n\r\n.nav-link {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.nav-link i {\r\n  margin-right: 5px;\r\n}\r\n\r\n.content-area {\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n}\r\n.custom-icon-size {\r\n  font-size: 3em; \r\n}\r\n.card-header {\r\n  border-bottom: none; \r\n}\r\n.table {\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n}\r\n.MainHeading {\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n  color: red;\r\n}\r\n.search {\r\n   padding-top: 12px;\r\n}\r\n.mainnav{\r\n  padding-top: 40px;\r\n} \r\n@media (max-width: 768px) {\r\n  .mainHeading {\r\n    text-align: center;\r\n  }\r\n\r\n  .nav-link span {\r\n    display: inline !important;\r\n  }\r\n}\r\n.bottom-padding {\r\n        padding-bottom: 40px; \r\n    }\r\n    .punchValues {\r\n  color: black;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  font-size: 20px;\r\n}\r\n.punchheading {\r\n  color: red;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  font-size: 20px;\r\n}\r\n.insidepunchValues{\r\n  display: flex;\r\n  padding-top: 30px;\r\n  padding-left: 40px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}