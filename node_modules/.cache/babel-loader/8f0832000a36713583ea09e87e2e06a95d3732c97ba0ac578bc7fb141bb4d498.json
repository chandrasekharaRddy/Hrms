{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_2 = {\n  key: 'employeeTable',\n  class: \"table table-bordered\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Employee_Id\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeName\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeRole\")])], -1 /* HOISTED */);\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 'workingHoursTable',\n  class: \"table table-bordered\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Total Working Hours\")])], -1 /* HOISTED */);\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = {\n  key: 'employeeDetailsTable'\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Intime\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Outtime\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Employee Table \"), $data.employeeTable && $options.employeeList && $options.employeeList.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.employeeList, (employee, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: 'employee_' + index,\n      onClick: $event => $options.showEmployeeDetails(employee)\n    }, [_createElementVNode(\"td\", null, _toDisplayString(employee.empId), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employee.empName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employee.empRole), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Working Hours Table \"), $data.workingHours ? (_openBlock(), _createElementBlock(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.workingHoursData, (record, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: 'record_' + index,\n      onClick: $event => $options.getValues(record.date)\n    }, [_createElementVNode(\"td\", null, _toDisplayString(record.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.totalHours) + \" hrs \" + _toDisplayString(record.totalMinutes) + \" mins\", 1 /* TEXT */)], 8 /* PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _hoisted_8, _hoisted_9, _createCommentVNode(\" Employee Details Table \"), $data.EmployeeDetailsTable ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [$data.selectedEmployee ? (_openBlock(), _createElementBlock(\"table\", {\n    key: 'employeeDetailsTable_' + $data.selectedEmployee.empId,\n    class: \"table table-bordered\"\n  }, [_hoisted_11, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredAttendances, (attendance, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: 'attendance_' + index,\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.getWorkingTable && $options.getWorkingTable(...args))\n    }, [_createElementVNode(\"td\", null, _toDisplayString($data.selectedEmployee.empId), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(attendance.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(attendance.inTime), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(attendance.outTime), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","$data","employeeTable","$options","employeeList","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","employee","index","onClick","$event","showEmployeeDetails","_toDisplayString","empId","empName","empRole","workingHours","_hoisted_5","_hoisted_6","workingHoursData","record","getValues","date","totalHours","totalMinutes","_hoisted_8","_hoisted_9","EmployeeDetailsTable","_hoisted_10","selectedEmployee","_hoisted_11","filteredAttendances","attendance","_cache","args","getWorkingTable","inTime","outTime"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <!-- Employee Table -->\r\n    <table v-if=\"employeeTable && employeeList && employeeList.length > 0\" :key=\"'employeeTable'\" class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Employee_Id</th>\r\n          <th>EmployeeName</th>\r\n          <th>EmployeeRole</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in employeeList\" :key=\"'employee_' + index\" @click=\"showEmployeeDetails(employee)\">\r\n          <td>{{ employee.empId }}</td>\r\n          <td>{{ employee.empName }}</td>\r\n          <td>{{ employee.empRole }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Working Hours Table -->\r\n    <table v-if=\"workingHours\" :key=\"'workingHoursTable'\" class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Total Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(record, index) in workingHoursData\" :key=\"'record_' + index\" @click=\"getValues(record.date)\">\r\n          <td>{{ record.date }}</td>\r\n          <td>{{ record.totalHours }} hrs {{ record.totalMinutes }} mins</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <br>\r\n    <br>\r\n    <!-- Employee Details Table -->\r\n    <div v-if=\"EmployeeDetailsTable\" :key=\"'employeeDetailsTable'\">\r\n      <table v-if=\"selectedEmployee\" :key=\"'employeeDetailsTable_' + selectedEmployee.empId\" class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>EmployeeId</th>\r\n            <th>Date</th>\r\n            <th>Intime</th>\r\n            <th>Outtime</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(attendance, index) in filteredAttendances\" :key=\"'attendance_' + index\" @click=\"getWorkingTable\">\r\n            <td>{{ selectedEmployee.empId }}</td>\r\n            <td>{{ attendance.date }}</td>\r\n            <td>{{ attendance.inTime }}</td>\r\n            <td>{{ attendance.outTime }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      workingHours: false,\r\n      selectedDate: null,\r\n      employeeTable: true,\r\n      EmployeeDetailsTable: false,\r\n      hours: true\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n        const userId = this.userDetails ? this.userDetails.userId : null;\r\n        if (userId) {\r\n          const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\r\n          const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n            const key = employee.empId;\r\n            if (!acc[key]) {\r\n              acc[key] = {\r\n                empId: employee.empId,\r\n                empName: employee.empName,\r\n                empRole: employee.empRole,\r\n                attendances: []\r\n              };\r\n            }\r\n            acc[key].attendances.push(employee);\r\n            return acc;\r\n          }, {});\r\n          const uniqueEmployees = Object.values(groupedEmployees);\r\n          return uniqueEmployees;\r\n        }\r\n      }\r\n      return [];\r\n    },\r\n    filteredAttendances() {\r\n      if (this.selectedEmployee && this.selectedDate) {\r\n        return this.selectedEmployee.attendances.filter(attendance => attendance.date === this.selectedDate);\r\n      }\r\n      return [];\r\n    },\r\n    workingHoursData() {\r\n      const attendanceDates = {};\r\n      this.employeeList.forEach(employee => {\r\n        employee.attendances.forEach(attendance => {\r\n          if (!attendanceDates[attendance.date]) {\r\n            attendanceDates[attendance.date] = {\r\n              date: attendance.date,\r\n              totalDifference: 0\r\n            };\r\n          }\r\n          if (attendance.outTime) {\r\n            const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\r\n            const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\r\n            const diff = Math.abs(outtimeDate - intimeDate);\r\n            attendanceDates[attendance.date].totalDifference += diff;\r\n          }\r\n        });\r\n      });\r\n\r\n      const result = Object.values(attendanceDates).map(dateInfo => {\r\n        const hours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n        const minutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n        return {\r\n          date: dateInfo.date,\r\n          totalHours: hours,\r\n          totalMinutes: minutes,\r\n        };\r\n      });\r\n\r\n      return result;\r\n    },\r\n  },\r\n  methods: {\r\n    showEmployeeDetails(employee) {\r\n      this.selectedEmployee = employee;\r\n      this.workingHours = true;\r\n      this.employeeTable = false;\r\n    },\r\n    getValues(date) {\r\n      if (date) {\r\n        this.selectedDate = date;\r\n        this.workingHours = false;\r\n        this.EmployeeDetailsTable = true; \r\n      } else {\r\n        this.workingHours = true; \r\n      }\r\n      this.employeeTable = false;\r\n    },\r\n    getWorkingTable() {\r\n      this.workingHours = true;\r\n      this.selectedEmployee = false;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ntbody tr:nth-child(odd) {\r\n  background: #ccc;\r\n}\r\n\r\ntable tr:hover td {\r\n  background: #839192;\r\n  color: #000;\r\n  transition: all 0.3s ease-in;\r\n  cursor: pointer;\r\n}\r\n\r\n.table th {\r\n  padding-left: 200px;\r\n  border-bottom: 1px solid black, 3px double black;  \r\n}\r\n\r\n.table td {\r\n  padding-left: 20px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\nth {\r\n  font-family: 'Arial';\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAE8CC,GAAG,EAAE,eAAe;EAAED,KAAK,EAAC;;gCAClGE,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAqB,YAAjB,cAAY,E;;;EAaMD,GAAG,EAAE,mBAAmB;EAAED,KAAK,EAAC;;gCAC1DE,mBAAA,CAKQ,gB,aAJNA,mBAAA,CAGK,a,aAFHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAA4B,YAAxB,qBAAmB,E;;gCAW7BA,mBAAA,CAAI;gCACJA,mBAAA,CAAI;;EAE8BD,GAAG,EAAE;AAAsB;iCAEzDC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAgB,YAAZ,SAAO,E;;uBA7CrBC,mBAAA,CA0DM,OA1DNC,UA0DM,GAzDJC,mBAAA,oBAAuB,EACVC,KAAA,CAAAC,aAAa,IAAIC,QAAA,CAAAC,YAAY,IAAID,QAAA,CAAAC,YAAY,CAACC,MAAM,Q,cAAjEP,mBAAA,CAeQ,SAfRQ,UAeQ,GAdNC,UAMQ,EACRV,mBAAA,CAMQ,iB,kBALNC,mBAAA,CAIKU,SAAA,QAAAC,WAAA,CAJ2BN,QAAA,CAAAC,YAAY,GAAhCM,QAAQ,EAAEC,KAAK;yBAA3Bb,mBAAA,CAIK;MAJ0CF,GAAG,gBAAgBe,KAAK;MAAGC,OAAK,EAAAC,MAAA,IAAEV,QAAA,CAAAW,mBAAmB,CAACJ,QAAQ;QAC3Gb,mBAAA,CAA6B,YAAAkB,gBAAA,CAAtBL,QAAQ,CAACM,KAAK,kBACrBnB,mBAAA,CAA+B,YAAAkB,gBAAA,CAAxBL,QAAQ,CAACO,OAAO,kBACvBpB,mBAAA,CAA+B,YAAAkB,gBAAA,CAAxBL,QAAQ,CAACQ,OAAO,iB;2EAK7BlB,mBAAA,yBAA4B,EACfC,KAAA,CAAAkB,YAAY,I,cAAzBrB,mBAAA,CAaQ,SAbRsB,UAaQ,GAZNC,UAKQ,EACRxB,mBAAA,CAKQ,iB,kBAJNC,mBAAA,CAGKU,SAAA,QAAAC,WAAA,CAHyBN,QAAA,CAAAmB,gBAAgB,GAAlCC,MAAM,EAAEZ,KAAK;yBAAzBb,mBAAA,CAGK;MAH4CF,GAAG,cAAce,KAAK;MAAGC,OAAK,EAAAC,MAAA,IAAEV,QAAA,CAAAqB,SAAS,CAACD,MAAM,CAACE,IAAI;QACpG5B,mBAAA,CAA0B,YAAAkB,gBAAA,CAAnBQ,MAAM,CAACE,IAAI,kBAClB5B,mBAAA,CAAmE,YAAAkB,gBAAA,CAA5DQ,MAAM,CAACG,UAAU,IAAG,OAAK,GAAAX,gBAAA,CAAGQ,MAAM,CAACI,YAAY,IAAG,OAAK,gB;2EAKpEC,UAAI,EACJC,UAAI,EACJ7B,mBAAA,4BAA+B,EACpBC,KAAA,CAAA6B,oBAAoB,I,cAA/BhC,mBAAA,CAmBM,OAnBNiC,WAmBM,GAlBS9B,KAAA,CAAA+B,gBAAgB,I,cAA7BlC,mBAAA,CAiBQ;IAjBwBF,GAAG,4BAA4BK,KAAA,CAAA+B,gBAAgB,CAAChB,KAAK;IAAErB,KAAK,EAAC;MAC3FsC,WAOQ,EACRpC,mBAAA,CAOQ,iB,kBANNC,mBAAA,CAKKU,SAAA,QAAAC,WAAA,CAL6BN,QAAA,CAAA+B,mBAAmB,GAAzCC,UAAU,EAAExB,KAAK;yBAA7Bb,mBAAA,CAKK;MALmDF,GAAG,kBAAkBe,KAAK;MAAGC,OAAK,EAAAwB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAElC,QAAA,CAAAmC,eAAA,IAAAnC,QAAA,CAAAmC,eAAA,IAAAD,IAAA,CAAe;QACzGxC,mBAAA,CAAqC,YAAAkB,gBAAA,CAA9Bd,KAAA,CAAA+B,gBAAgB,CAAChB,KAAK,kBAC7BnB,mBAAA,CAA8B,YAAAkB,gBAAA,CAAvBoB,UAAU,CAACV,IAAI,kBACtB5B,mBAAA,CAAgC,YAAAkB,gBAAA,CAAzBoB,UAAU,CAACI,MAAM,kBACxB1C,mBAAA,CAAiC,YAAAkB,gBAAA,CAA1BoB,UAAU,CAACK,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}