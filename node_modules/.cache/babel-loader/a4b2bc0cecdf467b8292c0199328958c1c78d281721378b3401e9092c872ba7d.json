{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<table class=\\\"table table-bordered\\\"><thead><tr><th>Date</th><th>Working Hours</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><table class=\\\"table table-bordered\\\"><thead class=\\\"table-dark\\\"><tr><th>Name</th><th>Date</th><th>InTime1</th><th>OutTime1</th><th>InTime2</th><th>OutTime2</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>\", 2);\nconst _hoisted_3 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [..._hoisted_3]);\n}","map":{"version":3,"names":["_hoisted_1","_createElementBlock","_hoisted_3"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":[" <template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime1</th>\r\n          <th>OutTime1</th>\r\n          <th>InTime2</th>\r\n          <th>OutTime2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n      goals: [],\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  watch: {\r\n    userData: {\r\n      handler(newValue) {\r\n        this.goals = [newValue];\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    logout(user) {\r\n      const currentDate = new Date();\r\n      user.signOut = currentDate.toLocaleTimeString();\r\n      this.$store.dispatch('updateUserData', user);\r\n      this.goals = [...this.goals];\r\n    },\r\n    selectDate(date) {\r\n      const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n      this.workingHours = selectedGoals.map((goal) => ({\r\n        date: goal.presentDate,\r\n        hours: this.calculate(goal.presentTime, goal.signOut),\r\n      }));\r\n    },\r\n    calculate(signIn, signOut) {\r\n      if (signIn && signOut) {\r\n        const signInTime = new Date(`2000-01-01 ${signIn}`);\r\n        const signOutTime = new Date(`2000-01-01 ${signOut}`);\r\n        const timeDiff = signOutTime - signInTime;\r\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n        const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n        return `${hours} hrs ${minutes} mins`;\r\n      } else {\r\n        return \"0 hrs 0 mins\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script> \r\n\r\n\r\n"],"mappings":";;oBAEIA,UAaQ,C;;uBAdVC,mBAAA,CAoCM,iBAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}