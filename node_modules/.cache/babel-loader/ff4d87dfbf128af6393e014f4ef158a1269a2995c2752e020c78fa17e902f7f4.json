{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      selectedDateGoals: [],\n      workingHours: []\n    };\n  },\n  created() {\n    axios.get(\"http://localhost:5296/api/Todoapp/GetNotes\").then(response => {\n      this.selectedDateGoals = response.data;\n      this.calculateWorkingHours();\n      console.log(response.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  },\n  methods: {\n    calculateWorkingHours() {\n      this.workingHours = this.selectedDateGoals.map(goal => {\n        // Convert time strings to hours\n        const inTime1 = parseFloat(goal.Intime1.split(\":\")[0]) + parseFloat(goal.Intime1.split(\":\")[1]) / 60;\n        const outTime1 = parseFloat(goal.Outtime1.split(\":\")[0]) + parseFloat(goal.Outtime1.split(\":\")[1]) / 60;\n        const inTime2 = parseFloat(goal.Intime2.split(\":\")[0]) + parseFloat(goal.Intime2.split(\":\")[1]) / 60;\n        const outTime2 = parseFloat(goal.Outtime2.split(\":\")[0]) + parseFloat(goal.Outtime2.split(\":\")[1]) / 60;\n\n        // Calculate total working hours\n        const totalHours = outTime1 - inTime1 + (outTime2 - inTime2);\n        console.log(\"ðŸš€ ~ calculateWorkingHours ~ totalHours :\", totalHours);\n        return {\n          Date: goal.Date,\n          WorkingHours: totalHours.toFixed(2) // Display total hours rounded to 2 decimal places\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","selectedDateGoals","workingHours","created","get","then","response","calculateWorkingHours","console","log","catch","error","methods","map","goal","inTime1","parseFloat","Intime1","split","outTime1","Outtime1","inTime2","Intime2","outTime2","Outtime2","totalHours","Date","WorkingHours","toFixed"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\hrmsAttendenceLevel.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(hour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ hour.Date }}</td>\r\n          <td>{{ hour.workingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime1</th>\r\n          <th>OutTime1</th>\r\n          <th>InTime2</th>\r\n          <th>OutTime2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in selectedDateGoals\" :key=\"index\">\r\n          <td>{{ goal.name }}</td>\r\n          <td>{{ goal.Date }}</td>\r\n          <td>{{ goal.Intime1 }}</td>\r\n          <td>{{ goal.Outtime1 }}</td>\r\n          <td>{{ goal.Intime2 }}</td>\r\n          <td>{{ goal.Outtime2 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDateGoals: [],\r\n      workingHours:[]\r\n    };\r\n  },\r\n  created() {\r\n    axios.get(\"http://localhost:5296/api/Todoapp/GetNotes\")\r\n      .then(response => {\r\n        this.selectedDateGoals = response.data;\r\n        this.calculateWorkingHours();\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  },\r\n  methods: {\r\n    calculateWorkingHours(){\r\n      this.workingHours = this.selectedDateGoals.map(goal => {\r\n    // Convert time strings to hours\r\n    const inTime1 = parseFloat(goal.Intime1.split(\":\")[0]) + parseFloat(goal.Intime1.split(\":\")[1]) / 60;\r\n    const outTime1 = parseFloat(goal.Outtime1.split(\":\")[0]) + parseFloat(goal.Outtime1.split(\":\")[1]) / 60;\r\n    const inTime2 = parseFloat(goal.Intime2.split(\":\")[0]) + parseFloat(goal.Intime2.split(\":\")[1]) / 60;\r\n    const outTime2 = parseFloat(goal.Outtime2.split(\":\")[0]) + parseFloat(goal.Outtime2.split(\":\")[1]) / 60;\r\n\r\n    // Calculate total working hours\r\n    const totalHours = (outTime1 - inTime1) + (outTime2 - inTime2);\r\n    console.log(\"ðŸš€ ~ calculateWorkingHours ~ totalHours :\", totalHours )\r\n\r\n    return {\r\n      Date: goal.Date,\r\n      WorkingHours: totalHours.toFixed(2) // Display total hours rounded to 2 decimal places\r\n    };\r\n  });\r\n}\r\n}\r\n}\r\n</script>\r\n"],"mappings":"AA4CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,EAAE;MACrBC,YAAY,EAAC;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRJ,KAAK,CAACK,GAAG,CAAC,4CAA4C,EACnDC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACL,iBAAgB,GAAIK,QAAQ,CAACN,IAAI;MACtC,IAAI,CAACO,qBAAqB,CAAC,CAAC;MAC5BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACN,IAAI,CAAC;IAC5B,CAAC,EACAU,KAAK,CAACC,KAAI,IAAK;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EACDC,OAAO,EAAE;IACPL,qBAAqBA,CAAA,EAAE;MACrB,IAAI,CAACL,YAAW,GAAI,IAAI,CAACD,iBAAiB,CAACY,GAAG,CAACC,IAAG,IAAK;QACzD;QACA,MAAMC,OAAM,GAAIC,UAAU,CAACF,IAAI,CAACG,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIF,UAAU,CAACF,IAAI,CAACG,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;QACpG,MAAMC,QAAO,GAAIH,UAAU,CAACF,IAAI,CAACM,QAAQ,CAACF,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIF,UAAU,CAACF,IAAI,CAACM,QAAQ,CAACF,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;QACvG,MAAMG,OAAM,GAAIL,UAAU,CAACF,IAAI,CAACQ,OAAO,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIF,UAAU,CAACF,IAAI,CAACQ,OAAO,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;QACpG,MAAMK,QAAO,GAAIP,UAAU,CAACF,IAAI,CAACU,QAAQ,CAACN,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIF,UAAU,CAACF,IAAI,CAACU,QAAQ,CAACN,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;;QAEvG;QACA,MAAMO,UAAS,GAAKN,QAAO,GAAIJ,OAAO,IAAKQ,QAAO,GAAIF,OAAO,CAAC;QAC9Db,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEgB,UAAW;QAEpE,OAAO;UACLC,IAAI,EAAEZ,IAAI,CAACY,IAAI;UACfC,YAAY,EAAEF,UAAU,CAACG,OAAO,CAAC,CAAC,EAAE;QACtC,CAAC;MACH,CAAC,CAAC;IACJ;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}