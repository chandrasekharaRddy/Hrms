{"ast":null,"code":"export default {\n  data() {\n    return {\n      goals: [],\n      selectedDate: null,\n      workingHours: \"\"\n    };\n  },\n  props: [\"useDate\"],\n  created() {\n    this.addItem();\n  },\n  methods: {\n    addItem() {\n      this.goals.date = this.useDate.presentDate;\n      this.goals.signIn = this.useDate.presentTime;\n      console.log(\"ðŸš€ ~ file: attendenceForm.vue:75 ~ addItem ~ this.goals.dat:\", this.goals.date);\n    },\n    logout() {\n      const logoutUser = this.goals.find(u => u.username === this.goals.username);\n      if (logoutUser) {\n        const currentDate = new Date();\n        logoutUser.signOut = currentDate.toLocaleTimeString();\n      }\n    }\n  }\n};\n\n// selectDate(date) {\n//     const selectedGoals = this.goals.filter((goal) => goal.date === date);\n//     this.workingHours = selectedGoals.map((goal) => ({\n//       date: goal.date,\n//       hours: this.calculate(goal.signIn, goal.signOut),\n//     }));\n//   },\n// //workingHours\n//   calculate(signIn, signOut) {\n//     if (signIn && signOut) {\n//       const signInTime = new Date(`2000-01-01 ${signIn}`);\n//       const signOutTime = new Date(`2000-01-01 ${signOut}`);\n//       const timeDiff = signOutTime - signInTime;\n//       const hours = Math.floor(timeDiff / (1000 * 60 * 60));\n//       const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\n//       return `${hours} hrs ${minutes} mins `;\n//     } else {\n//       return \"0\";\n//     }\n//   },\n// }","map":{"version":3,"names":["data","goals","selectedDate","workingHours","props","created","addItem","methods","date","useDate","presentDate","signIn","presentTime","console","log","logout","logoutUser","find","u","username","currentDate","Date","signOut","toLocaleTimeString"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["\r\n<template>\r\n  <div>\r\n      <table class=\"table table-bordered\">\r\n          <thead>\r\n             <tr>\r\n               <th>Date</th>\r\n               <th>WorkingHours</th>\r\n              </tr>\r\n          </thead>\r\n              <tbody>\r\n                <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n              </tbody>\r\n          </table>\r\n  </div>\r\n  <div>\r\n      <table  class=\"table table-bordered\">\r\n          <thead class=\"table-dark\">\r\n              <tr>\r\n              <th>Name</th>\r\n              <th>Date</th>\r\n              <th>SignIn</th>\r\n              <th>signOut</th>\r\n              <th>signOut</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n            <td>{{ goal.username }}</td>\r\n            <td>{{ goal.date}}</td>\r\n            <!-- <td @click=\"selectDate(goal.date)\">{{ goal.date }}</td> -->\r\n            <td>{{ goal.signIn}}</td>\r\n            <td>{{goal.signOut}}</td>\r\n            <td><button @click=\"logout(goal)\">signOut</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      goals:[],\r\n      selectedDate: null,\r\n    workingHours:\"\",\r\n    };\r\n  },\r\n  props:[\"useDate\"],\r\n  created(){\r\n    this.addItem();\r\n  },\r\n  methods:{\r\naddItem(){\r\n  this.goals.date=this.useDate.presentDate\r\n  this.goals.signIn=this.useDate.presentTime\r\n  console.log(\"ðŸš€ ~ file: attendenceForm.vue:75 ~ addItem ~ this.goals.dat:\", this.goals.date)\r\n},\r\nlogout() {\r\n    const logoutUser = this.goals.find((u) => u.username === this.goals.username);\r\n    if (logoutUser) {\r\n      const currentDate = new Date();\r\n      logoutUser.signOut = currentDate.toLocaleTimeString();\r\n      \r\n    }\r\n  }\r\n  }\r\n}\r\n\r\n// selectDate(date) {\r\n//     const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n//     this.workingHours = selectedGoals.map((goal) => ({\r\n//       date: goal.date,\r\n//       hours: this.calculate(goal.signIn, goal.signOut),\r\n//     }));\r\n//   },\r\n// //workingHours\r\n//   calculate(signIn, signOut) {\r\n//     if (signIn && signOut) {\r\n//       const signInTime = new Date(`2000-01-01 ${signIn}`);\r\n//       const signOutTime = new Date(`2000-01-01 ${signOut}`);\r\n//       const timeDiff = signOutTime - signInTime;\r\n//       const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n//       const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n//       return `${hours} hrs ${minutes} mins `;\r\n//     } else {\r\n//       return \"0\";\r\n//     }\r\n//   },\r\n// }\r\n\r\n\r\n</script>\r\n\r\n"],"mappings":"AA2CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAC,EAAE;MACRC,YAAY,EAAE,IAAI;MACpBC,YAAY,EAAC;IACb,CAAC;EACH,CAAC;EACDC,KAAK,EAAC,CAAC,SAAS,CAAC;EACjBC,OAAOA,CAAA,EAAE;IACP,IAAI,CAACC,OAAO,CAAC,CAAC;EAChB,CAAC;EACDC,OAAO,EAAC;IACVD,OAAOA,CAAA,EAAE;MACP,IAAI,CAACL,KAAK,CAACO,IAAI,GAAC,IAAI,CAACC,OAAO,CAACC,WAAU;MACvC,IAAI,CAACT,KAAK,CAACU,MAAM,GAAC,IAAI,CAACF,OAAO,CAACG,WAAU;MACzCC,OAAO,CAACC,GAAG,CAAC,8DAA8D,EAAE,IAAI,CAACb,KAAK,CAACO,IAAI;IAC7F,CAAC;IACDO,MAAMA,CAAA,EAAG;MACL,MAAMC,UAAS,GAAI,IAAI,CAACf,KAAK,CAACgB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAO,KAAM,IAAI,CAAClB,KAAK,CAACkB,QAAQ,CAAC;MAC7E,IAAIH,UAAU,EAAE;QACd,MAAMI,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;QAC9BL,UAAU,CAACM,OAAM,GAAIF,WAAW,CAACG,kBAAkB,CAAC,CAAC;MAEvD;IACF;EACA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}