{"ast":null,"code":"export default {\n  data() {\n    return {\n      filteredWorkingHoursData: [],\n      filteredEmployeeData: []\n    };\n  },\n  computed: {\n    userData() {\n      const userData = this.$store.getters.getUserData.user || {};\n      return userData;\n    },\n    employeeData() {\n      return this.$store.getters.getUserData.employeeData || [];\n    },\n    uniqueEmployeeData() {\n      const uniqueIds = new Set();\n      return this.employeeData.filter(employee => {\n        if (!uniqueIds.has(employee.id)) {\n          uniqueIds.add(employee.id);\n          return true;\n        }\n        return false;\n      });\n    },\n    workingHoursData() {\n      return this.matchingWorkingHours();\n    }\n  },\n  methods: {\n    userDetails(id) {\n      this.filteredWorkingHoursData = this.workingHoursData.filter(entry => entry.id === id);\n    },\n    matchingWorkingHours() {\n      const workingHoursMap = new Map();\n      for (const employee of this.employeeData) {\n        const key = `${employee.date}-${employee.id}`;\n        if (!workingHoursMap.has(key)) {\n          workingHoursMap.set(key, {\n            id: employee.id,\n            date: employee.date,\n            workingHours: this.calculateWorkingHours(employee.intime, employee.outtime)\n          });\n        } else {\n          const existingEntry = workingHoursMap.get(key);\n          existingEntry.workingHours += this.calculateWorkingHours(employee.intime, employee.outtime);\n          workingHoursMap.set(key, existingEntry);\n        }\n      }\n      return Array.from(workingHoursMap.values());\n    },\n    calculateWorkingHours(intime, outtime) {\n      if (!outtime || outtime.trim() === '' || outtime === '0') {\n        return 0;\n      }\n      const [intimeHours, intimeMinutes] = intime.split(':').map(Number);\n      const [outtimeHours, outtimeMinutes] = outtime.split(':').map(Number);\n      const startTime = (intimeHours * 3600 + intimeMinutes * 60) * 1000;\n      const endTime = (outtimeHours * 3600 + outtimeMinutes * 60) * 1000;\n      const differenceInMilliseconds = endTime - startTime;\n      const differenceInHours = differenceInMilliseconds / (1000 * 60 * 60);\n      return differenceInHours;\n    },\n    getData(date) {\n      this.filteredEmployeeData = this.employeeData.filter(employee => employee.date === date && employee.id === this.filteredWorkingHoursData[0].id);\n      const uniqueDates = Array.from(new Set(this.filteredEmployeeData.map(employee => employee.date)));\n      this.filteredEmployeeData = uniqueDates.map(date => {\n        return this.filteredEmployeeData.find(employee => employee.date === date);\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","filteredWorkingHoursData","filteredEmployeeData","computed","userData","$store","getters","getUserData","user","employeeData","uniqueEmployeeData","uniqueIds","Set","filter","employee","has","id","add","workingHoursData","matchingWorkingHours","methods","userDetails","entry","workingHoursMap","Map","key","date","set","workingHours","calculateWorkingHours","intime","outtime","existingEntry","get","Array","from","values","trim","intimeHours","intimeMinutes","split","map","Number","outtimeHours","outtimeMinutes","startTime","endTime","differenceInMilliseconds","differenceInHours","getData","uniqueDates","find"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- User Table -->\r\n    <table v-if=\"userData\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ userData.id }}</td>\r\n          <td>{{ userData.name }}</td>\r\n          <td>{{ userData.email }}</td>\r\n          <td>{{ userData.role }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <!-- Employee Table -->\r\n    <table v-if=\"uniqueEmployeeData.length > 0\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in uniqueEmployeeData\" :key=\"index\">\r\n          <td @click=\"userDetails(employee.id)\">{{ employee.id }}</td>\r\n          <td>{{ employee.name }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>No employee data available.</p>\r\n  </div>\r\n  <div>\r\n    <!-- Working Hours Table -->\r\n    <div>\r\n      <table class=\"table table-bordered\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Date</th>\r\n            <th>Working Hours</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(entry, index) in  filteredWorkingHoursData\" :key=\"index\">\r\n            <td>{{ entry.id }}</td>\r\n            <td @click=\"getData(entry.date)\">{{ entry.date }}</td>\r\n            <td>{{ entry.workingHours }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n  <div>\r\n    <!-- Employee Details Table -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Date</th>\r\n          <th>Intime</th>\r\n          <th>Outtime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in filteredEmployeeData\" :key=\"index\">\r\n          <td>{{ employee.id }}</td>\r\n          <td>{{ employee.date }}</td>\r\n          <td>{{ employee.intime }}</td>\r\n          <td>{{ employee.outtime }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      filteredWorkingHoursData: [],\r\n      filteredEmployeeData: []\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    userData() {\r\n      const userData = this.$store.getters.getUserData.user || {};\r\n      return userData;\r\n    },\r\n    employeeData() {\r\n      return this.$store.getters.getUserData.employeeData || [];\r\n    },\r\n    uniqueEmployeeData() {\r\n      const uniqueIds = new Set();\r\n      return this.employeeData.filter(employee => {\r\n        if (!uniqueIds.has(employee.id)) {\r\n          uniqueIds.add(employee.id);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    },\r\n    workingHoursData() {\r\n      return this.matchingWorkingHours();\r\n    }\r\n  },\r\n  methods: {\r\n    userDetails(id) {\r\n\r\n      this.filteredWorkingHoursData = this.workingHoursData.filter(entry => entry.id === id);\r\n    },\r\n    matchingWorkingHours() {\r\n      const workingHoursMap = new Map();\r\n      for (const employee of this.employeeData) {\r\n        const key = `${employee.date}-${employee.id}`;\r\n\r\n        if (!workingHoursMap.has(key)) {\r\n          workingHoursMap.set(key, {\r\n            id: employee.id,\r\n            date: employee.date,\r\n            workingHours: this.calculateWorkingHours(employee.intime, employee.outtime)\r\n          });\r\n           \r\n        } else {\r\n          const existingEntry = workingHoursMap.get(key);\r\n          existingEntry.workingHours += this.calculateWorkingHours(employee.intime, employee.outtime);\r\n          workingHoursMap.set(key, existingEntry);\r\n        }\r\n      }\r\n      return Array.from(workingHoursMap.values());\r\n    },\r\n    calculateWorkingHours(intime, outtime) {\r\n  if (!outtime || outtime.trim() === '' || outtime === '0') {\r\n    return 0;\r\n  }\r\n\r\n  const [intimeHours, intimeMinutes] = intime.split(':').map(Number);\r\n  const [outtimeHours, outtimeMinutes] = outtime.split(':').map(Number);\r\n\r\n  const startTime = (intimeHours * 3600 + intimeMinutes * 60) * 1000;\r\n  const endTime = (outtimeHours * 3600 + outtimeMinutes * 60) * 1000;\r\n\r\n  const differenceInMilliseconds = endTime - startTime;\r\n  const differenceInHours = differenceInMilliseconds / (1000 * 60 * 60);\r\n  return differenceInHours;\r\n},\r\n    getData(date) {\r\n      this.filteredEmployeeData = this.employeeData.filter(employee =>\r\n        employee.date === date && employee.id === this.filteredWorkingHoursData[0].id);\r\n\r\n      const uniqueDates = Array.from(new Set(this.filteredEmployeeData.map(employee => employee.date)));\r\n\r\n      this.filteredEmployeeData = uniqueDates.map(date => {\r\n        return this.filteredEmployeeData.find(employee => employee.date === date);\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}