{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"hai\", -1 /* HOISTED */);\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [..._hoisted_2]);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_createElementBlock","_hoisted_2"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\leaveForm.vue"],"sourcesContent":["\r\n<template>\r\n  <div><h1>hai</h1></div>\r\n</template><!-- <template>\r\n<div class=\"leavecomponent\">\r\n <div class=\"leavesContainer \">\r\n \r\n    <div class=\"leavesBox1\">\r\n    <label class=\"label\">Total Leaves</label>\r\n      <div class=\"leavebalance1\">{{ userDetails ? userDetails.totalLeaveBalance : '' }}</div>\r\n    </div><br>\r\n    <div class=\"leavesBox2\">\r\n     <label class=\"label\">NormalLeaves</label>\r\n      <div class=\"leavebalance2\">{{ userDetails ? userDetails.normalLeaveBalance : '' }}</div>\r\n    </div><br>\r\n    <div class=\"leavesBox3\">\r\n      <label class=\"label\">SickLeaves</label>\r\n      <div class=\"leavebalance3\">{{ userDetails ? userDetails.sickLeaveBalance : '' }}</div>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <div class=\"formcont\">\r\n\r\n\r\n      <div><input type=\"hidden\" v-model=\"form.email\"></div>\r\n      <div><input type=\"hidden\" v-model=\"form.name\"></div>\r\n      <div class=\"user\"> <i class='bx bxs-user'></i></div>\r\n      <div>\r\n        <label class=\"Label\">Leave_type:</label>\r\n        <select class=\"select\" v-model=\"form.leave\">\r\n          <option>Normal Leave</option>\r\n          <option>Sick Leave</option>\r\n        </select>\r\n      </div>\r\n      <div><label class=\"Label\">From:</label><input type=\"date\" v-model=\"form.date1\"></div>\r\n      <div><label class=\"Label\">To:</label><input type=\"date\" v-model=\"form.date2\"></div>\r\n      <div><label class=\"Label\">Reason:</label><input type=\"textArea\" v-model=\"form.reason\"></div><br>\r\n      <button type=\"submit\" @click=\"submit\">Apply</button>\r\n\r\n  </div>\r\n</div>\r\n  <div v-if=\"displayTable\">\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Employee Name</th>\r\n          <th>Start Date</th>\r\n          <th>End Date</th>\r\n          <th>Leave Type</th>\r\n          <th>No Of Days</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(item, index) in goals\" :key=\"index\">\r\n          <td>{{ item.leaveDetails.emp_name }}</td>\r\n          <td>{{ item.leaveDetails.startDate }}</td>\r\n          <td>{{ item.leaveDetails.endDate }}</td>\r\n          <td>{{ item.leaveDetails.leaveType }}</td>\r\n          <td>{{ item.day }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        id: \"\",\r\n        name: \"\",\r\n        leave: \"\",\r\n        date1: \"\",\r\n        date2: \"\",\r\n        email: \"\",\r\n        reason:\"\"\r\n      },\r\n      goals: [],\r\n      \r\n        displayTable:false\r\n    };\r\n  },\r\n  computed:{\r\n    userDetails() {\r\n  return this.$store.state.userData && this.$store.state.userData.length > 0\r\n    ? this.$store.state.userData[0]\r\n    : null;\r\n}\r\n  },\r\n  methods: {\r\n    async submit() {\r\n      const start = new Date(this.form.date1);\r\n      const end = new Date(this.form.date2);\r\n      const diff = (end - start) / (1000 * 60 * 60 * 24) + 1;\r\n      try {\r\n        const response = await axios.post('https://localhost:7188/api/User/createleave',\r\n        {\r\n          LeaveType: this.form.leave,\r\n          StartDate:this.form.date1,\r\n          EndDate: this.form.date2,\r\n          Status: this.form.reason,\r\n          Days: diff,\r\n          emp_name: this.form.name, \r\n          email: this.form.email       \r\n        });\r\n        const leaveDetails=response.data;\r\n        console.log(leaveDetails);\r\n        this.goals.push({leaveDetails,day:diff})\r\n        if (this.userDetails) {\r\n          this.userDetails.normalLeaveBalance = leaveDetails.normalLeaveBalance;\r\n          this.userDetails.sickLeaveBalance = leaveDetails.sickLeaveBalance;\r\n          this.userDetails.totalLeaveBalance = leaveDetails.totalLeaveBalance;\r\n\r\n        }\r\n        this.displayTable=true;\r\n      } \r\n      catch (error) {\r\n        alert(error)\r\n      }\r\n    },\r\n    \r\n    \r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n.label{\r\n  font-size: 20px;\r\n  padding-left: -10px;\r\n  text-align: left;\r\n  font-family: Georgia, 'Times New Roman', Times, serif;\r\n}\r\n.leavesBox1{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color: palevioletred;\r\n  width:200px;\r\nmargin-left: 100px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n}\r\n.leavesBox2{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color:rgb(70, 206, 70);\r\n  width:200px;\r\nmargin-left: 100px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n}\r\n.leavesBox3{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color:rgb(231, 14, 14);\r\n  width:200px;\r\nmargin-left: 100px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n}\r\n.leavebalance1{\r\n  font-size: 50px;\r\n  text-align: left;\r\n  padding-left: 30px;\r\n  font-family:'Times New Roman', Times, serif;\r\n  color:  palevioletred;\r\n}\r\n.leavebalance2{\r\n  font-size: 50px;\r\n  text-align: left;\r\n  padding-left: 30px;\r\n  color: rgb(70, 206, 70);\r\n  font-family:'Times New Roman', Times, serif;\r\n}\r\n.leavebalance3{\r\n  font-size: 50px;\r\n  text-align: left;\r\n  padding-left: 30px;\r\n  color: rgb(231, 14, 14);\r\n  font-family:'Times New Roman', Times, serif;\r\n}\r\n\r\n.leavesContainer {\r\n  display: flex;\r\n\r\n}\r\n.user{\r\n  font-size: 50px;\r\n  padding-bottom: -10px;\r\n  padding-left: 220px;\r\n}\r\n.formcont {\r\n  font-family: 'Arial', sans-serif;\r\n  background: transparent;\r\n  margin-left: 500px; \r\n  margin-top: 30px;\r\n  margin-right: auto;\r\n  padding-left: 10px;\r\n  padding-top: 10px;\r\n  padding-right: 10px;\r\n  padding-bottom: 20px;\r\n  border: 1px #ccc;\r\n  border-radius: 10px;\r\n  width: 500px;\r\n  margin-left: 650px;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n}\r\n.formcont div {\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\nmargin-bottom: 16px;\r\npadding-top: 10px;\r\nwidth: 400px;\r\ncolor:#000;\r\nmargin-right: 150px;\r\n}\r\n\r\n.formcont label {\r\ndisplay: block;\r\nmargin-right: 3px; \r\nmargin-top: 4px;\r\n}\r\n\r\n.formcont input,\r\n.formcont select{\r\nwidth: 200px;\r\npadding: 10px; \r\nmargin-bottom: 3px; \r\nborder: 1px solid;\r\nborder-radius: 4px;\r\n\r\n}\r\n\r\n.formcont button {\r\nbackground-color: #4caf50;\r\ncolor: white;\r\nborder: none;\r\nborder-radius: 4px;\r\ncursor: pointer;\r\npadding:4px;\r\n\r\n}\r\n\r\n.form button:hover {\r\nbackground-color: #45a049;\r\n}\r\n\r\n.select {\r\nwidth: 250px;\r\nheight: 40px;\r\nborder-radius: 10px;\r\nmargin: 5px;\r\ndisplay: inline-block;\r\n}\r\n\r\n\r\n.textArea{\r\nborder: ridge 2px;\r\npadding: 5px;\r\nwidth: 15em;\r\nmin-height: em;\r\noverflow: auto;\r\nmargin: 5px;\r\ndisplay: inline-block;\r\n}\r\ndiv.form{\r\nwidth: 800px;\r\npadding:10px 20px;\r\nborder-radius: 10px;\r\n}\r\nlabel{\r\nwidth :140px;\r\ndisplay: inline-block;\r\nmargin: 0.2cm;\r\nfont-size: 16px;\r\nfont-weight:bold;\r\n}\r\ninput{\r\npadding: 4px;\r\nmargin: 5px;\r\nfont-size: 16px;\r\nborder-radius: 10px;\r\n}\r\n#tbl tr {\r\n  background: #ccc;\r\n}\r\ntbody tr:nth-child(odd) {\r\n  background: #ccc;\r\n}\r\n\r\ntable tr:hover td {\r\n  background: #839192;\r\n  color: #000;\r\n  transition: all 0.3s ease-in;\r\n  cursor: pointer;\r\n}\r\nth {\r\n  \r\n  border-bottom: 1px solid black, 3px double black;  \r\n}\r\n\r\n td {\r\nfont-family: 'Roboto';\r\n} \r\nth{\r\n  font-family: 'Arial';\r\n}\r\n.Label{\r\n  font-family:Verdana, Geneva, Tahoma, sans-serif ;\r\n}\r\n</style> -->\r\n"],"mappings":";gCAEOA,mBAAA,CAAY,YAAR,KAAG;oBAAPC,UAAY,C;;uBAAjBC,mBAAA,CAAuB,iBAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}