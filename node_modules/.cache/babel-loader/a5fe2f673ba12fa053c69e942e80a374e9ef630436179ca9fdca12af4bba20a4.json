{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  name: 'BarGraph',\n  data() {\n    return {\n      selectedEmployee: null,\n      selectedDate: null,\n      employeeTable: true,\n      hours: true,\n      Search: \"\",\n      punchValues: {\n        Intime1: null,\n        Intime2: null,\n        Outtime1: null,\n        Outtime2: null,\n        Intime3: [],\n        Outtime3: []\n      }\n    };\n  },\n  computed: {\n    userDetails() {\n      return this.$store.getters.getUserData && this.$store.getters.getUserData.length > 0 ? this.$store.state.userData[0] : null;\n    },\n    employeeList() {\n      if (this.$store.getters.getUserData && this.$store.getters.getUserData.length > 0) {\n        const userId = this.userDetails ? this.userDetails.userId : null;\n        if (userId) {\n          const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\n          const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\n            const key = employee.empId;\n            if (!acc[key]) {\n              acc[key] = {\n                empId: employee.empId,\n                empName: employee.empName,\n                empRole: employee.empRole,\n                attendances: []\n              };\n            }\n            acc[key].attendances.push(employee);\n            return acc;\n          }, {});\n          const uniqueEmployees = Object.values(groupedEmployees);\n          return uniqueEmployees;\n        }\n      }\n      return [];\n    },\n    workingHoursData() {\n      const attendanceDates = {};\n      const loginAtNineCount = {};\n\n      // Helper function to get the month and year from the date\n      const getMonthYear = dateString => {\n        const date = new Date(dateString);\n        return `${date.getMonth() + 1}-${date.getFullYear()}`;\n      };\n\n      // Iterate over each employee\n      this.employeeList.forEach(employee => {\n        // Iterate over each attendance record for the employee\n        employee.attendances.forEach(attendance => {\n          const monthYear = getMonthYear(attendance.date);\n\n          // Initialize month-year entry if not exist\n          if (!attendanceDates[monthYear]) {\n            attendanceDates[monthYear] = {\n              monthYear: monthYear,\n              Intime: [],\n              Outtime: [],\n              totalDifference: 0\n            };\n            loginAtNineCount[monthYear] = 0;\n          }\n          attendanceDates[monthYear].Intime.push(attendance.inTime);\n          if (attendance.inTime === '09:00:00') {\n            loginAtNineCount[monthYear] += 1;\n          }\n          if (attendance.outTime) {\n            const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\n            const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\n            const diff = outtimeDate - intimeDate;\n            attendanceDates[monthYear].totalDifference += diff;\n            attendanceDates[monthYear].Outtime.push(attendance.outTime);\n          }\n        });\n      });\n      return Object.values(attendanceDates).map(dateInfo => {\n        const totalHours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\n        const totalMinutes = Math.floor(dateInfo.totalDifference % (1000 * 60 * 60) / (1000 * 60));\n        return {\n          monthYear: dateInfo.monthYear,\n          Intime: dateInfo.Intime,\n          Outtime: dateInfo.Outtime,\n          totalHours: totalHours,\n          totalMinutes: totalMinutes,\n          loginAtNineCount: loginAtNineCount[dateInfo.monthYear]\n        };\n      }).filter(record => record.monthYear.includes(this.Search));\n    },\n    // WeekHours() {\n    //   if (this.workingHoursData.length > 0) {\n    //     const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\n    //     const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\n    //     const totalInMinutes = totalHours * 60 + totalMinutes;\n    //     const averageInMinutes = totalInMinutes / 5;\n    //     const averageHours = Math.floor(averageInMinutes / 60);\n    //     const averageMinutes = Math.floor(averageInMinutes % 60);\n    //     const totallength = this.workingHoursData.length;\n    //     console.log(totallength);\n    //     return `${averageHours} Hrs ${averageMinutes} Mins`;\n    //   }\n    //   return null;\n    // },\n    // MonthHours() {\n    //   if (this.workingHoursData.length > 0) {\n    //     const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\n    //     const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\n    //     const totalInMinutes = totalHours * 60 + totalMinutes;\n    //     const averageInMinutes = totalInMinutes;\n    //     const averageHours = Math.floor(averageInMinutes / 60);\n    //     const averageMinutes = Math.floor(averageInMinutes % 60);\n    //     const totallength = this.workingHoursData.length;\n    //     console.log(totallength);\n    //     return `${averageHours} Hrs ${averageMinutes} Mins`;\n\n    //   }\n    //   return null;\n    // },\n    getteam() {\n      return this.$store.getters.getTeamMembers;\n    }\n  },\n  created() {\n    this.initializePunchValues();\n  },\n  methods: {\n    initializePunchValues() {\n      if (this.workingHoursData.length > 0) {\n        const record = this.workingHoursData[0];\n        this.punchValues.Intime1 = record.Intime[0];\n        this.punchValues.Intime2 = record.Intime[1];\n        this.punchValues.Outtime1 = record.Outtime[0];\n        this.punchValues.Outtime2 = record.Outtime[1];\n        this.punchValues.Intime3 = record.Intime[2] || [];\n        this.punchValues.Outtime3 = record.Outtime[2] || [];\n      }\n    },\n    getPunchDetails(record) {\n      this.punchValues.Intime1 = record.Intime[0];\n      this.punchValues.Intime2 = record.Intime[1];\n      this.punchValues.Outtime1 = record.Outtime[0];\n      this.punchValues.Outtime2 = record.Outtime[1];\n      this.punchValues.Intime3 = record.Intime[2] || [];\n      this.punchValues.Outtime3 = record.Outtime[2] || [];\n    }\n  }\n};","map":{"version":3,"names":["Chart","registerables","register","name","data","selectedEmployee","selectedDate","employeeTable","hours","Search","punchValues","Intime1","Intime2","Outtime1","Outtime2","Intime3","Outtime3","computed","userDetails","$store","getters","getUserData","length","state","userData","employeeList","userId","filteredEmployees","filter","employee","empId","groupedEmployees","reduce","acc","key","empName","empRole","attendances","push","uniqueEmployees","Object","values","workingHoursData","attendanceDates","loginAtNineCount","getMonthYear","dateString","date","Date","getMonth","getFullYear","forEach","attendance","monthYear","Intime","Outtime","totalDifference","inTime","outTime","intimeDate","outtimeDate","diff","map","dateInfo","totalHours","Math","floor","totalMinutes","record","includes","getteam","getTeamMembers","created","initializePunchValues","methods","getPunchDetails"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["\r\n <template>\r\n  <div class=\"mainHeading\">\r\n    <p>HRMS- Human Resource Management System</p>\r\n  </div>\r\n  <div class=\"AttendenceContainer\">\r\n    <div class=\"DateContainer\">\r\n      <div class=\"table1\">\r\n        <h3 class=\"StatisticsHeading\">Satistics</h3>\r\n        <div class=\"StatisticsContainer\">\r\n          <div class=\"WeekBox\">\r\n            <label class=\"label\">Week</label>\r\n            <div class=\"WeekLeaves\">{{ WeekHours}} /45Hrs</div>\r\n          </div><br>\r\n          <div class=\"MonthBox\">\r\n            <label class=\"label\">Month</label>\r\n            <div class=\"MonthLeaves\">{{ MonthHours}} /198Hrs</div>\r\n          </div><br>\r\n          <div class=\"AbsentBox\">\r\n            <label class=\"label\">Absent/month</label>\r\n            <div class=\"leavebalance3\">\r\n              <h3>0</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        <div class=\"punchMainHeading\"><h3>Date Activity</h3>\r\n        <div class=\"DateActivity1\" > \r\n          <div class=\"insidepunch\">\r\n            <h4 class=\"punchheading\">Punch In At:</h4>\r\n          <p class=\"punchValues\">{{ punchValues.Intime1 }}</p>\r\n          <h4 class=\"punchheading\">Punch Out At:</h4>\r\n          <p class=\"punchValues\">{{ punchValues.Outtime1 }}</p>\r\n        </div>\r\n        <div class=\"insidepunch\">\r\n          <h4 class=\"punchheading\">Punch In At:</h4>\r\n          <p class=\"punchValues\">{{  punchValues.Intime2 }}</p>\r\n          <h4 class=\"punchheading\">Punch Out At:</h4>\r\n          <p class=\"punchValues\">{{punchValues.Outtime2 }}</p>\r\n        </div>\r\n        </div>\r\n          <div v-if=\"punchValues.Intime3 && punchValues.Intime3.length > 1\" >\r\n            <div class=\"insidepunch\">\r\n        <h4 class=\"punchheading\">Punch In At:</h4>\r\n        <p class=\"punchValues\">{{  punchValues.Intime3 }}</p>\r\n        <h4 class=\"punchheading\">Punch Out At:</h4>\r\n        <p class=\"punchValues\">{{ punchValues.Outtime3 }}</p>\r\n      </div>\r\n      </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"AttendenceTable\">\r\n      <div>\r\n        <h3 class=\"Heading\">Attendence</h3>\r\n      </div>\r\n\r\n      <div><input type=\"text\" placeholder=\"Search\" class=\"searchElement\" v-model=\"Search\">\r\n        <div>\r\n          <table class=\"table table-bordered\" id=\"table6\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>InTime</th>\r\n                <th>OutTime</th>\r\n                <th>WorkingHours</th>\r\n                <!-- <th>hiuy</th> -->\r\n              </tr>\r\n            </thead>\r\n            <tr v-for=\"(record, index) in workingHoursData\" :key=\"index\" @click=\"getPunchDetails(record)\">\r\n              <td>{{ record.date }}</td>\r\n              <td>{{ record.Intime[0] }}</td>\r\n              <td>{{ record.Outtime[1] }}</td>\r\n              <td>{{ record.totalHours }} hrs {{ record.totalMinutes }} mins</td>\r\n              <!-- <td>{{ record.intime9Count }}</td> -->\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  \r\n  <div class=\"sidebar\">\r\n    <div class=\"nav\">\r\n      <div class=\"menu\">\r\n        <ul>\r\n          <li>\r\n            <a href=\"#\">\r\n              <i class='bx bx-home'></i>\r\n              <RouterLink to=\"/navigation\" class=\"text\"> Home</RouterLink>\r\n            </a>\r\n          </li>\r\n          <li class=\"active\" v-if=\"getteam\">\r\n            <a href=\"#\">\r\n              <i class=\"fa-solid fa-users\"></i>\r\n              <RouterLink to=\"/members\" class=\"text\"> Team Members</RouterLink>\r\n            </a>\r\n          </li>\r\n          <li class=\"active\">\r\n            <a href=\"#\">\r\n              <i class='bx bxs-calendar'></i>\r\n\r\n              <RouterLink to=\"/attendence\" class=\"text\">Attendence</RouterLink>\r\n            </a>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>\r\n      <div class=\"menu\" id=\"logout\">\r\n        <ul>\r\n          <li>\r\n            <a href=\"#\">\r\n              <i class='bx bx-info-circle'></i>\r\n              <span class=\"text\">Help</span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">\r\n              <i class='bx bx-log-out'></i>\r\n              <RouterLink to=\"/\" class=\"text\" @click=\"logout\"> Logout</RouterLink>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\nexport default {\r\n  name: 'BarGraph',\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      selectedDate: null,\r\n      employeeTable: true,\r\n      hours: true,\r\n      Search: \"\",\r\n      punchValues: {\r\n        Intime1: null,\r\n        Intime2: null,\r\n        Outtime1: null,\r\n        Outtime2: null,\r\n        Intime3: [],\r\n        Outtime3: []\r\n      },\r\n    };\r\n  },\r\n  \r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.getters. getUserData && this.$store.getters.getUserData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.getters. getUserData && this.$store.getters.getUserData.length > 0) {\r\n        const userId = this.userDetails ? this.userDetails.userId : null;\r\n        if (userId) {\r\n          const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\r\n          const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n            const key = employee.empId;\r\n            if (!acc[key]) {\r\n              acc[key] = {\r\n                empId: employee.empId,\r\n                empName: employee.empName,\r\n                empRole: employee.empRole,\r\n                attendances: []\r\n              };\r\n            }\r\n            acc[key].attendances.push(employee);\r\n            return acc;\r\n          }, {});\r\n          const uniqueEmployees = Object.values(groupedEmployees);\r\n          return uniqueEmployees;\r\n        }\r\n      }\r\n      return [];\r\n    },\r\n    workingHoursData() {\r\n  const attendanceDates = {};\r\n  const loginAtNineCount = {};\r\n\r\n  // Helper function to get the month and year from the date\r\n  const getMonthYear = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return `${date.getMonth() + 1}-${date.getFullYear()}`;\r\n  };\r\n\r\n  // Iterate over each employee\r\n  this.employeeList.forEach(employee => {\r\n    // Iterate over each attendance record for the employee\r\n    employee.attendances.forEach(attendance => {\r\n      const monthYear = getMonthYear(attendance.date);\r\n\r\n      // Initialize month-year entry if not exist\r\n      if (!attendanceDates[monthYear]) {\r\n        attendanceDates[monthYear] = {\r\n          monthYear: monthYear,\r\n          Intime: [],\r\n          Outtime: [],\r\n          totalDifference: 0,\r\n        };\r\n        loginAtNineCount[monthYear] = 0;\r\n      }\r\n      attendanceDates[monthYear].Intime.push(attendance.inTime);\r\n\r\n      if (attendance.inTime === '09:00:00') {\r\n        loginAtNineCount[monthYear] += 1;\r\n      }\r\n\r\n      if (attendance.outTime) {\r\n        const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\r\n        const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\r\n        const diff = outtimeDate - intimeDate;\r\n        attendanceDates[monthYear].totalDifference += diff;\r\n        attendanceDates[monthYear].Outtime.push(attendance.outTime);\r\n      }\r\n    });\r\n  });\r\n\r\n  return Object.values(attendanceDates).map(dateInfo => {\r\n    const totalHours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n    const totalMinutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n    return {\r\n      monthYear: dateInfo.monthYear,\r\n      Intime: dateInfo.Intime,\r\n      Outtime: dateInfo.Outtime,\r\n      totalHours: totalHours,\r\n      totalMinutes: totalMinutes,\r\n      loginAtNineCount: loginAtNineCount[dateInfo.monthYear],\r\n    };\r\n  }).filter(record => record.monthYear.includes(this.Search));\r\n},\r\n    // WeekHours() {\r\n    //   if (this.workingHoursData.length > 0) {\r\n    //     const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n    //     const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n    //     const totalInMinutes = totalHours * 60 + totalMinutes;\r\n    //     const averageInMinutes = totalInMinutes / 5;\r\n    //     const averageHours = Math.floor(averageInMinutes / 60);\r\n    //     const averageMinutes = Math.floor(averageInMinutes % 60);\r\n    //     const totallength = this.workingHoursData.length;\r\n    //     console.log(totallength);\r\n    //     return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n    //   }\r\n    //   return null;\r\n    // },\r\n    // MonthHours() {\r\n    //   if (this.workingHoursData.length > 0) {\r\n    //     const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n    //     const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n    //     const totalInMinutes = totalHours * 60 + totalMinutes;\r\n    //     const averageInMinutes = totalInMinutes;\r\n    //     const averageHours = Math.floor(averageInMinutes / 60);\r\n    //     const averageMinutes = Math.floor(averageInMinutes % 60);\r\n    //     const totallength = this.workingHoursData.length;\r\n    //     console.log(totallength);\r\n    //     return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n\r\n    //   }\r\n    //   return null;\r\n    // },\r\n    getteam() {\r\n      return this.$store.getters.getTeamMembers;\r\n    }\r\n  },\r\n  created() {\r\n    this.initializePunchValues();\r\n  },\r\n  methods: {\r\n    initializePunchValues() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const record = this.workingHoursData[0];\r\n        this.punchValues.Intime1 = record.Intime[0];\r\n        this.punchValues.Intime2 = record.Intime[1];\r\n        this.punchValues.Outtime1 = record.Outtime[0];\r\n        this.punchValues.Outtime2 = record.Outtime[1];\r\n        this.punchValues.Intime3 = record.Intime[2] || [];\r\n        this.punchValues.Outtime3 = record.Outtime[2] || [];\r\n      }\r\n    },\r\n    getPunchDetails(record) {\r\n      this.punchValues.Intime1 = record.Intime[0];\r\n      this.punchValues.Intime2 = record.Intime[1];\r\n      this.punchValues.Outtime1 = record.Outtime[0];\r\n      this.punchValues.Outtime2 = record.Outtime[1];\r\n      this.punchValues.Intime3 = record.Intime[2] || [];\r\n      this.punchValues.Outtime3 = record.Outtime[2] || [];\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n@import url(https://fonts.googleapis.com/css?family=Inter:100,200,300,regular,500,600,700,800,900);\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n.mainHeading {\r\n  font-family: 'Calibri Light';\r\n  color: black;\r\n  font-size: 22px;\r\n  background-color: aqua;\r\n  text-align: left;\r\n  padding-left: 45px;\r\n  height: 40px;\r\n}\r\n.AttendenceContainer {\r\n  margin-top: -12px;\r\n  border-radius: 20px;\r\n  margin-left: 18%;\r\n  margin-right: 4px;\r\n  border: 5px solid #000;\r\n  margin-top: 10px;\r\n  height: auto\r\n}\r\n\r\n.DateContainer {\r\n  display: flex;\r\n  margin-top: 10px;\r\n  padding-top: 5px;\r\n  padding-left: 30px;\r\n  padding-right: 10px;\r\n  background-color:beige;\r\n  border-radius: 10px;\r\n  margin-right: 20px;\r\n  margin-bottom: 10px;\r\n  padding-bottom: 10px;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n  margin-left: 1%;\r\n}\r\n\r\nbody {\r\n  background-color: white;\r\n  background-size: 20%;\r\n  background-repeat: no-repeat;\r\n  background-position: 55% center;\r\n}\r\n\r\n.leavesummary {\r\n  padding-right: 200px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.sidebar {\r\n  position: fixed;\r\n  top: 40px;\r\n  left: 0;\r\n  width: px;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #1f3050;\r\n  padding: 24px;\r\n  gap: 40px;\r\n  transition: all 0.3s;\r\n  padding-left: 0%;\r\n  padding-top: 100px;\r\n}\r\n\r\n.menu .title {\r\n  position: absolute;\r\n  padding-left: 20px;\r\n  font-size: 10px;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.menu ul li {\r\n  position: relative;\r\n  list-style: none;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.menu ul li a.bx {\r\n  font-size: 20px;\r\n}\r\n\r\n.menu ul li a.bi {\r\n  font-size: 20px;\r\n}\r\n\r\n.menu ul li a {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-decoration: none;\r\n  padding: 10px 4px;\r\n  padding-left: 5px;\r\n  border-radius: 8px;\r\n  transition: all 0.3s;\r\n  font-family: Arial, Helvetica, sans-serif\r\n}\r\n\r\n.menu ul li a:hover {\r\n  background-color: blue;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 230px;\r\n}\r\n\r\n#logout {\r\n  padding-bottom: 0px;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.table1 {\r\n  margin-left: 0px;\r\n  margin-right: -10px;\r\n  padding-right: 18px;\r\n  width: 500px;\r\n  padding-left: -10px;\r\n}\r\n\r\n.DateTable {\r\n  margin-right: 5px;\r\n  padding-right: 5px;\r\n  margin-left: 200px;\r\n}\r\n\r\n.DateActivity1 {\r\n  border-radius: 10px;\r\n  gap: 2px;\r\n  padding-top: -5px;\r\n  margin-top: 14px;\r\n  overflow: scroll;\r\n  overflow-x: hidden; \r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n  width: 390px;\r\n  padding-left: 10px;\r\n  padding-top: 10px;\r\n  margin-right: 20px;\r\n  width: 450px;\r\nheight: auto;\r\n\r\n}\r\n\r\n\r\n.WeekBox {\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color: palevioletred;\r\n  width: 180px;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n  height: 120px;\r\n  padding-left: 3px;\r\n}\r\n\r\n.MonthBox {\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color: rgb(70, 206, 70);\r\n  width: 180px;\r\n  height: 120px;\r\n  padding-left: 3px;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.AbsentBox {\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color: rgb(231, 14, 14);\r\n  width: 180px;\r\n  margin-left: 20px;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n  height: 120px;\r\n  margin-right: 10px;\r\n  padding-left: 3px;\r\n}\r\n\r\n.WeekLeaves {\r\n  font-size: 22px;\r\n  padding-left: 4px;\r\n  font-family: 'Times New Roman', Times, serif;\r\n  color: palevioletred;\r\n}\r\n\r\n.MonthLeaves {\r\n  font-size: 22px;\r\n  padding-left: 4px;\r\n  color: rgb(70, 206, 70);\r\n  font-family: 'Times New Roman', Times, serif;\r\n}\r\n\r\n.leavebalance3 {\r\n  font-size: 30px;\r\n  padding-left: 4px;\r\n  color: rgb(231, 14, 14);\r\n  font-family: 'Times New Roman', Times, serif;\r\n}\r\n\r\n.StatisticsContainer {\r\n  display: flex;\r\n  border-radius: 10px;\r\n  padding-bottom: 2px;\r\n  width: 500px;\r\n  padding-top: 7px;\r\n  height: 170px;\r\n  padding-left: 15px;\r\n  margin-left: -4%;\r\n  \r\n\r\n}\r\n\r\n.DateHeading {\r\n  padding-top: -10px;\r\n  padding-bottom: 10px;\r\n  margin-bottom: 4px;\r\n  font-size: 25px;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  color: rgb(214, 60, 32);\r\n}\r\n\r\n.AttendenceTable {\r\n\r\n  padding-left: 10px;\r\n  padding-right: 20px;\r\n  margin-right: 10px;\r\n  border: 1px #ccc;\r\n  border-radius: 5px;\r\n  background-color: beige;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n  margin-left: 1%;\r\n}\r\n\r\n.searchElement {\r\n  border-radius: 5px;\r\n  height: 35px;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  font-size: 20px;\r\n  width: 180px;\r\n  padding-left: 4px;\r\n}\r\n\r\n.punchheading {\r\n  color: red;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  font-size: 20px;\r\n}\r\n\r\n.punchValues {\r\n  color: black;\r\n  padding-left: 5px;\r\n  margin-right: 2px;\r\n  font-size: 20px;\r\n}\r\n.StatisticsHeading{\r\n  padding-top: 10px;\r\n  padding-left: -2px;\r\n  padding-bottom: 5px;\r\n  font-size: 25px;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  color: rgb(214, 60, 32)\r\n}\r\n#table6 th{\r\n  background-color: beige;\r\n}\r\n#table6 td{\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n}\r\n.insidepunch{\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n.barchart{\r\n  margin-left: 1%;\r\n}\r\n</style>\r\n\r\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}