{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      selectedDateGoals: [],\n      workingHours: []\n    };\n  },\n  created() {\n    axios.get(\"http://localhost:5296/api/Todoapp/GetNotes\").then(response => {\n      this.selectedDateGoals = response.data;\n      this.calculateWorkingHours(); // Calculate working hours when data is fetched\n      console.log(response.data);\n    }).catch(error => {\n      console.error('Error fetching employees:', error);\n    });\n  },\n  methods: {\n    calculateWorkingHours() {\n      this.workingHours = this.selectedDateGoals.map(goal => {\n        const inTime1 = new Date(goal.Intime1);\n        const outTime1 = new Date(goal.Outtime1);\n        const inTime2 = new Date(goal.Intime2);\n        const outTime2 = new Date(goal.Outtime2);\n\n        // Calculate total working hours\n        const totalHours = (outTime1 - inTime1 + outTime2 - inTime2) / (1000 * 60 * 60); // Convert milliseconds to hours\n\n        return {\n          Date: goal.Date,\n          WorkingHours: totalHours.toFixed(2) // Display total hours rounded to 2 decimal places\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","selectedDateGoals","workingHours","created","get","then","response","calculateWorkingHours","console","log","catch","error","methods","map","goal","inTime1","Date","Intime1","outTime1","Outtime1","inTime2","Intime2","outTime2","Outtime2","totalHours","WorkingHours","toFixed"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\hrmsAttendenceLevel.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(hour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ hour.Date }}</td>\r\n          <td>{{ hour.WorkingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime1</th>\r\n          <th>OutTime1</th>\r\n          <th>InTime2</th>\r\n          <th>OutTime2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in selectedDateGoals\" :key=\"index\">\r\n          <td>{{ goal.name }}</td>\r\n          <td>{{ goal.Date }}</td>\r\n          <td>{{ goal.Intime1 }}</td>\r\n          <td>{{ goal.Outtime1 }}</td>\r\n          <td>{{ goal.Intime2 }}</td>\r\n          <td>{{ goal.Outtime2 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDateGoals: [],\r\n      workingHours: []\r\n    };\r\n  },\r\n  created() {\r\n    axios.get(\"http://localhost:5296/api/Todoapp/GetNotes\")\r\n      .then(response => {\r\n        this.selectedDateGoals = response.data;\r\n        this.calculateWorkingHours(); // Calculate working hours when data is fetched\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching employees:', error);\r\n      });\r\n  },\r\n  methods: {\r\n    calculateWorkingHours() {\r\n      this.workingHours = this.selectedDateGoals.map(goal => {\r\n        const inTime1 = new Date(goal.Intime1);\r\n        const outTime1 = new Date(goal.Outtime1);\r\n        const inTime2 = new Date(goal.Intime2);\r\n        const outTime2 = new Date(goal.Outtime2);\r\n        \r\n        // Calculate total working hours\r\n        const totalHours = (outTime1 - inTime1 + outTime2 - inTime2) / (1000 * 60 * 60); // Convert milliseconds to hours\r\n        \r\n        return {\r\n          Date: goal.Date,\r\n          WorkingHours: totalHours.toFixed(2) // Display total hours rounded to 2 decimal places\r\n        };\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AA4CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,EAAE;MACrBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRJ,KAAK,CAACK,GAAG,CAAC,4CAA4C,EACnDC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACL,iBAAgB,GAAIK,QAAQ,CAACN,IAAI;MACtC,IAAI,CAACO,qBAAqB,CAAC,CAAC,EAAE;MAC9BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACN,IAAI,CAAC;IAC5B,CAAC,EACAU,KAAK,CAACC,KAAI,IAAK;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;EACDC,OAAO,EAAE;IACPL,qBAAqBA,CAAA,EAAG;MACtB,IAAI,CAACL,YAAW,GAAI,IAAI,CAACD,iBAAiB,CAACY,GAAG,CAACC,IAAG,IAAK;QACrD,MAAMC,OAAM,GAAI,IAAIC,IAAI,CAACF,IAAI,CAACG,OAAO,CAAC;QACtC,MAAMC,QAAO,GAAI,IAAIF,IAAI,CAACF,IAAI,CAACK,QAAQ,CAAC;QACxC,MAAMC,OAAM,GAAI,IAAIJ,IAAI,CAACF,IAAI,CAACO,OAAO,CAAC;QACtC,MAAMC,QAAO,GAAI,IAAIN,IAAI,CAACF,IAAI,CAACS,QAAQ,CAAC;;QAExC;QACA,MAAMC,UAAS,GAAI,CAACN,QAAO,GAAIH,OAAM,GAAIO,QAAO,GAAIF,OAAO,KAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,EAAE;;QAEjF,OAAO;UACLJ,IAAI,EAAEF,IAAI,CAACE,IAAI;UACfS,YAAY,EAAED,UAAU,CAACE,OAAO,CAAC,CAAC,EAAE;QACtC,CAAC;MACH,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}