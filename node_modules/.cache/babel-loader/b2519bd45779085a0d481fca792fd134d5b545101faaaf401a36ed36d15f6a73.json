{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Working Hours\")])], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"InTime1\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"OutTime1\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"InTime2\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"OutTime2\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.workingHours, (hours, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(hours.Date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(hours.WorkingHours), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.goals, (goal, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(goal.employeeName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.Date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.InTime1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.OutTime1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.InTime2), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.OutTime2), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","workingHours","hours","index","key","_toDisplayString","Date","WorkingHours","_hoisted_3","_hoisted_4","goals","goal","employeeName","InTime1","OutTime1","InTime2","OutTime2"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(hours, index) in workingHours\" :key=\"index\">\r\n          <td>{{ hours.Date }}</td>\r\n          <td>{{ hours.WorkingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime1</th>\r\n          <th>OutTime1</th>\r\n          <th>InTime2</th>\r\n          <th>OutTime2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n          <td>{{ goal.employeeName }}</td>\r\n          <td>{{ goal.Date }}</td>\r\n          <td>{{ goal.InTime1 }}</td>\r\n          <td>{{ goal.OutTime1 }}</td>\r\n          <td>{{ goal.InTime2 }}</td>\r\n          <td>{{ goal.OutTime2 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n      goals: [],\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  watch: {\r\n    userData: {\r\n      handler(newValue) {\r\n        if (Array.isArray(newValue.details)) {\r\n          this.workingHours = newValue.details.map((detail) => ({\r\n            Date: detail.Date,\r\n            WorkingHours: this.calculateWorkingHours(detail.InTime1, detail.OutTime2),\r\n          }));\r\n\r\n          this.goals = newValue.details.map((detail) => ({\r\n            employeeName: newValue.employeeName,\r\n            Date: detail.Date,\r\n            InTime1: detail.InTime1,\r\n            OutTime1: detail.OutTime1,\r\n            InTime2: detail.InTime2,\r\n            OutTime2: detail.OutTime2,\r\n          }));\r\n        } else {\r\n          this.workingHours = [];\r\n          this.goals = [];\r\n        }\r\n      },\r\n      immediate: true,\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    calculateWorkingHours(inTime1, outTime2) {\r\n  const parseTime = (timeString) => {\r\n    const parsedDate = new Date(`2000-01-01T${timeString}`);\r\n    return isNaN(parsedDate.getTime()) ? null : parsedDate;\r\n  };\r\n\r\n  const startTime = parseTime(inTime1);\r\n  const endTime = parseTime(outTime2);\r\n\r\n  if (!startTime || !endTime) {\r\n    console.error(\"Invalid time strings:\", inTime1, outTime2);\r\n    return \"Invalid time values\";\r\n  }\r\n\r\n  const diff = endTime - startTime;\r\n  const totalHours = Math.floor(diff / (1000 * 60 * 60));\r\n  const totalMinutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n  return `${totalHours} hours ${totalMinutes} minutes`;\r\n},\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":";;EAEWA,KAAK,EAAC;AAAsB;gCACjCC,mBAAA,CAKQ,gB,aAJNA,mBAAA,CAGK,a,aAFHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAsB,YAAlB,eAAa,E;;EAUhBD,KAAK,EAAC;AAAsB;gCACjCC,mBAAA,CASQ;EATDD,KAAK,EAAC;AAAY,I,aACvBC,mBAAA,CAOK,a,aANHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAiB,YAAb,UAAQ,E;;uBAvBpBC,mBAAA,CAqCM,cApCJD,mBAAA,CAaQ,SAbRE,UAaQ,GAZNC,UAKQ,EACRH,mBAAA,CAKQ,iB,kBAJNC,mBAAA,CAGKG,SAAA,QAAAC,WAAA,CAHwBC,KAAA,CAAAC,YAAY,GAA7BC,KAAK,EAAEC,KAAK;yBAAxBR,mBAAA,CAGK;MAHuCS,GAAG,EAAED;IAAK,IACpDT,mBAAA,CAAyB,YAAAW,gBAAA,CAAlBH,KAAK,CAACI,IAAI,kBACjBZ,mBAAA,CAAiC,YAAAW,gBAAA,CAA1BH,KAAK,CAACK,YAAY,iB;sCAI/Bb,mBAAA,CAqBQ,SArBRc,UAqBQ,GApBNC,UASQ,EACRf,mBAAA,CASQ,iB,kBARNC,mBAAA,CAOKG,SAAA,QAAAC,WAAA,CAPuBC,KAAA,CAAAU,KAAK,GAArBC,IAAI,EAAER,KAAK;yBAAvBR,mBAAA,CAOK;MAP+BS,GAAG,EAAED;IAAK,IAC5CT,mBAAA,CAAgC,YAAAW,gBAAA,CAAzBM,IAAI,CAACC,YAAY,kBACxBlB,mBAAA,CAAwB,YAAAW,gBAAA,CAAjBM,IAAI,CAACL,IAAI,kBAChBZ,mBAAA,CAA2B,YAAAW,gBAAA,CAApBM,IAAI,CAACE,OAAO,kBACnBnB,mBAAA,CAA4B,YAAAW,gBAAA,CAArBM,IAAI,CAACG,QAAQ,kBACpBpB,mBAAA,CAA2B,YAAAW,gBAAA,CAApBM,IAAI,CAACI,OAAO,kBACnBrB,mBAAA,CAA4B,YAAAW,gBAAA,CAArBM,IAAI,CAACK,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}