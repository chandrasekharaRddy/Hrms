{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      selectedEmployee: null\n    };\n  },\n  computed: {\n    userDetails() {\n      return this.$store.state.userData && this.$store.state.userData.length > 0 ? this.$store.state.userData[0] : null;\n    },\n    employeeList() {\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\n        const groupedEmployees = this.$store.state.userData.reduce((acc, employee) => {\n          if (!acc[employee.empId]) {\n            acc[employee.empId] = [];\n          }\n          acc[employee.empId].push(employee);\n          return acc;\n        }, {});\n        const uniqueEmployees = Object.values(groupedEmployees);\n        return uniqueEmployees;\n      }\n      return [];\n    },\n    calculatedWorkingHours() {\n      if (!this.selectedEmployee) return {};\n      const workingHours = {};\n      this.selectedEmployee.forEach(attendance => {\n        const key = attendance.date;\n        const intime = new Date(`01/01/2000 ${attendance.intime}`);\n        const outtime = new Date(`01/01/2000 ${attendance.outtime}`);\n        const diff = Math.abs(outtime - intime);\n        const hours = Math.floor(diff / (1000 * 60 * 60));\n        const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n        const timeString = `${hours} hours ${minutes} minutes`;\n        if (key in workingHours) {\n          workingHours[key] += ` / ${timeString}`;\n        } else {\n          workingHours[key] = timeString;\n        }\n      });\n      return workingHours;\n    }\n  },\n  methods: {\n    showEmployeeDetails(employee) {\n      console.log(\"Selected Employee:\", employee);\n      this.selectedEmployee = employee;\n    }\n  }\n};","map":{"version":3,"names":["data","selectedEmployee","computed","userDetails","$store","state","userData","length","employeeList","groupedEmployees","reduce","acc","employee","empId","push","uniqueEmployees","Object","values","calculatedWorkingHours","workingHours","forEach","attendance","key","date","intime","Date","outtime","diff","Math","abs","hours","floor","minutes","timeString","methods","showEmployeeDetails","console","log"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- User Table -->\r\n    <table v-if=\"userDetails\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ userDetails.userId }}</td>\r\n          <td>{{ userDetails.userName }}</td>\r\n          <td>{{ userDetails.email }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Employee Table -->\r\n    <table v-if=\"employeeList && employeeList.length > 0\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in employeeList\" :key=\"index\">\r\n          <td @click=\"showEmployeeDetails(employee)\">{{ employee.empId }}</td>\r\n          <td>{{ employee.empName }}</td>\r\n        </tr>\r\n\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Employee Details Table -->\r\n    <div v-if=\"selectedEmployee\">\r\n      <table class=\"table table-bordered\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>EmployeeId</th>\r\n            <th>Date</th>\r\n            <th>Intime</th>\r\n            <th>Outtime</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(attendance, index) in selectedEmployee\" :key=\"index\">\r\n            <td>{{ attendance.empId }}</td>\r\n            <td>{{ attendance.date }}</td>\r\n            <td>{{ attendance.intime }}</td>\r\n            <td>{{ attendance.outtime }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Working Hours Table -->\r\n    <div>\r\n      <table class=\"table table-bordered\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Working Hours</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(workingHours, date) in calculatedWorkingHours\" :key=\"date\">\r\n            <td>{{ date }}</td>\r\n            <td>{{ workingHours }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n        const groupedEmployees = this.$store.state.userData.reduce((acc, employee) => {\r\n          if (!acc[employee.empId]) {\r\n            acc[employee.empId] = [];\r\n          }\r\n          acc[employee.empId].push(employee);\r\n          return acc;\r\n        }, {});\r\n        const uniqueEmployees = Object.values(groupedEmployees);\r\n        return uniqueEmployees;\r\n      }\r\n      return [];\r\n    },\r\n    calculatedWorkingHours() {\r\n      if (!this.selectedEmployee) return {};\r\n      const workingHours = {};\r\n      this.selectedEmployee.forEach(attendance => {\r\n        const key = attendance.date;\r\n        const intime = new Date(`01/01/2000 ${attendance.intime}`);\r\n        const outtime = new Date(`01/01/2000 ${attendance.outtime}`);\r\n        const diff = Math.abs(outtime - intime);\r\n        const hours = Math.floor(diff / (1000 * 60 * 60));\r\n        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n        const timeString = `${hours} hours ${minutes} minutes`;\r\n        if (key in workingHours) {\r\n          workingHours[key] += ` / ${timeString}`;\r\n        } else {\r\n          workingHours[key] = timeString;\r\n        }\r\n      });\r\n      return workingHours;\r\n    }\r\n  },\r\n  methods: {\r\n    showEmployeeDetails(employee) {\r\n      console.log(\"Selected Employee:\", employee);\r\n      this.selectedEmployee = employee;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AAgFA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,QAAO,IAAK,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAK,GAAI,IACrE,IAAI,CAACH,MAAM,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAC,IAC5B,IAAI;IACV,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACJ,MAAM,CAACC,KAAK,CAACC,QAAO,IAAK,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAK,GAAI,CAAC,EAAE;QACvE,MAAME,gBAAe,GAAI,IAAI,CAACL,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;UAC5E,IAAI,CAACD,GAAG,CAACC,QAAQ,CAACC,KAAK,CAAC,EAAE;YACxBF,GAAG,CAACC,QAAQ,CAACC,KAAK,IAAI,EAAE;UAC1B;UACAF,GAAG,CAACC,QAAQ,CAACC,KAAK,CAAC,CAACC,IAAI,CAACF,QAAQ,CAAC;UAClC,OAAOD,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QACN,MAAMI,eAAc,GAAIC,MAAM,CAACC,MAAM,CAACR,gBAAgB,CAAC;QACvD,OAAOM,eAAe;MACxB;MACA,OAAO,EAAE;IACX,CAAC;IACDG,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAAC,IAAI,CAACjB,gBAAgB,EAAE,OAAO,CAAC,CAAC;MACrC,MAAMkB,YAAW,GAAI,CAAC,CAAC;MACvB,IAAI,CAAClB,gBAAgB,CAACmB,OAAO,CAACC,UAAS,IAAK;QAC1C,MAAMC,GAAE,GAAID,UAAU,CAACE,IAAI;QAC3B,MAAMC,MAAK,GAAI,IAAIC,IAAI,CAAE,cAAaJ,UAAU,CAACG,MAAO,EAAC,CAAC;QAC1D,MAAME,OAAM,GAAI,IAAID,IAAI,CAAE,cAAaJ,UAAU,CAACK,OAAQ,EAAC,CAAC;QAC5D,MAAMC,IAAG,GAAIC,IAAI,CAACC,GAAG,CAACH,OAAM,GAAIF,MAAM,CAAC;QACvC,MAAMM,KAAI,GAAIF,IAAI,CAACG,KAAK,CAACJ,IAAG,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;QACjD,MAAMK,OAAM,GAAIJ,IAAI,CAACG,KAAK,CAAEJ,IAAG,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAE,CAAC,CAAC;QACnE,MAAMM,UAAS,GAAK,GAAEH,KAAK,UAAUE,OAAO,UAAU;QACtD,IAAIV,GAAE,IAAKH,YAAY,EAAE;UACvBA,YAAY,CAACG,GAAG,KAAK,MAAMW,UAAW,EAAC;QACzC,OAAO;UACLd,YAAY,CAACG,GAAG,IAAIW,UAAU;QAChC;MACF,CAAC,CAAC;MACF,OAAOd,YAAY;IACrB;EACF,CAAC;EACDe,OAAO,EAAE;IACPC,mBAAmBA,CAACvB,QAAQ,EAAE;MAC5BwB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEzB,QAAQ,CAAC;MAC3C,IAAI,CAACX,gBAAe,GAAIW,QAAQ;IAClC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}