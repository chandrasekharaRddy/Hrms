{"ast":null,"code":"export default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      users: [{\n        username: \"surya\",\n        password: \"surya\"\n      }, {\n        username: \"vamsi\",\n        password: \"vamsi\"\n      }, {\n        username: \"ramesh\",\n        password: \"ramesh\"\n      }, {\n        username: \"praveen\",\n        password: \"praveen\"\n      }, {\n        username: \"sandeep\",\n        password: \"sandeep\"\n      }, {\n        username: \"chandra\",\n        password: \"chandra\"\n      }],\n      goals: [],\n      selectedDate: null,\n      workingHours: \"\"\n    };\n  },\n  props: [\"data\"]\n  //   created(){\n  //     this.addItem();\n  //   },\n  //   methods:{\n  // addItem(){\n  //   this.goals.date=this.data.presentDate\n  //   console.log(\"ðŸš€ ~ file: attendenceForm.vue:75 ~ addItem ~ this.goals.date:\", this.goals.date)\n  // }\n  //   }\n};\n\n// methods: {\n//   //login Time\n//     login() {\n//   const user = this.users.find(\n//     (user) => user.username === this.username && user.password === this.password\n//   );\n//   if (user) {\n//     // const currentDate = new Date();\n//   // user.date = currentDate.toLocaleDateString();\n//   // user.signIn = currentDate.toLocaleTimeString();\n//     this.goals.push(user); \n//   } else {\n//     alert(\"user entered wrong password or wrong username\")\n//   }\n//   this.username=\"\",\n//   this.password=\"\"\n// },\n// //signOut Time\n// logout(user) {\n//   const logoutUser = this.goals.find((u) => u.username === user.username);\n//   if (logoutUser) {\n//     const currentDate = new Date();\n//     logoutUser.signOut = currentDate.toLocaleTimeString();\n\n//   }\n// },\n//date selecting\n// selectDate(date) {\n//     const selectedGoals = this.goals.filter((goal) => goal.date === date);\n//     this.workingHours = selectedGoals.map((goal) => ({\n//       date: goal.date,\n//       hours: this.calculate(goal.signIn, goal.signOut),\n//     }));\n//   },\n// //workingHours\n//   calculate(signIn, signOut) {\n//     if (signIn && signOut) {\n//       const signInTime = new Date(`2000-01-01 ${signIn}`);\n//       const signOutTime = new Date(`2000-01-01 ${signOut}`);\n//       const timeDiff = signOutTime - signInTime;\n//       const hours = Math.floor(timeDiff / (1000 * 60 * 60));\n//       const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\n//       return `${hours} hrs ${minutes} mins `;\n//     } else {\n//       return \"0\";\n//     }\n//   },\n// }","map":{"version":3,"names":["data","username","password","users","goals","selectedDate","workingHours","props"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"form\">\r\n    <!-- <form @submit.prevent=\"login\">\r\n  <div><label>Username:</label><input type=\"text\" v-model=\"username\" placeholder=\"Username\"></div> \r\n <div><label>password:</label><input type=\"password\" v-model=\"password\" placeholder=\"Password\"></div><br>\r\n    <button>Login</button>\r\n  </form> -->\r\n  </div>\r\n  <div>\r\n      <table class=\"table table-bordered\">\r\n          <thead>\r\n             <tr>\r\n               <th>Date</th>\r\n               <th>WorkingHours</th>\r\n              </tr>\r\n          </thead>\r\n              <tbody>\r\n                <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n              </tbody>\r\n          </table>\r\n  </div>\r\n  <div>\r\n      <table  class=\"table table-bordered\">\r\n          <thead class=\"table-dark\">\r\n              <tr>\r\n              <th>Name</th>\r\n              <th>Date</th>\r\n              <th>SignIn</th>\r\n              <th>signOut</th>\r\n              <th>signOut</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n            <td>{{ goal.username }}</td>\r\n            <td @click=\"selectDate(goal.date)\">{{ goal.date }}</td>\r\n            <td>{{ goal.signIn}}</td>\r\n            <td>{{goal.signOut}}</td>\r\n            <td><button @click=\"logout(goal)\">signOut</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n     \r\n      users: [\r\n        {username: \"surya\",password: \"surya\"},\r\n        {username: \"vamsi\",password: \"vamsi\"},\r\n        {username: \"ramesh\",password: \"ramesh\"},\r\n        {username: \"praveen\",password: \"praveen\"},\r\n        {username: \"sandeep\", password: \"sandeep\"},\r\n        {username: \"chandra\",password: \"chandra\"}],\r\n      goals:[],\r\n      selectedDate: null,\r\n    workingHours:\"\",\r\n    };\r\n  },\r\n  props:[\"data\"],\r\n//   created(){\r\n//     this.addItem();\r\n//   },\r\n//   methods:{\r\n// addItem(){\r\n//   this.goals.date=this.data.presentDate\r\n//   console.log(\"ðŸš€ ~ file: attendenceForm.vue:75 ~ addItem ~ this.goals.date:\", this.goals.date)\r\n// }\r\n//   }\r\n  }\r\n\r\n  // methods: {\r\n  //   //login Time\r\n  //     login() {\r\n  //   const user = this.users.find(\r\n  //     (user) => user.username === this.username && user.password === this.password\r\n  //   );\r\n  //   if (user) {\r\n  //     // const currentDate = new Date();\r\n  //   // user.date = currentDate.toLocaleDateString();\r\n  //   // user.signIn = currentDate.toLocaleTimeString();\r\n  //     this.goals.push(user); \r\n  //   } else {\r\n  //     alert(\"user entered wrong password or wrong username\")\r\n  //   }\r\n  //   this.username=\"\",\r\n  //   this.password=\"\"\r\n  // },\r\n  // //signOut Time\r\n  // logout(user) {\r\n  //   const logoutUser = this.goals.find((u) => u.username === user.username);\r\n  //   if (logoutUser) {\r\n  //     const currentDate = new Date();\r\n  //     logoutUser.signOut = currentDate.toLocaleTimeString();\r\n      \r\n  //   }\r\n  // },\r\n//date selecting\r\n// selectDate(date) {\r\n//     const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n//     this.workingHours = selectedGoals.map((goal) => ({\r\n//       date: goal.date,\r\n//       hours: this.calculate(goal.signIn, goal.signOut),\r\n//     }));\r\n//   },\r\n// //workingHours\r\n//   calculate(signIn, signOut) {\r\n//     if (signIn && signOut) {\r\n//       const signInTime = new Date(`2000-01-01 ${signIn}`);\r\n//       const signOutTime = new Date(`2000-01-01 ${signOut}`);\r\n//       const timeDiff = signOutTime - signInTime;\r\n//       const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n//       const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n//       return `${hours} hrs ${minutes} mins `;\r\n//     } else {\r\n//       return \"0\";\r\n//     }\r\n//   },\r\n// }\r\n\r\n\r\n</script>\r\n\r\n"],"mappings":"AAiDA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MAEZC,KAAK,EAAE,CACL;QAACF,QAAQ,EAAE,OAAO;QAACC,QAAQ,EAAE;MAAO,CAAC,EACrC;QAACD,QAAQ,EAAE,OAAO;QAACC,QAAQ,EAAE;MAAO,CAAC,EACrC;QAACD,QAAQ,EAAE,QAAQ;QAACC,QAAQ,EAAE;MAAQ,CAAC,EACvC;QAACD,QAAQ,EAAE,SAAS;QAACC,QAAQ,EAAE;MAAS,CAAC,EACzC;QAACD,QAAQ,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAS,CAAC,EAC1C;QAACD,QAAQ,EAAE,SAAS;QAACC,QAAQ,EAAE;MAAS,CAAC,CAAC;MAC5CE,KAAK,EAAC,EAAE;MACRC,YAAY,EAAE,IAAI;MACpBC,YAAY,EAAC;IACb,CAAC;EACH,CAAC;EACDC,KAAK,EAAC,CAAC,MAAM;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}