{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"UserId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Role\")])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"td\", {\n  colspan: \"4\"\n}, \"No user data available\", -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_5];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" User Table \"), _createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.userData, user => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: user.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(user.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.fullName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.role), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), $options.userData.length === 0 ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_4, [..._hoisted_6])) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","colspan","_hoisted_5","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","userData","user","key","id","_toDisplayString","fullName","email","role","length","_hoisted_4","_hoisted_6"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<!--  <template>\r\n  <div class=\"container\">\r\n   \r\n    <table class=\"table1\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ employeeData.id }}</td>\r\n          <td>{{ employeeData.name }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n\r\n    <table class=\"table2\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in userData\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>{{ user.role }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  \r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"employee in employeeData\" :key=\"employee.id\">\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n \r\n  <div>\r\n    <table v-if=\"dateVisible\" class=\"table table-bordered\">\r\n    \r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td @click=\"getDate(hour.date)\">{{ hour.date }}</td>\r\n          <td>{{ hour.workingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n\r\n  <div>\r\n    <table v-if=\"selectedDate\" class=\"table table-bordered\">\r\n\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime</th>\r\n          <th>OutTime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr >\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n      goals: [],\r\n      filteredGoals: [],\r\n      selectedDate: null,\r\n      \r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData.users;\r\n    },\r\n    employeeData() {\r\n      return this.$store.getters.getUserData.employeeData;\r\n    }\r\n  }, \r\n  // watch: {\r\n  //   userData: {\r\n  //     handler(newValue) {\r\n  //       if (Array.isArray(newValue)) {\r\n  //         newValue.forEach(user => {\r\n  //           this.user.id = user.id;\r\n  //           this.user.name = user.name;\r\n  //           this.user.email = user.email;\r\n  //           this.user.role = user.role;\r\n  //         });\r\n\r\n  //       } else {\r\n  //         console.log('Error: Invalid user data format');\r\n  //       }\r\n  //     },\r\n  //     immediate: true,\r\n  //   },\r\n  // }\r\n  // methods: {\r\n  //   calculateWorkingHours(...timePairs) {\r\n  //     let totalHours = 0;\r\n  //     for (let i = 0; i < timePairs.length; i += 2) {\r\n  //       const inTime = new Date(`2000-01-01T${timePairs[i]}`);\r\n  //       const outTime = new Date(`2000-01-01T${timePairs[i + 1]}`);\r\n  //       const diff = outTime - inTime;\r\n  //       const hours = diff / (1000 * 60 * 60);\r\n  //       totalHours += hours;\r\n  //     }\r\n  //     return totalHours.toFixed(2);\r\n  //   },\r\n  //   getDate(date) {\r\n  //     if (this.selectedDate === date) {\r\n  //       this.selectedDate = null; \r\n  //     } else {\r\n  //       this.selectedDate = date;\r\n  //       this.filteredGoals = this.goals.filter((goal) => goal.Date === date);\r\n  //       this.dateVisible = false;\r\n  //     }\r\n  //   },\r\n  // }\r\n};\r\n</script> -->\r\n<!-- <template>\r\n  <div class=\"container\">\r\n\r\n    <table class=\"table1\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"goal in userData\" :key=\"goal.id\">\r\n          <td>{{ goal.id }}</td>\r\n          <td>{{ goal.fullName }}</td>\r\n          <td>{{ goal.email }}</td>\r\n          <td>{{ goal.role }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n\r\n    <table class=\"table2\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"employee in employeeData\" :key=\"employee.id\">\r\n          <td>{{ employee.id }}</td>\r\n          <td>{{ employee.name }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      goal: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        role: ''\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      const userData = this.$store.getters.getUserData.user;\r\n      console.log('userData:', userData); \r\n      return userData;\r\n\r\n    },\r\n    employeeData() {\r\n      return this.$store.getters.getUserData.employeeData;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style> -->\r\n<template>\r\n  <div class=\"container\">\r\n    <!-- User Table -->\r\n    <table  class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in userData\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.fullName }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>{{ user.role }}</td>\r\n        </tr>\r\n        <tr v-if=\"userData.length === 0\">\r\n          <td colspan=\"4\">No user data available</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  computed: {\r\n    userData() {\r\n      const userData = this.$store.getters.getUserData.user;\r\n      console.log('userData:', userData); \r\n      return userData;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EAuOOA,KAAK,EAAC;AAAW;;EAEZA,KAAK,EAAC;AAAsB;gCAClCC,mBAAA,CAOQ;EAPDD,KAAK,EAAC;AAAY,I,aACvBC,mBAAA,CAKK,a,aAJHA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAa,YAAT,MAAI,E;;;;gCAWRA,mBAAA,CAA2C;EAAvCC,OAAO,EAAC;AAAG,GAAC,wBAAsB;oBAAtCC,UAA2C,C;;uBAnBnDC,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,mBAAA,gBAAmB,EACnBL,mBAAA,CAoBQ,SApBRM,UAoBQ,GAnBNC,UAOQ,EACRP,mBAAA,CAUQ,iB,kBATNG,mBAAA,CAKKK,SAAA,QAAAC,WAAA,CALcC,QAAA,CAAAC,QAAQ,EAAhBC,IAAI;yBAAfT,mBAAA,CAKK;MALyBU,GAAG,EAAED,IAAI,CAACE;QACtCd,mBAAA,CAAsB,YAAAe,gBAAA,CAAfH,IAAI,CAACE,EAAE,kBACdd,mBAAA,CAA4B,YAAAe,gBAAA,CAArBH,IAAI,CAACI,QAAQ,kBACpBhB,mBAAA,CAAyB,YAAAe,gBAAA,CAAlBH,IAAI,CAACK,KAAK,kBACjBjB,mBAAA,CAAwB,YAAAe,gBAAA,CAAjBH,IAAI,CAACM,IAAI,iB;kCAERR,QAAA,CAAAC,QAAQ,CAACQ,MAAM,U,cAAzBhB,mBAAA,CAEK,MAAAiB,UAAA,MAAAC,UAAA,M"},"metadata":{},"sourceType":"module","externalDependencies":[]}