{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"table table-bordered\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"UserId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Role\")])], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"table table-bordered\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeName\")])], -1 /* HOISTED */);\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Id\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Working Hours\")])], -1 /* HOISTED */);\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Id\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Intime\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Outtime\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createCommentVNode(\" User Table \"), $options.userData ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString($options.userData.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.userData.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.userData.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.userData.role), 1 /* TEXT */)])])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_createCommentVNode(\" Employee Table \"), $options.uniqueEmployeeData.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.uniqueEmployeeData, (employee, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", {\n      onClick: $event => $options.userDetails(employee.id)\n    }, _toDisplayString(employee.id), 9 /* TEXT, PROPS */, _hoisted_5), _createElementVNode(\"td\", null, _toDisplayString(employee.name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"No employee data available.\"))]), _createElementVNode(\"div\", null, [_createCommentVNode(\" Working Hours Table \"), $data.filteredWorkingHoursData.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"table\", _hoisted_8, [_hoisted_9, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredWorkingHoursData, (entry, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(entry.id), 1 /* TEXT */), _createElementVNode(\"td\", {\n      onClick: $event => $options.getData(entry.date)\n    }, _toDisplayString(entry.date), 9 /* TEXT, PROPS */, _hoisted_10), _createElementVNode(\"td\", null, _toDisplayString(entry.workingHours), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_createCommentVNode(\" Employee Details Table \"), _createElementVNode(\"table\", _hoisted_11, [_hoisted_12, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredEmployeeData, (employee, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(employee.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employee.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employee.intime), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(employee.outtime), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","$options","userData","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","id","name","email","role","uniqueEmployeeData","length","_hoisted_3","_hoisted_4","_Fragment","_renderList","employee","index","key","onClick","$event","userDetails","_hoisted_5","_hoisted_6","$data","filteredWorkingHoursData","_hoisted_7","_hoisted_8","_hoisted_9","entry","getData","date","_hoisted_10","workingHours","_hoisted_11","_hoisted_12","filteredEmployeeData","intime","outtime"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- User Table -->\r\n    <table v-if=\"userData\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ userData.id }}</td>\r\n          <td>{{ userData.name }}</td>\r\n          <td>{{ userData.email }}</td>\r\n          <td>{{ userData.role }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <!-- Employee Table -->\r\n    <table v-if=\"uniqueEmployeeData.length > 0\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in uniqueEmployeeData\" :key=\"index\">\r\n          <td @click=\"userDetails(employee.id)\">{{ employee.id }}</td>\r\n          <td>{{ employee.name }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>No employee data available.</p>\r\n  </div>\r\n  <div>\r\n    <!-- Working Hours Table -->\r\n    <div v-if=\"filteredWorkingHoursData.length > 0\">\r\n      <table class=\"table table-bordered\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Date</th>\r\n            <th>Working Hours</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(entry, index) in  filteredWorkingHoursData\" :key=\"index\">\r\n            <td>{{ entry.id }}</td>\r\n            <td @click=\"getData(entry.date)\">{{ entry.date }}</td>\r\n            <td>{{ entry.workingHours }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n   \r\n  </div>\r\n  <div>\r\n    <!-- Employee Details Table -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Date</th>\r\n          <th>Intime</th>\r\n          <th>Outtime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in filteredEmployeeData\" :key=\"index\">\r\n          <td>{{ employee.id }}</td>\r\n          <td>{{ employee.date }}</td>\r\n          <td>{{ employee.intime }}</td>\r\n          <td>{{ employee.outtime }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data(){\r\n    return{\r\n      filteredWorkingHoursData: [],\r\n      filteredEmployeeData:[]\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    userData() {\r\n      const userData = this.$store.getters.getUserData.user || {};\r\n      return userData;\r\n    },\r\n    employeeData() {\r\n      return this.$store.getters.getUserData.employeeData || [];\r\n    },\r\n    uniqueEmployeeData() {\r\n      const uniqueIds = new Set();\r\n      return this.employeeData.filter(employee => {\r\n        if (!uniqueIds.has(employee.id)) {\r\n          uniqueIds.add(employee.id);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    },\r\n    workingHoursData() {\r\n      return this.matchingWorkingHours();\r\n    }\r\n  },\r\n  methods: {\r\n    userDetails(id) {\r\n  console.log(\"Clicked employee id:\", id); // Log the clicked employee ID\r\n\r\n  // Filter working hours data based on the clicked employee ID\r\n  this.filteredWorkingHoursData = this.workingHoursData.filter(entry => entry.id === id);\r\n  console.log(\"Filtered working hours data:\", this.filteredWorkingHoursData); // Log the filtered working hours data\r\n}\r\n,\r\n    matchingWorkingHours() {\r\n      const workingHoursMap = new Map(); \r\n      for (const employee of this.employeeData) {\r\n        \r\n        const key = employee.date; \r\n        if (!workingHoursMap.has(key)) {\r\n          workingHoursMap.set(key, {\r\n            id: employee.id,\r\n            date: employee.date,\r\n            workingHours: this.calculateWorkingHours(employee.intime, employee.outtime)\r\n          });\r\n        } else {\r\n          const existingEntry = workingHoursMap.get(key);\r\n          existingEntry.workingHours += this.calculateWorkingHours(employee.intime, employee.outtime);\r\n          workingHoursMap.set(key, existingEntry);\r\n        }\r\n      }\r\n      return Array.from(workingHoursMap.values());\r\n    },\r\n    calculateDifference(startTime, endTime) {\r\n      try {\r\n        const startTimestamp = Date.parse(`1970-01-01T${startTime}`);\r\n        const endTimestamp = Date.parse(`1970-01-01T${endTime}`);\r\n\r\n        if (isNaN(startTimestamp) || isNaN(endTimestamp)) {\r\n          throw new Error('error');\r\n        }\r\n        const difference = Math.round(endTimestamp - startTimestamp);\r\n        return difference;\r\n      } catch (error) {\r\n        console.error('Error', error);\r\n        return 0;\r\n      }\r\n    },\r\n    calculateWorkingHours(intime, outtime) {\r\n      if (!outtime || outtime.trim() === '' || outtime === '0') {\r\n        return 0; \r\n      }\r\n      const startTime = Date.parse(`1970-01-01T${intime}`);\r\n      const endTime = Date.parse(`1970-01-01T${outtime}`);\r\n\r\n      const differenceInMilliseconds = endTime - startTime;\r\n\r\n      const differenceInHours = differenceInMilliseconds / (1000 * 60 * 60);\r\n      return differenceInHours;\r\n    },\r\n    getData(date) {\r\n      this.filteredEmployeeData = this.employeeData.filter(employee => \r\n        employee.date === date && employee.id === this.filteredWorkingHoursData[0].id);\r\n\r\n      const uniqueDates = Array.from(new Set(this.filteredEmployeeData.map(employee => employee.date)));\r\n\r\n      this.filteredEmployeeData = uniqueDates.map(date => {\r\n        return this.filteredEmployeeData.find(employee => employee.date === date);\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}