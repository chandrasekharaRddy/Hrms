{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_2 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Intime\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Outtime\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Total Working Hours\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.Search = $event),\n    placeholder: \"Search\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.Search]])]), _createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.workingHoursData, (record, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(record.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.Intime), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.Outtime), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.totalHours) + \" hrs \" + _toDisplayString(record.totalMinutes) + \" mins\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","type","$data","Search","$event","placeholder","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","workingHoursData","record","index","key","_toDisplayString","date","Intime","Outtime","totalHours","totalMinutes"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\AttendenceHrms.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n   <div><input type=\"text\" v-model=\"Search\" placeholder=\"Search\"></div>\r\n        <table  class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Intime</th>\r\n              <th>Outtime</th>\r\n              <th>Total Working Hours</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(record, index) in workingHoursData\" :key=\"index\" >\r\n              <td>{{ record.date }}</td>\r\n              <td>{{ record.Intime }}</td>\r\n              <td>{{ record.Outtime }}</td>\r\n              <td >{{ record.totalHours }} hrs {{ record.totalMinutes }} mins</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      selectedDate: null,\r\n      employeeTable: true,\r\n      hours:true,\r\n      Search:\"\"\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n  if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n    const userId = this.userDetails ? this.userDetails.userId : null;\r\n    if (userId) {\r\n      const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\r\n      const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n        const key = employee.empId;\r\n        if (!acc[key]) {\r\n          acc[key] = {\r\n            empId: employee.empId,\r\n            empName: employee.empName,\r\n            empRole: employee.empRole, \r\n            attendances: []\r\n          };\r\n        }\r\n        acc[key].attendances.push(employee);\r\n        return acc;\r\n      }, {});\r\n      const uniqueEmployees = Object.values(groupedEmployees);\r\n      return uniqueEmployees;\r\n    }\r\n  }\r\n  return [];\r\n},\r\nworkingHoursData() {\r\n  const attendanceDates = {};\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      if (!attendanceDates[attendance.date]) {\r\n        attendanceDates[attendance.date] = {\r\n          date: attendance.date,\r\n          Intime: [],\r\n          Outtime: [],\r\n          totalDifference: 0 \r\n        };\r\n      }\r\n      if (attendance.outTime) {\r\n        const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\r\n        const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\r\n        const diff = Math.abs(outtimeDate - intimeDate);\r\n        attendanceDates[attendance.date].totalDifference += diff;\r\n        attendanceDates[attendance.date].Intime.push(attendance.inTime);\r\n        attendanceDates[attendance.date].Outtime.push(attendance.outTime);\r\n      }\r\n    });\r\n  });\r\n  const result = Object.values(attendanceDates).map(dateInfo => {\r\n    const totalHours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n    const totalMinutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n    return {\r\n      date: dateInfo.date,\r\n      Intime: dateInfo.Intime, \r\n      Outtime: dateInfo.Outtime, \r\n      totalHours: totalHours,\r\n      totalMinutes: totalMinutes\r\n    };\r\n  });\r\n\r\n  return this.employee.filter(record => record.date.includes(this.Search))\r\n},\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ntbody tr:nth-child(odd) {\r\n  background: #ccc;\r\n}\r\n\r\ntable tr:hover td {\r\n  background: #839192;\r\n  color: #000;\r\n  transition: all 0.3s ease-in;\r\n  cursor: pointer;\r\n}\r\n.table th {\r\n  padding-left: 200px;\r\n  border-bottom: 1px solid black, 3px double black;  \r\n\r\n}\r\n\r\n .table td{\r\n  padding-left: 20px;\r\nfont-family:Arial, Helvetica, sans-serif\r\n} \r\nth{\r\n  font-family: 'Arial';\r\n}\r\n.green-text {\r\n    color: green;\r\n}\r\n\r\n.red-text {\r\n    color: red;\r\n}\r\n\r\n\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAEdA,KAAK,EAAC;AAAsB;gCAClCC,mBAAA,CAQQ,gB,aAPNA,mBAAA,CAMK,a,aALHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAA4B,YAAxB,qBAAmB,E;;uBARnCC,mBAAA,CAqBQ,OArBRC,UAqBQ,GApBPF,mBAAA,CAAoE,c,gBAA/DA,mBAAA,CAAyD;IAAlDG,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,MAAM,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAApBH,KAAA,CAAAC,MAAM,E,KAClCL,mBAAA,CAkBQ,SAlBRQ,UAkBQ,GAjBNC,UAQQ,EACRT,mBAAA,CAOQ,iB,kBANNC,mBAAA,CAKKS,SAAA,QAAAC,WAAA,CALyBC,QAAA,CAAAC,gBAAgB,GAAlCC,MAAM,EAAEC,KAAK;yBAAzBd,mBAAA,CAKK;MAL4Ce,GAAG,EAAED;IAAK,IACzDf,mBAAA,CAA0B,YAAAiB,gBAAA,CAAnBH,MAAM,CAACI,IAAI,kBAClBlB,mBAAA,CAA4B,YAAAiB,gBAAA,CAArBH,MAAM,CAACK,MAAM,kBACpBnB,mBAAA,CAA6B,YAAAiB,gBAAA,CAAtBH,MAAM,CAACM,OAAO,kBACrBpB,mBAAA,CAAoE,YAAAiB,gBAAA,CAA5DH,MAAM,CAACO,UAAU,IAAG,OAAK,GAAAJ,gBAAA,CAAGH,MAAM,CAACQ,YAAY,IAAG,OAAK,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}