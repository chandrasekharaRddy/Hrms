{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  name: 'BarGraph',\n  data() {\n    return {\n      selectedEmployee: null,\n      selectedDate: null,\n      employeeTable: true,\n      hours: true,\n      Search: \"\",\n      punchValues: {\n        Intime1: null,\n        Intime2: null,\n        Outtime1: null,\n        Outtime2: null,\n        Intime3: [],\n        Outtime3: []\n      },\n      chart: null,\n      chartData: {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n        datasets: [{\n          label: 'earlyEntry',\n          data: [0, 0, 0, 0, 0, 0]\n        }, {\n          label: 'ontime',\n          data: [0, 0, 0, 0, 0, 0]\n        }, {\n          label: 'late',\n          data: [0, 0, 0, 0, 0, 0]\n        }, {\n          label: 'earlyleave',\n          data: [0, 0, 0, 0, 0, 0]\n        }, {\n          label: 'overtime',\n          data: [0, 0, 0, 0, 0, 0]\n        }]\n      },\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          title: {\n            display: true,\n            text: 'Attendance'\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    };\n  },\n  computed: {\n    userDetails() {\n      return this.$store.getters.getUserData && this.$store.getters.getUserData.length > 0 ? this.$store.state.userData[0] : null;\n    },\n    employeeList() {\n      if (this.$store.getters.getUserData && this.$store.getters.getUserData.length > 0) {\n        const userId = this.userDetails ? this.userDetails.userId : null;\n        if (userId) {\n          const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\n          const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\n            const key = employee.empId;\n            if (!acc[key]) {\n              acc[key] = {\n                empId: employee.empId,\n                empName: employee.empName,\n                empRole: employee.empRole,\n                attendances: []\n              };\n            }\n            acc[key].attendances.push(employee);\n            return acc;\n          }, {});\n          const uniqueEmployees = Object.values(groupedEmployees);\n          return uniqueEmployees;\n        }\n      }\n      return [];\n    },\n    workingHoursData() {\n      const attendanceDates = {};\n      const referenceDate = '01/01/2000';\n      this.employeeList.forEach(employee => {\n        employee.attendances.forEach(attendance => {\n          const {\n            date,\n            inTime,\n            outTime\n          } = attendance;\n          if (!attendanceDates[date]) {\n            attendanceDates[date] = {\n              date: date,\n              Intime: [],\n              Outtime: [],\n              totalDifference: 0\n            };\n          }\n          attendanceDates[date].Intime.push(inTime);\n          if (outTime) {\n            const intimeDate = new Date(`${referenceDate} ${inTime}`);\n            const outtimeDate = new Date(`${referenceDate} ${outTime}`);\n            const diff = Math.abs(outtimeDate - intimeDate);\n            attendanceDates[date].totalDifference += diff;\n            attendanceDates[date].Outtime.push(outTime);\n          }\n        });\n      });\n      const earlyentry3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\n        const month = new Date(dateInfo.date).getMonth();\n        if (month === 2) {\n          return count + dateInfo.Intime.filter(time => time < '09:00:00').length;\n        }\n        return count;\n      }, 0);\n      const ontime3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\n        const month = new Date(dateInfo.date).getMonth();\n        if (month === 2) {\n          return count + dateInfo.Intime.filter(time => time === '09:00:00').length;\n        }\n        return count;\n      }, 0);\n      const lateentry3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\n        const month = new Date(dateInfo.date).getMonth();\n        if (month === 2) {\n          return count + dateInfo.Intime.filter(time => time > '09:00:00' && time < '12:00:00').length;\n        }\n        return count;\n      }, 0);\n      const overtime3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\n        const month = new Date(dateInfo.date).getMonth();\n        if (month === 2) {\n          return count + dateInfo.Outtime.filter(time => time > '18:00:00').length;\n        }\n        return count;\n      }, 0);\n      const earlyLeave3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\n        const month = new Date(dateInfo.date).getMonth();\n        if (month === 2) {\n          return count + dateInfo.Outtime.filter(time => time > '15:30:00' && time < '18:00:00').length;\n        }\n        return count;\n      }, 0);\n      console.log(\"ðŸš€ ~ early:\", earlyentry3);\n      console.log(\"ðŸš€ ~ ontime:\", ontime3);\n      console.log(\"ðŸš€ ~ lateentry:\", lateentry3);\n      console.log(\"ðŸš€ ~ overtime:\", overtime3);\n      console.log(\"ðŸš€ ~ earlyLeave:\", earlyLeave3);\n      const earlyentry4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\n        const month = new Date(dateInfo.date).getMonth();\n        if (month === 3) {\n          return count + dateInfo.Intime.filter(time => time < '09:00:00').length;\n        }\n        return count;\n      }, 0);\n      const ontime4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\n        const month = new Date(dateInfo.date).getMonth();\n        if (month === 3) {\n          return count + dateInfo.Intime.filter(time => time === '09:00:00').length;\n        }\n        return count;\n      }, 0);\n      const lateentry4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\n        const month = new Date(dateInfo.date).getMonth();\n        if (month === 3) {\n          return count + dateInfo.Intime.filter(time => time > '09:00:00' && time < '12:00:00').length;\n        }\n        return count;\n      }, 0);\n      const overtime4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\n        const month = new Date(dateInfo.date).getMonth();\n        if (month === 3) {\n          return count + dateInfo.Outtime.filter(time => time > '18:00:00').length;\n        }\n        return count;\n      }, 0);\n      const earlyLeave4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\n        const month = new Date(dateInfo.date).getMonth();\n        if (month === 4) {\n          return count + dateInfo.Outtime.filter(time => time > '15:30:00' && time < '18:00:00').length;\n        }\n        return count;\n      }, 0);\n      console.log(\"ðŸš€ ~ early:\", earlyentry4);\n      console.log(\"ðŸš€ ~ ontime:\", ontime4);\n      console.log(\"ðŸš€ ~ lateentry:\", lateentry4);\n      console.log(\"ðŸš€ ~ overtime:\", overtime4);\n      console.log(\"ðŸš€ ~ earlyLeave:\", earlyLeave4);\n      const result = Object.values(attendanceDates).map(dateInfo => {\n        const totalHours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\n        const totalMinutes = Math.floor(dateInfo.totalDifference % (1000 * 60 * 60) / (1000 * 60));\n        return {\n          date: dateInfo.date,\n          Intime: dateInfo.Intime,\n          Outtime: dateInfo.Outtime,\n          totalHours: totalHours,\n          totalMinutes: totalMinutes\n        };\n      }).filter(record => record.date.includes(this.Search));\n      return result;\n    },\n    // WeekHours() {\n    //   if (this.workingHoursData.length > 0) {\n    //     const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\n    //     const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\n    //     const totalInMinutes = totalHours * 60 + totalMinutes;\n    //     const averageInMinutes = totalInMinutes / 5;\n    //     const averageHours = Math.floor(averageInMinutes / 60);\n    //     const averageMinutes = Math.floor(averageInMinutes % 60);\n    //     const totallength = this.workingHoursData.length;\n    //     console.log(totallength);\n    //     return `${averageHours} Hrs ${averageMinutes} Mins`;\n    //   }\n    //   return null;\n    // },\n    // MonthHours() {\n    //   if (this.workingHoursData.length > 0) {\n    //     const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\n    //     const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\n    //     const totalInMinutes = totalHours * 60 + totalMinutes;\n    //     const averageInMinutes = totalInMinutes;\n    //     const averageHours = Math.floor(averageInMinutes / 60);\n    //     const averageMinutes = Math.floor(averageInMinutes % 60);\n    //     const totallength = this.workingHoursData.length;\n    //     console.log(totallength);\n    //     return `${averageHours} Hrs ${averageMinutes} Mins`;\n    //   }\n    //   return null;\n    // },\n    getteam() {\n      return this.$store.getters.getTeamMembers;\n    }\n  },\n  created() {\n    this.initializePunchValues();\n  },\n  mounted() {\n    this.renderChart();\n  },\n  methods: {\n    initializePunchValues() {\n      if (this.workingHoursData.length > 0) {\n        const record = this.workingHoursData[0];\n        this.punchValues.Intime1 = record.Intime[0];\n        this.punchValues.Intime2 = record.Intime[1];\n        this.punchValues.Outtime1 = record.Outtime[0];\n        this.punchValues.Outtime2 = record.Outtime[1];\n        this.punchValues.Intime3 = record.Intime[2] || [];\n        this.punchValues.Outtime3 = record.Outtime[2] || [];\n      }\n    },\n    getPunchDetails(record) {\n      this.punchValues.Intime1 = record.Intime[0];\n      this.punchValues.Intime2 = record.Intime[1];\n      this.punchValues.Outtime1 = record.Outtime[0];\n      this.punchValues.Outtime2 = record.Outtime[1];\n      this.punchValues.Intime3 = record.Intime[2] || [];\n      this.punchValues.Outtime3 = record.Outtime[2] || [];\n    },\n    renderChart() {\n      const ctx = this.$refs.myChart.getContext('2d');\n      this.chart = new Chart(ctx, {\n        type: 'bar',\n        data: this.chartData,\n        options: this.chartOptions\n      });\n    }\n  }\n};","map":{"version":3,"names":["Chart","registerables","register","name","data","selectedEmployee","selectedDate","employeeTable","hours","Search","punchValues","Intime1","Intime2","Outtime1","Outtime2","Intime3","Outtime3","chart","chartData","labels","datasets","label","chartOptions","responsive","maintainAspectRatio","plugins","title","display","text","scales","y","beginAtZero","computed","userDetails","$store","getters","getUserData","length","state","userData","employeeList","userId","filteredEmployees","filter","employee","empId","groupedEmployees","reduce","acc","key","empName","empRole","attendances","push","uniqueEmployees","Object","values","workingHoursData","attendanceDates","referenceDate","forEach","attendance","date","inTime","outTime","Intime","Outtime","totalDifference","intimeDate","Date","outtimeDate","diff","Math","abs","earlyentry3","count","dateInfo","month","getMonth","time","ontime3","lateentry3","overtime3","earlyLeave3","console","log","earlyentry4","ontime4","lateentry4","overtime4","earlyLeave4","result","map","totalHours","floor","totalMinutes","record","includes","getteam","getTeamMembers","created","initializePunchValues","mounted","renderChart","methods","getPunchDetails","ctx","$refs","myChart","getContext","type","options"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["\r\n <template>\r\n  <div class=\"mainHeading\">\r\n    <p>HRMS- Human Resource Management System</p>\r\n  </div>\r\n  <div class=\"AttendenceContainer\">\r\n    <div class=\"DateContainer\">\r\n      <div class=\"table1\">\r\n        <h3 class=\"StatisticsHeading\">Satistics</h3>\r\n        <div class=\"StatisticsContainer\">\r\n          <div class=\"WeekBox\">\r\n            <label class=\"label\">Week</label>\r\n            <div class=\"WeekLeaves\">{{ WeekHours}} /45Hrs</div>\r\n          </div><br>\r\n          <div class=\"MonthBox\">\r\n            <label class=\"label\">Month</label>\r\n            <div class=\"MonthLeaves\">{{ MonthHours}} /198Hrs</div>\r\n          </div><br>\r\n          <div class=\"AbsentBox\">\r\n            <label class=\"label\">Absent/month</label>\r\n            <div class=\"leavebalance3\">\r\n              <h3>0</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        <div class=\"punchMainHeading\"><h3>Date Activity</h3>\r\n        <div class=\"DateActivity1\" > \r\n          <div class=\"insidepunch\">\r\n            <h4 class=\"punchheading\">Punch In At:</h4>\r\n          <p class=\"punchValues\">{{ punchValues.Intime1 }}</p>\r\n          <h4 class=\"punchheading\">Punch Out At:</h4>\r\n          <p class=\"punchValues\">{{ punchValues.Outtime1 }}</p>\r\n        </div>\r\n        <div class=\"insidepunch\">\r\n          <h4 class=\"punchheading\">Punch In At:</h4>\r\n          <p class=\"punchValues\">{{  punchValues.Intime2 }}</p>\r\n          <h4 class=\"punchheading\">Punch Out At:</h4>\r\n          <p class=\"punchValues\">{{punchValues.Outtime2 }}</p>\r\n        </div>\r\n        </div>\r\n          <div v-if=\"punchValues.Intime3 && punchValues.Intime3.length > 1\" >\r\n            <div class=\"insidepunch\">\r\n        <h4 class=\"punchheading\">Punch In At:</h4>\r\n        <p class=\"punchValues\">{{  punchValues.Intime3 }}</p>\r\n        <h4 class=\"punchheading\">Punch Out At:</h4>\r\n        <p class=\"punchValues\">{{ punchValues.Outtime3 }}</p>\r\n      </div>\r\n      </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"AttendenceTable\">\r\n      <div>\r\n        <h3 class=\"Heading\">Attendence</h3>\r\n      </div>\r\n\r\n      <div><input type=\"text\" placeholder=\"Search\" class=\"searchElement\" v-model=\"Search\">\r\n        <div>\r\n          <table class=\"table table-bordered\" id=\"table6\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>InTime</th>\r\n                <th>OutTime</th>\r\n                <th>WorkingHours</th>\r\n              </tr>\r\n            </thead>\r\n            <tr v-for=\"(record, index) in workingHoursData\" :key=\"index\" @click=\"getPunchDetails(record)\">\r\n              <td>{{ record.date }}</td>\r\n              <td>{{ record.Intime[0] }}</td>\r\n              <td>{{ record.Outtime[1] }}</td>\r\n              <td>{{ record.totalHours }} hrs {{ record.totalMinutes }} mins</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <canvas ref=\"myChart\"></canvas>\r\n    </div>\r\n    </div>\r\n  \r\n  <div class=\"sidebar\">\r\n    <div class=\"nav\">\r\n      <div class=\"menu\">\r\n        <ul>\r\n          <li>\r\n            <a href=\"#\">\r\n              <i class='bx bx-home'></i>\r\n              <RouterLink to=\"/navigation\" class=\"text\"> Home</RouterLink>\r\n            </a>\r\n          </li>\r\n          <li class=\"active\" v-if=\"getteam\">\r\n            <a href=\"#\">\r\n              <i class=\"fa-solid fa-users\"></i>\r\n              <RouterLink to=\"/members\" class=\"text\"> Team Members</RouterLink>\r\n            </a>\r\n          </li>\r\n          <li class=\"active\">\r\n            <a href=\"#\">\r\n              <i class='bx bxs-calendar'></i>\r\n\r\n              <RouterLink to=\"/attendence\" class=\"text\">Attendence</RouterLink>\r\n            </a>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>\r\n      <div class=\"menu\" id=\"logout\">\r\n        <ul>\r\n          <li>\r\n            <a href=\"#\">\r\n              <i class='bx bx-info-circle'></i>\r\n              <span class=\"text\">Help</span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">\r\n              <i class='bx bx-log-out'></i>\r\n              <RouterLink to=\"/\" class=\"text\" @click=\"logout\"> Logout</RouterLink>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\nexport default {\r\n  name: 'BarGraph',\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      selectedDate: null,\r\n      employeeTable: true,\r\n      hours: true,\r\n      Search: \"\",\r\n      punchValues: {\r\n        Intime1: null,\r\n        Intime2: null,\r\n        Outtime1: null,\r\n        Outtime2: null,\r\n        Intime3: [],\r\n        Outtime3: []\r\n      },\r\n      chart: null, \r\n      chartData: {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n        datasets: [\r\n          {\r\n          label: 'earlyEntry',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n        {\r\n          label: 'ontime',\r\n          data: [0,0,0,0,0,0]\r\n        },\r\n        {\r\n          label: 'late',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n        {\r\n          label: 'earlyleave',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n        {\r\n          label: 'overtime',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n      ]\r\n      },\r\n      chartOptions: {\r\n         responsive: true,\r\n          maintainAspectRatio: false,\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: 'Attendance'\r\n          }\r\n        },\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true\r\n          }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.getters. getUserData && this.$store.getters.getUserData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.getters. getUserData && this.$store.getters.getUserData.length > 0) {\r\n        const userId = this.userDetails ? this.userDetails.userId : null;\r\n        if (userId) {\r\n          const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\r\n          const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n            const key = employee.empId;\r\n            if (!acc[key]) {\r\n              acc[key] = {\r\n                empId: employee.empId,\r\n                empName: employee.empName,\r\n                empRole: employee.empRole,\r\n                attendances: []\r\n              };\r\n            }\r\n            acc[key].attendances.push(employee);\r\n            return acc;\r\n          }, {});\r\n          const uniqueEmployees = Object.values(groupedEmployees);\r\n          return uniqueEmployees;\r\n        }\r\n      }\r\n      return [];\r\n    },\r\n    workingHoursData() {\r\n  const attendanceDates = {};\r\n  const referenceDate = '01/01/2000';\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      const { date, inTime, outTime } = attendance;\r\n      if (!attendanceDates[date]) {\r\n        attendanceDates[date] = {\r\n          date: date,\r\n          Intime: [],\r\n          Outtime: [],\r\n          totalDifference: 0,\r\n        };\r\n      }\r\n      attendanceDates[date].Intime.push(inTime);\r\n      if (outTime) {\r\n        const intimeDate = new Date(`${referenceDate} ${inTime}`);\r\n        const outtimeDate = new Date(`${referenceDate} ${outTime}`);\r\n        const diff = Math.abs(outtimeDate - intimeDate);\r\n        attendanceDates[date].totalDifference += diff;\r\n        attendanceDates[date].Outtime.push(outTime);\r\n      }\r\n    });\r\n  });\r\n  const earlyentry3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n      const month = new Date(dateInfo.date).getMonth();\r\n      if (month === 2) {\r\n        return count + dateInfo.Intime.filter(time => time <'09:00:00').length;\r\n        \r\n      }\r\n      return count;\r\n    }, 0);\r\n  const ontime3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 2) {\r\n    return count + dateInfo.Intime.filter(time => time === '09:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const lateentry3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 2) {\r\n    return count + dateInfo.Intime.filter(time => time > '09:00:00' && time < '12:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const overtime3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 2) {\r\n    return count + dateInfo.Outtime.filter(time => time > '18:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\nconst earlyLeave3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n  const month = new Date(dateInfo.date).getMonth();\r\n  if (month === 2) {\r\n  return count + dateInfo.Outtime.filter(time => time > '15:30:00' && time < '18:00:00').length;\r\n  }\r\n  return count;\r\n}, 0);\r\n  console.log(\"ðŸš€ ~ early:\", earlyentry3);\r\n  console.log(\"ðŸš€ ~ ontime:\", ontime3);\r\n  console.log(\"ðŸš€ ~ lateentry:\", lateentry3);\r\n  console.log(\"ðŸš€ ~ overtime:\", overtime3);\r\n  console.log(\"ðŸš€ ~ earlyLeave:\", earlyLeave3);\r\n  \r\n  \r\n  const earlyentry4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n      const month = new Date(dateInfo.date).getMonth();\r\n      if (month === 3) {\r\n        return count + dateInfo.Intime.filter(time => time <'09:00:00').length;\r\n      }\r\n      return count;\r\n    }, 0);\r\n  const ontime4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 3) {\r\n    return count + dateInfo.Intime.filter(time => time === '09:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const lateentry4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 3) {\r\n    return count + dateInfo.Intime.filter(time => time > '09:00:00' && time < '12:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const overtime4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 3) {\r\n    return count + dateInfo.Outtime.filter(time => time > '18:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\nconst earlyLeave4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n  const month = new Date(dateInfo.date).getMonth();\r\n  if (month === 4) {\r\n  return count + dateInfo.Outtime.filter(time => time > '15:30:00' && time < '18:00:00').length;\r\n  }\r\n  return count;\r\n}, 0);\r\n  console.log(\"ðŸš€ ~ early:\", earlyentry4);\r\n  console.log(\"ðŸš€ ~ ontime:\", ontime4);\r\n  console.log(\"ðŸš€ ~ lateentry:\", lateentry4);\r\n  console.log(\"ðŸš€ ~ overtime:\", overtime4);\r\n  console.log(\"ðŸš€ ~ earlyLeave:\", earlyLeave4);\r\n  const result = Object.values(attendanceDates).map(dateInfo => {\r\n    const totalHours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n    const totalMinutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n    return {\r\n      date: dateInfo.date,\r\n      Intime: dateInfo.Intime,\r\n      Outtime: dateInfo.Outtime,\r\n      totalHours: totalHours,\r\n      totalMinutes: totalMinutes\r\n    };\r\n  }).filter(record => record.date.includes(this.Search));\r\n  return result;\r\n},\r\n\r\n    // WeekHours() {\r\n    //   if (this.workingHoursData.length > 0) {\r\n    //     const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n    //     const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n    //     const totalInMinutes = totalHours * 60 + totalMinutes;\r\n    //     const averageInMinutes = totalInMinutes / 5;\r\n    //     const averageHours = Math.floor(averageInMinutes / 60);\r\n    //     const averageMinutes = Math.floor(averageInMinutes % 60);\r\n    //     const totallength = this.workingHoursData.length;\r\n    //     console.log(totallength);\r\n    //     return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n    //   }\r\n    //   return null;\r\n    // },\r\n    // MonthHours() {\r\n    //   if (this.workingHoursData.length > 0) {\r\n    //     const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n    //     const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n    //     const totalInMinutes = totalHours * 60 + totalMinutes;\r\n    //     const averageInMinutes = totalInMinutes;\r\n    //     const averageHours = Math.floor(averageInMinutes / 60);\r\n    //     const averageMinutes = Math.floor(averageInMinutes % 60);\r\n    //     const totallength = this.workingHoursData.length;\r\n    //     console.log(totallength);\r\n    //     return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n    //   }\r\n    //   return null;\r\n    // },\r\n    getteam() {\r\n      return this.$store.getters.getTeamMembers;\r\n    }\r\n  },\r\n  created() {\r\n    this.initializePunchValues();\r\n  },\r\n  mounted(){\r\n    this.renderChart();\r\n  },\r\n  methods: {\r\n    initializePunchValues() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const record = this.workingHoursData[0];\r\n        this.punchValues.Intime1 = record.Intime[0];\r\n        this.punchValues.Intime2 = record.Intime[1];\r\n        this.punchValues.Outtime1 = record.Outtime[0];\r\n        this.punchValues.Outtime2 = record.Outtime[1];\r\n        this.punchValues.Intime3 = record.Intime[2] || [];\r\n        this.punchValues.Outtime3 = record.Outtime[2] || [];\r\n      }\r\n    },\r\n    getPunchDetails(record) {\r\n      this.punchValues.Intime1 = record.Intime[0];\r\n      this.punchValues.Intime2 = record.Intime[1];\r\n      this.punchValues.Outtime1 = record.Outtime[0];\r\n      this.punchValues.Outtime2 = record.Outtime[1];\r\n      this.punchValues.Intime3 = record.Intime[2] || [];\r\n      this.punchValues.Outtime3 = record.Outtime[2] || [];\r\n    },\r\n    renderChart() {\r\n      const ctx = this.$refs.myChart.getContext('2d');\r\n      this.chart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: this.chartData,\r\n        options: this.chartOptions\r\n      });\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n@import url(https://fonts.googleapis.com/css?family=Inter:100,200,300,regular,500,600,700,800,900);\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n.mainHeading {\r\n  font-family: 'Calibri Light';\r\n  color: black;\r\n  font-size: 22px;\r\n  background-color: aqua;\r\n  text-align: left;\r\n  padding-left: 45px;\r\n  height: 40px;\r\n}\r\n.AttendenceContainer {\r\n  margin-top: -12px;\r\n  border-radius: 20px;\r\n  margin-left: 18%;\r\n  margin-right: 4px;\r\n  border: 5px solid #000;\r\n  margin-top: 10px;\r\n  height: auto\r\n}\r\n\r\n.DateContainer {\r\n  display: flex;\r\n  margin-top: 10px;\r\n  padding-top: 5px;\r\n  padding-left: 30px;\r\n  padding-right: 10px;\r\n  background-color:beige;\r\n  border-radius: 10px;\r\n  margin-right: 20px;\r\n  margin-bottom: 10px;\r\n  padding-bottom: 10px;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n  margin-left: 1%;\r\n}\r\n\r\nbody {\r\n  background-color: white;\r\n  background-size: 20%;\r\n  background-repeat: no-repeat;\r\n  background-position: 55% center;\r\n}\r\n\r\n.leavesummary {\r\n  padding-right: 200px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.sidebar {\r\n  position: fixed;\r\n  top: 40px;\r\n  left: 0;\r\n  width: px;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #1f3050;\r\n  padding: 24px;\r\n  gap: 40px;\r\n  transition: all 0.3s;\r\n  padding-left: 0%;\r\n  padding-top: 100px;\r\n}\r\n\r\n.menu .title {\r\n  position: absolute;\r\n  padding-left: 20px;\r\n  font-size: 10px;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.menu ul li {\r\n  position: relative;\r\n  list-style: none;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.menu ul li a.bx {\r\n  font-size: 20px;\r\n}\r\n\r\n.menu ul li a.bi {\r\n  font-size: 20px;\r\n}\r\n\r\n.menu ul li a {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-decoration: none;\r\n  padding: 10px 4px;\r\n  padding-left: 5px;\r\n  border-radius: 8px;\r\n  transition: all 0.3s;\r\n  font-family: Arial, Helvetica, sans-serif\r\n}\r\n\r\n.menu ul li a:hover {\r\n  background-color: blue;\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 230px;\r\n}\r\n\r\n#logout {\r\n  padding-bottom: 0px;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.table1 {\r\n  margin-left: 0px;\r\n  margin-right: -10px;\r\n  padding-right: 18px;\r\n  width: 500px;\r\n  padding-left: -10px;\r\n}\r\n\r\n.DateTable {\r\n  margin-right: 5px;\r\n  padding-right: 5px;\r\n  margin-left: 200px;\r\n}\r\n\r\n.DateActivity1 {\r\n  border-radius: 10px;\r\n  gap: 2px;\r\n  padding-top: -5px;\r\n  margin-top: 14px;\r\n  overflow: scroll;\r\n  overflow-x: hidden; \r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n  width: 390px;\r\n  padding-left: 10px;\r\n  padding-top: 10px;\r\n  margin-right: 20px;\r\n  width: 450px;\r\nheight: auto;\r\n\r\n}\r\n\r\n\r\n.WeekBox {\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color: palevioletred;\r\n  width: 180px;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n  height: 120px;\r\n  padding-left: 3px;\r\n}\r\n\r\n.MonthBox {\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color: rgb(70, 206, 70);\r\n  width: 180px;\r\n  height: 120px;\r\n  padding-left: 3px;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.AbsentBox {\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color: rgb(231, 14, 14);\r\n  width: 180px;\r\n  margin-left: 20px;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n  height: 120px;\r\n  margin-right: 10px;\r\n  padding-left: 3px;\r\n}\r\n\r\n.WeekLeaves {\r\n  font-size: 22px;\r\n  padding-left: 4px;\r\n  font-family: 'Times New Roman', Times, serif;\r\n  color: palevioletred;\r\n}\r\n\r\n.MonthLeaves {\r\n  font-size: 22px;\r\n  padding-left: 4px;\r\n  color: rgb(70, 206, 70);\r\n  font-family: 'Times New Roman', Times, serif;\r\n}\r\n\r\n.leavebalance3 {\r\n  font-size: 30px;\r\n  padding-left: 4px;\r\n  color: rgb(231, 14, 14);\r\n  font-family: 'Times New Roman', Times, serif;\r\n}\r\n\r\n.StatisticsContainer {\r\n  display: flex;\r\n  border-radius: 10px;\r\n  padding-bottom: 2px;\r\n  width: 500px;\r\n  padding-top: 7px;\r\n  height: 170px;\r\n  padding-left: 15px;\r\n  margin-left: -4%;\r\n  \r\n\r\n}\r\n\r\n.DateHeading {\r\n  padding-top: -10px;\r\n  padding-bottom: 10px;\r\n  margin-bottom: 4px;\r\n  font-size: 25px;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  color: rgb(214, 60, 32);\r\n}\r\n\r\n.AttendenceTable {\r\n\r\n  padding-left: 10px;\r\n  padding-right: 20px;\r\n  margin-right: 10px;\r\n  border: 1px #ccc;\r\n  border-radius: 5px;\r\n  background-color: beige;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n  margin-left: 1%;\r\n}\r\n\r\n.searchElement {\r\n  border-radius: 5px;\r\n  height: 35px;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  font-size: 20px;\r\n  width: 180px;\r\n  padding-left: 4px;\r\n}\r\n\r\n.punchheading {\r\n  color: red;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  font-size: 20px;\r\n}\r\n\r\n.punchValues {\r\n  color: black;\r\n  padding-left: 5px;\r\n  margin-right: 2px;\r\n  font-size: 20px;\r\n}\r\n.StatisticsHeading{\r\n  padding-top: 10px;\r\n  padding-left: -2px;\r\n  padding-bottom: 5px;\r\n  font-size: 25px;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  color: rgb(214, 60, 32)\r\n}\r\n#table6 th{\r\n  background-color: beige;\r\n}\r\n#table6 td{\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n}\r\n.insidepunch{\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n.barchart{\r\n  margin-left: 1%;\r\n}\r\n</style>\r\n\r\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}