{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    useData: {\n      type: String,\n      // Use the string literal\n      required: true\n    },\n    data() {\n      return {\n        goals: [],\n        workingHours: []\n      };\n    },\n    created() {\n      this.addItem();\n    },\n    methods: {\n      addItem() {\n        const parsedUseData = JSON.parse(this.useData);\n        const newItem = {\n          date: parsedUseData.presentDate,\n          signIn: parsedUseData.presentTime,\n          signOut: \"\",\n          username: parsedUseData.username\n        };\n        this.goals.push(newItem);\n        console.log(this.goals);\n      },\n      logout(goal) {\n        const currentDate = new Date();\n        goal.signOut = currentDate.toLocaleTimeString();\n      },\n      selectDate(date) {\n        const selectedGoals = this.goals.filter(goal => goal.date === date);\n        this.workingHours = selectedGoals.map(goal => ({\n          date: goal.date,\n          hours: this.calculate(goal.signIn, goal.signOut)\n        }));\n      },\n      calculate(signIn, signOut) {\n        if (signIn && signOut) {\n          const signInTime = new Date(`2000-01-01 ${signIn}`);\n          const signOutTime = new Date(`2000-01-01 ${signOut}`);\n          const timeDiff = signOutTime - signInTime;\n          const hours = Math.floor(timeDiff / (1000 * 60 * 60));\n          const minutes = Math.floor(timeDiff % (1000 * 60 * 60) / (1000 * 60));\n          return `${hours} hrs ${minutes} mins `;\n        } else {\n          return \"0\";\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","useData","type","String","required","data","goals","workingHours","created","addItem","methods","parsedUseData","JSON","parse","newItem","date","presentDate","signIn","presentTime","signOut","username","push","console","log","logout","goal","currentDate","Date","toLocaleTimeString","selectDate","selectedGoals","filter","map","hours","calculate","signInTime","signOutTime","timeDiff","Math","floor","minutes"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>SignIn</th>\r\n          <th>SignOut</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n          <td>{{ goal.username }}</td>\r\n          <td>{{ goal.date }}</td>\r\n          <td @click=\"selectDate(goal.date)\">{{ goal.date }}</td>\r\n          <td>{{ goal.signIn }}</td>\r\n          <td>{{ goal.signOut }}</td>\r\n          <td><button @click=\"logout(goal)\">SignOut</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    useData: {\r\n      type: String, // Use the string literal\r\n      required:true\r\n  },\r\n  data() {\r\n    return {\r\n      goals: [],\r\n      workingHours: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.addItem();\r\n  },\r\n  methods: {\r\n    addItem() {\r\n     \r\n      const parsedUseData = JSON.parse(this.useData);\r\n\r\n      const newItem = {\r\n        date: parsedUseData.presentDate,\r\n        signIn: parsedUseData.presentTime,\r\n        signOut: \"\",\r\n        username: parsedUseData.username,\r\n      };\r\n      this.goals.push(newItem);\r\n     console.log(this.goals);\r\n    },\r\n    logout(goal) {\r\n      const currentDate = new Date();\r\n      goal.signOut = currentDate.toLocaleTimeString();\r\n    },\r\n    selectDate(date) {\r\n      const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n      this.workingHours = selectedGoals.map((goal) => ({\r\n        date: goal.date,\r\n        hours: this.calculate(goal.signIn, goal.signOut),\r\n      }));\r\n    },\r\n    calculate(signIn, signOut) {\r\n      if (signIn && signOut) {\r\n        const signInTime = new Date(`2000-01-01 ${signIn}`);\r\n        const signOutTime = new Date(`2000-01-01 ${signOut}`);\r\n        const timeDiff = signOutTime - signInTime;\r\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n        const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n        return `${hours} hrs ${minutes} mins `;\r\n      } else {\r\n        return \"0\";\r\n      }\r\n    },\r\n  },\r\n}\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your styles go here */\r\n</style>\r\n\r\n<!-- <template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>SignIn</th>\r\n          <th>SignOut</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n          <td>{{ goal.username }}</td>\r\n          <td>{{ goal.date }}</td>\r\n          <td @click=\"selectDate(goal.date)\">{{ goal.date }}</td>\r\n          <td>{{ goal.signIn }}</td>\r\n          <td>{{ goal.signOut }}</td>\r\n          <td><button @click=\"logout(goal)\">SignOut</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    useData: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      goals: [],\r\n      workingHours: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.addItem();\r\n  },\r\n  methods: {\r\n    addItem() {\r\n      const newItem = {\r\n        date: this.useData.presentDate,\r\n        signIn: this.useData.presentTime,\r\n        signOut: \"\",\r\n        username: this.useData.username,\r\n      };\r\n      this.goals.push(newItem);\r\n      console.log(this.useData);\r\n    },\r\n    logout(goal) {\r\n      const currentDate = new Date();\r\n      goal.signOut = currentDate.toLocaleTimeString();\r\n    },\r\n    selectDate(date) {\r\n      const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n      this.workingHours = selectedGoals.map((goal) => ({\r\n        date: goal.date,\r\n        hours: this.calculate(goal.signIn, goal.signOut),\r\n      }));\r\n    },\r\n    calculate(signIn, signOut) {\r\n      if (signIn && signOut) {\r\n        const signInTime = new Date(`2000-01-01 ${signIn}`);\r\n        const signOutTime = new Date(`2000-01-01 ${signOut}`);\r\n        const timeDiff = signOutTime - signInTime;\r\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n        const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n        return `${hours} hrs ${minutes} mins `;\r\n      } else {\r\n        return \"0\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your styles go here */\r\n</style> -->\r\n"],"mappings":";AA0CA,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MAAE;MACdC,QAAQ,EAAC;IACb,CAAC;IACDC,IAAIA,CAAA,EAAG;MACL,OAAO;QACLC,KAAK,EAAE,EAAE;QACTC,YAAY,EAAE;MAChB,CAAC;IACH,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR,IAAI,CAACC,OAAO,CAAC,CAAC;IAChB,CAAC;IACDC,OAAO,EAAE;MACPD,OAAOA,CAAA,EAAG;QAER,MAAME,aAAY,GAAIC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACZ,OAAO,CAAC;QAE9C,MAAMa,OAAM,GAAI;UACdC,IAAI,EAAEJ,aAAa,CAACK,WAAW;UAC/BC,MAAM,EAAEN,aAAa,CAACO,WAAW;UACjCC,OAAO,EAAE,EAAE;UACXC,QAAQ,EAAET,aAAa,CAACS;QAC1B,CAAC;QACD,IAAI,CAACd,KAAK,CAACe,IAAI,CAACP,OAAO,CAAC;QACzBQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,KAAK,CAAC;MACxB,CAAC;MACDkB,MAAMA,CAACC,IAAI,EAAE;QACX,MAAMC,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;QAC9BF,IAAI,CAACN,OAAM,GAAIO,WAAW,CAACE,kBAAkB,CAAC,CAAC;MACjD,CAAC;MACDC,UAAUA,CAACd,IAAI,EAAE;QACf,MAAMe,aAAY,GAAI,IAAI,CAACxB,KAAK,CAACyB,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACV,IAAG,KAAMA,IAAI,CAAC;QACrE,IAAI,CAACR,YAAW,GAAIuB,aAAa,CAACE,GAAG,CAAEP,IAAI,KAAM;UAC/CV,IAAI,EAAEU,IAAI,CAACV,IAAI;UACfkB,KAAK,EAAE,IAAI,CAACC,SAAS,CAACT,IAAI,CAACR,MAAM,EAAEQ,IAAI,CAACN,OAAO;QACjD,CAAC,CAAC,CAAC;MACL,CAAC;MACDe,SAASA,CAACjB,MAAM,EAAEE,OAAO,EAAE;QACzB,IAAIF,MAAK,IAAKE,OAAO,EAAE;UACrB,MAAMgB,UAAS,GAAI,IAAIR,IAAI,CAAE,cAAaV,MAAO,EAAC,CAAC;UACnD,MAAMmB,WAAU,GAAI,IAAIT,IAAI,CAAE,cAAaR,OAAQ,EAAC,CAAC;UACrD,MAAMkB,QAAO,GAAID,WAAU,GAAID,UAAU;UACzC,MAAMF,KAAI,GAAIK,IAAI,CAACC,KAAK,CAACF,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;UACrD,MAAMG,OAAM,GAAIF,IAAI,CAACC,KAAK,CAAEF,QAAO,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAE,CAAC,CAAC;UACvE,OAAQ,GAAEJ,KAAK,QAAQO,OAAO,QAAQ;QACxC,OAAO;UACL,OAAO,GAAG;QACZ;MACF;IACF;EACF;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}