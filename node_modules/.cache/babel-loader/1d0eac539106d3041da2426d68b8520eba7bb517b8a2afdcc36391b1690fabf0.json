{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      selectedEmployee: null,\n      selectedDate: null,\n      employeeTable: true,\n      hours: true\n    };\n  },\n  computed: {\n    userDetails() {\n      return this.$store.state.userData && this.$store.state.userData.length > 0 ? this.$store.state.userData[0] : null;\n    },\n    employeeList() {\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\n        const userId = this.userDetails ? this.userDetails.userId : null;\n        if (userId) {\n          const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\n          const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\n            const key = employee.empId;\n            if (!acc[key]) {\n              acc[key] = {\n                empId: employee.empId,\n                empName: employee.empName,\n                empRole: employee.empRole,\n                attendances: []\n              };\n            }\n            acc[key].attendances.push(employee);\n            return acc;\n          }, {});\n          const uniqueEmployees = Object.values(groupedEmployees);\n          return uniqueEmployees;\n        }\n      }\n      return [];\n    },\n    workingHoursData() {\n      const attendanceDates = {};\n      this.employeeList.forEach(employee => {\n        employee.attendances.forEach(attendance => {\n          if (!attendanceDates[attendance.date]) {\n            attendanceDates[attendance.date] = {\n              date: attendance.date,\n              Intime: [],\n              Outtime: [],\n              totalDifference: 0\n            };\n          }\n          if (attendance.outTime) {\n            const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\n            const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\n            const diff = Math.abs(outtimeDate - intimeDate);\n            attendanceDates[attendance.date].totalDifference += diff;\n            attendanceDates[attendance.date].Intime.push(attendance.inTime);\n            attendanceDates[attendance.date].Outtime.push(attendance.outTime);\n          }\n        });\n      });\n      const result = Object.values(attendanceDates).map(dateInfo => {\n        const totalHours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\n        const totalMinutes = Math.floor(dateInfo.totalDifference % (1000 * 60 * 60) / (1000 * 60));\n        return {\n          date: dateInfo.date,\n          Intime: dateInfo.Intime,\n          Outtime: dateInfo.Outtime,\n          totalHours: totalHours,\n          totalMinutes: totalMinutes\n        };\n      });\n      return result;\n    }\n  },\n  methods: {\n    showEmployeeDetails(employee) {\n      this.selectedEmployee = employee;\n      this.workingHours = true;\n      this.employeeTable = false;\n    },\n    getValues(date) {\n      this.selectedDate = date;\n      this.workingHours = false;\n      this.EmployeeDetailsTable = true;\n    },\n    getWorkingTable() {\n      this.workingHours = true;\n      this.selectedEmployee = false;\n    }\n  }\n};","map":{"version":3,"names":["data","selectedEmployee","selectedDate","employeeTable","hours","computed","userDetails","$store","state","userData","length","employeeList","userId","filteredEmployees","filter","employee","empId","groupedEmployees","reduce","acc","key","empName","empRole","attendances","push","uniqueEmployees","Object","values","workingHoursData","attendanceDates","forEach","attendance","date","Intime","Outtime","totalDifference","outTime","intimeDate","Date","inTime","outtimeDate","diff","Math","abs","result","map","dateInfo","totalHours","floor","totalMinutes","methods","showEmployeeDetails","workingHours","getValues","EmployeeDetailsTable","getWorkingTable"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\AttendenceHrms.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n \r\n    \r\n        <table v-if=\"employeeTable && employeeList && employeeList.length > 0\" class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Employee_Id</th>\r\n              <th>EmployeeName</th>\r\n              <th >EmployeeRole</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(employee, index) in employeeList\" :key=\"index\" @click=\"showEmployeeDetails(employee)\">\r\n              <td >{{ employee.empId }}</td>\r\n              <td >{{ employee.empName }}</td>\r\n              <td>{{ employee.empRole }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n    \r\n\r\n   \r\n        <table  class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Intime</th>\r\n              <th>Outtime</th>\r\n              <th>Total Working Hours</th>\r\n\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(record, index) in workingHoursData\" :key=\"index\" @click=\"getValues(record.date)\">\r\n              <td>{{ record.date }}</td>\r\n              <td>{{ record.intime }}</td>\r\n              <td>{{ record.outtime }}</td>\r\n              <td >{{ record.totalHours }} hrs {{ record.totalMinutes }} mins</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n   \r\n    <br>\r\n    <br>\r\n\r\n    <div v-if=\"EmployeeDetailsTable\">\r\n  \r\n        <table v-if=\"selectedEmployee\" class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>EmployeeId</th>\r\n              <th>Date</th>\r\n              <th>Intime</th>\r\n              <th>Outtime</th>\r\n    \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(attendance, index) in filteredAttendances\" :key=\"index\" @click=\"getWorkingTable\">\r\n              <td>{{ selectedEmployee.empId }}</td>\r\n              <td>{{ attendance.date }}</td>\r\n              <td>{{ attendance.inTime }}</td>\r\n              <td>{{ attendance.outTime }}</td>\r\n          \r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      selectedDate: null,\r\n      employeeTable: true,\r\n      hours:true\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n  if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n    const userId = this.userDetails ? this.userDetails.userId : null;\r\n    if (userId) {\r\n      const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\r\n      const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n        const key = employee.empId;\r\n        if (!acc[key]) {\r\n          acc[key] = {\r\n            empId: employee.empId,\r\n            empName: employee.empName,\r\n            empRole: employee.empRole, \r\n            attendances: []\r\n          };\r\n        }\r\n        acc[key].attendances.push(employee);\r\n        return acc;\r\n      }, {});\r\n      const uniqueEmployees = Object.values(groupedEmployees);\r\n      return uniqueEmployees;\r\n    }\r\n  }\r\n  return [];\r\n},\r\nworkingHoursData() {\r\n  const attendanceDates = {};\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      if (!attendanceDates[attendance.date]) {\r\n        attendanceDates[attendance.date] = {\r\n          date: attendance.date,\r\n          Intime: [],\r\n          Outtime: [],\r\n          totalDifference: 0 \r\n        };\r\n      }\r\n      if (attendance.outTime) {\r\n        const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\r\n        const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\r\n        const diff = Math.abs(outtimeDate - intimeDate);\r\n        attendanceDates[attendance.date].totalDifference += diff;\r\n        attendanceDates[attendance.date].Intime.push(attendance.inTime);\r\n        attendanceDates[attendance.date].Outtime.push(attendance.outTime);\r\n      }\r\n    });\r\n  });\r\n\r\n  const result = Object.values(attendanceDates).map(dateInfo => {\r\n    const totalHours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n    const totalMinutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n    return {\r\n      date: dateInfo.date,\r\n      Intime: dateInfo.Intime, \r\n      Outtime: dateInfo.Outtime, \r\n      totalHours: totalHours,\r\n      totalMinutes: totalMinutes\r\n    };\r\n  });\r\n\r\n  return result;\r\n}\r\n,\r\n  },\r\n  methods: {\r\n    showEmployeeDetails(employee) {\r\n      this.selectedEmployee = employee;\r\n      this.workingHours = true;\r\n      this.employeeTable = false;\r\n    \r\n    },\r\n    getValues(date) {\r\n    this.selectedDate = date;\r\n    this.workingHours = false;\r\n    this.EmployeeDetailsTable = true; \r\n\r\n}\r\n,\r\n    getWorkingTable(){\r\n      this.workingHours=true\r\n      this.selectedEmployee=false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ntbody tr:nth-child(odd) {\r\n  background: #ccc;\r\n}\r\n\r\ntable tr:hover td {\r\n  background: #839192;\r\n  color: #000;\r\n  transition: all 0.3s ease-in;\r\n  cursor: pointer;\r\n}\r\n.table th {\r\n  padding-left: 200px;\r\n  border-bottom: 1px solid black, 3px double black;  \r\n\r\n}\r\n\r\n .table td{\r\n  padding-left: 20px;\r\nfont-family:Arial, Helvetica, sans-serif\r\n} \r\nth{\r\n  font-family: 'Arial';\r\n}\r\n.green-text {\r\n    color: green;\r\n}\r\n\r\n.red-text {\r\n    color: red;\r\n}\r\n\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}