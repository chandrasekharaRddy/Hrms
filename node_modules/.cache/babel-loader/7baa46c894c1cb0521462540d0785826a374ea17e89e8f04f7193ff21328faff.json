{"ast":null,"code":"export default {\n  data() {\n    return {\n      workingHours: []\n    };\n  },\n  computed: {\n    userData() {\n      return this.$store.getters.getUserData;\n    }\n  },\n  methods: {\n    logout(user) {\n      const currentDate = new Date();\n      user.signOut = currentDate.toLocaleTimeString();\n      this.$store.dispatch('updateUserData', user);\n    },\n    selectDate(date) {\n      const selectedGoals = this.goals.filter(goal => goal.date === date);\n      this.workingHours = selectedGoals.map(goal => ({\n        date: goal.date,\n        hours: this.calculate(goal.signIn, goal.signOut)\n      }));\n    },\n    calculate(signIn, signOut) {\n      // Implementation of your calculate method remains unchanged\n    }\n  }\n};","map":{"version":3,"names":["data","workingHours","computed","userData","$store","getters","getUserData","methods","logout","user","currentDate","Date","signOut","toLocaleTimeString","dispatch","selectDate","date","selectedGoals","goals","filter","goal","map","hours","calculate","signIn"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>SignIn</th>\r\n          <th>SignOut</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(user, index) in userData\" :key=\"index\">\r\n          <td>{{ user.username }}</td>\r\n          <td>{{ user.date }}</td>\r\n          <td @click=\"selectDate(user.date)\">{{ user.signIn }}</td>\r\n          <td>{{ user.signOut }}</td>\r\n          <td><button @click=\"logout(user)\">SignOut</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  methods: {\r\n    logout(user) {\r\n      const currentDate = new Date();\r\n      user.signOut = currentDate.toLocaleTimeString();\r\n      this.$store.dispatch('updateUserData', user);\r\n    },\r\n    selectDate(date) {\r\n      const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n      this.workingHours = selectedGoals.map((goal) => ({\r\n        date: goal.date,\r\n        hours: this.calculate(goal.signIn, goal.signOut),\r\n      }));\r\n    },\r\n    calculate(signIn, signOut) {\r\n      // Implementation of your calculate method remains unchanged\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- <template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>SignIn</th>\r\n          <th>SignOut</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n          <td>{{ goal.username }}</td>\r\n          <td>{{ goal.date }}</td>\r\n          <td @click=\"selectDate(goal.date)\">{{ goal.date }}</td>\r\n          <td>{{ goal.signIn }}</td>\r\n          <td>{{ goal.signOut }}</td>\r\n          <td><button @click=\"logout(goal)\">SignOut</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    useData: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      goals: [],\r\n      workingHours: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.addItem();\r\n  },\r\n  methods: {\r\n    addItem() {\r\n      const newItem = {\r\n        date: this.useData.presentDate,\r\n        signIn: this.useData.presentTime,\r\n        signOut: \"\",\r\n        username: this.useData.username,\r\n      };\r\n      this.goals.push(newItem);\r\n      console.log(this.useData);\r\n    },\r\n    logout(goal) {\r\n      const currentDate = new Date();\r\n      goal.signOut = currentDate.toLocaleTimeString();\r\n    },\r\n    selectDate(date) {\r\n      const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n      this.workingHours = selectedGoals.map((goal) => ({\r\n        date: goal.date,\r\n        hours: this.calculate(goal.signIn, goal.signOut),\r\n      }));\r\n    },\r\n    calculate(signIn, signOut) {\r\n      if (signIn && signOut) {\r\n        const signInTime = new Date(`2000-01-01 ${signIn}`);\r\n        const signOutTime = new Date(`2000-01-01 ${signOut}`);\r\n        const timeDiff = signOutTime - signInTime;\r\n        const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n        const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n        return `${hours} hrs ${minutes} mins `;\r\n      } else {\r\n        return \"0\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your styles go here */\r\n</style> -->\r\n"],"mappings":"AAwCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,WAAW;IACxC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAACC,IAAI,EAAE;MACX,MAAMC,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;MAC9BF,IAAI,CAACG,OAAM,GAAIF,WAAW,CAACG,kBAAkB,CAAC,CAAC;MAC/C,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,gBAAgB,EAAEL,IAAI,CAAC;IAC9C,CAAC;IACDM,UAAUA,CAACC,IAAI,EAAE;MACf,MAAMC,aAAY,GAAI,IAAI,CAACC,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACJ,IAAG,KAAMA,IAAI,CAAC;MACrE,IAAI,CAACf,YAAW,GAAIgB,aAAa,CAACI,GAAG,CAAED,IAAI,KAAM;QAC/CJ,IAAI,EAAEI,IAAI,CAACJ,IAAI;QACfM,KAAK,EAAE,IAAI,CAACC,SAAS,CAACH,IAAI,CAACI,MAAM,EAAEJ,IAAI,CAACR,OAAO;MACjD,CAAC,CAAC,CAAC;IACL,CAAC;IACDW,SAASA,CAACC,MAAM,EAAEZ,OAAO,EAAE;MACzB;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}