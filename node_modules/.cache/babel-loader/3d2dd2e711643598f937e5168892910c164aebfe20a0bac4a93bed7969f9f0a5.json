{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"container-fluid border w-100 p-2 mainHeading\"\n}, \"HRMS - Human Resource Management System\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"container-fluid mainContainer\"\n};\nconst _hoisted_3 = {\n  class: \"row flex-nowrap\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"bg-dark col-auto col-md-2 col-lg-2 min-vh-100 d-flex flex-column justify-content\\\"><div class=\\\"bg-dark p-2\\\"><ul class=\\\"nav nav-pills flex-column mainnav mt-5 gap-3\\\"><li class=\\\"nav-item py-2 py-sm-0\\\"><a href=\\\"#\\\" class=\\\"nav-link text-white\\\"><i class=\\\"fa-solid fa-house\\\"></i><span class=\\\"fs-4 d-none d-sm-inline\\\"> Dashboard</span></a></li><li class=\\\"nav-item py-2 py-sm-0\\\"><a href=\\\"#\\\" class=\\\"nav-link text-white\\\"><i class=\\\"fa-solid fa-calendar-days\\\"></i><span class=\\\"fs-4 d-none d-sm-inline\\\"> Attendance</span></a></li><li class=\\\"nav-item py-2 py-sm-0\\\"><a href=\\\"#\\\" class=\\\"nav-link text-white\\\"><i class=\\\"fa-solid fa-users\\\"></i><span class=\\\"fs-4 d-none d-sm-inline\\\"> Team Members</span></a></li></ul></div></div>\", 1);\nconst _hoisted_5 = {\n  class: \"col p-4 content-area\"\n};\nconst _hoisted_6 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_7 = {\n  class: \"row\"\n};\nconst _hoisted_8 = {\n  class: \"col border\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"text-info\"\n}, \"Summary:\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"container mt-5 d-flex justify-content-center gap-3\"\n};\nconst _hoisted_11 = {\n  class: \"card text-center\"\n};\nconst _hoisted_12 = {\n  class: \"card-header\"\n};\nconst _hoisted_13 = {\n  class: \"d-flex justify-content-center\"\n};\nconst _hoisted_14 = {\n  class: \"col\"\n};\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bx bxs-time attend\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"attendHeading\"\n}, \"Avg Hours\", -1 /* HOISTED */);\nconst _hoisted_17 = {\n  class: \"card text-center\"\n};\nconst _hoisted_18 = {\n  class: \"card-header\"\n};\nconst _hoisted_19 = {\n  class: \"d-flex justify-content-center\"\n};\nconst _hoisted_20 = {\n  class: \"col\"\n};\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bx bxs-log-in-circle attend\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"attendHeading\"\n}, \"Avg Check-in\", -1 /* HOISTED */);\nconst _hoisted_23 = {\n  class: \"container mt-5 d-flex justify-content-center gap-3 bottom-padding\"\n};\nconst _hoisted_24 = {\n  class: \"card text-center\"\n};\nconst _hoisted_25 = {\n  class: \"card-header\"\n};\nconst _hoisted_26 = {\n  class: \"d-flex justify-content-center align-items-center\"\n};\nconst _hoisted_27 = {\n  class: \"col\"\n};\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bx bxs-time-five attend\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"attendHeading\"\n}, \"On-time\", -1 /* HOISTED */);\nconst _hoisted_30 = {\n  class: \"card text-center\"\n};\nconst _hoisted_31 = {\n  class: \"card-header\"\n};\nconst _hoisted_32 = {\n  class: \"d-flex justify-content-center\"\n};\nconst _hoisted_33 = {\n  class: \"col\"\n};\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"bx bxs-log-out-circle attend\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"h6\", {\n  class: \"attendHeading\"\n}, \"Avg Check-out\", -1 /* HOISTED */);\nconst _hoisted_36 = {\n  class: \"col border\"\n};\nconst _hoisted_37 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Statistics:\", -1 /* HOISTED */);\nconst _hoisted_38 = {\n  class: \"bargraph2\",\n  ref: \"myChart\",\n  width: \"480\",\n  height: \"390\",\n  style: {\n    \"padding-left\": \"-10px\"\n  }\n};\nconst _hoisted_39 = {\n  class: \"col border\"\n};\nconst _hoisted_40 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Date Activity:\", -1 /* HOISTED */);\nconst _hoisted_41 = {\n  class: \"container\"\n};\nconst _hoisted_42 = {\n  class: \"row\"\n};\nconst _hoisted_43 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_44 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"punchheading\"\n}, \"Punch In At:\", -1 /* HOISTED */);\nconst _hoisted_45 = {\n  style: {\n    \"font-size\": \"20px\"\n  }\n};\nconst _hoisted_46 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Punch Out At:\", -1 /* HOISTED */);\nconst _hoisted_47 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Punch In At:\", -1 /* HOISTED */);\nconst _hoisted_48 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Punch Out At:\", -1 /* HOISTED */);\nconst _hoisted_49 = {\n  key: 0\n};\nconst _hoisted_50 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Punch In At:\", -1 /* HOISTED */);\nconst _hoisted_51 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Punch Out At:\", -1 /* HOISTED */);\nconst _hoisted_52 = {\n  class: \"container border\"\n};\nconst _hoisted_53 = {\n  class: \"row\"\n};\nconst _hoisted_54 = {\n  class: \"col-8\"\n};\nconst _hoisted_55 = {\n  class: \"col-sm-3 search\"\n};\nconst _hoisted_56 = {\n  style: {\n    \"max-height\": \"400px\",\n    \"overflow-y\": \"auto\"\n  }\n};\nconst _hoisted_57 = {\n  class: \"table table-sm\"\n};\nconst _hoisted_58 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Intime\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Outtime\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"WorkingHours\")])], -1 /* HOISTED */);\nconst _hoisted_59 = [\"onClick\"];\nconst _hoisted_60 = {\n  class: \"col-4\",\n  style: {\n    \"height\": \"500px\"\n  }\n};\nconst _hoisted_61 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"bargraph\", -1 /* HOISTED */);\nconst _hoisted_62 = {\n  ref: \"myChart3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_hoisted_15, _hoisted_16, _createElementVNode(\"h6\", null, _toDisplayString($options.averageHours), 1 /* TEXT */)])])])]), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [_hoisted_21, _hoisted_22, _createElementVNode(\"h6\", null, _toDisplayString(this.summaryavgcheckIn), 1 /* TEXT */)])])])])]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_hoisted_28, _hoisted_29, _createElementVNode(\"h6\", null, _toDisplayString(this.ontimePercentage + '%'), 1 /* TEXT */)])])])]), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, [_hoisted_34, _hoisted_35, _createElementVNode(\"h6\", null, _toDisplayString(this.summaryavgCheckOut), 1 /* TEXT */)])])])])])]), _createElementVNode(\"div\", _hoisted_36, [_hoisted_37, _createElementVNode(\"canvas\", _hoisted_38, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_39, [_hoisted_40, _createElementVNode(\"div\", _hoisted_41, [_createElementVNode(\"div\", _hoisted_42, [_createElementVNode(\"div\", _hoisted_43, [_hoisted_44, _createElementVNode(\"p\", _hoisted_45, _toDisplayString($data.punchValues.Intime1), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_hoisted_46, _createElementVNode(\"p\", null, _toDisplayString($data.punchValues.Outtime1), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_hoisted_47, _createElementVNode(\"p\", null, _toDisplayString($data.punchValues.Intime2), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_hoisted_48, _createElementVNode(\"p\", null, _toDisplayString($data.punchValues.Outtime2), 1 /* TEXT */)]), $data.punchValues.Intime3 && $data.punchValues.Intime3.length > 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_49, [_createElementVNode(\"div\", null, [_hoisted_50, _createElementVNode(\"p\", null, _toDisplayString($data.punchValues.Intime3), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_hoisted_51, _createElementVNode(\"p\", null, _toDisplayString($data.punchValues.Outtime3), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"div\", _hoisted_52, [_createElementVNode(\"div\", _hoisted_53, [_createElementVNode(\"div\", _hoisted_54, [_createElementVNode(\"div\", _hoisted_55, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    placeholder: \"Search\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.Search = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.Search]])]), _createElementVNode(\"div\", _hoisted_56, [_createElementVNode(\"table\", _hoisted_57, [_hoisted_58, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.workingHoursData, (record, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      onClick: $event => $options.getPunchDetails(record)\n    }, [_createElementVNode(\"td\", null, _toDisplayString(record.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.Intime[0]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.Outtime[1]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.totalHours) + \" hrs \" + _toDisplayString(record.totalMinutes) + \" mins\", 1 /* TEXT */)], 8 /* PROPS */, _hoisted_59);\n  }), 128 /* KEYED_FRAGMENT */))])])])]), _createElementVNode(\"div\", _hoisted_60, [_hoisted_61, _createElementVNode(\"canvas\", _hoisted_62, null, 512 /* NEED_PATCH */)])])])])])])])])]);\n}","map":{"version":3,"names":["_createElementVNode","class","ref","width","height","style","scope","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_toDisplayString","$options","averageHours","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","summaryavgcheckIn","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","ontimePercentage","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","summaryavgCheckOut","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","$data","punchValues","Intime1","_hoisted_46","Outtime1","_hoisted_47","Intime2","_hoisted_48","Outtime2","Intime3","length","_hoisted_49","_hoisted_50","_hoisted_51","Outtime3","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","type","placeholder","Search","$event","_hoisted_56","_hoisted_57","_hoisted_58","_Fragment","_renderList","workingHoursData","record","index","key","onClick","getPunchDetails","date","Intime","Outtime","totalHours","totalMinutes","_hoisted_60","_hoisted_61","_hoisted_62"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"container-fluid border w-100 p-2 mainHeading\">HRMS - Human Resource Management System</div>\r\n    <div class=\"container-fluid mainContainer\">\r\n      <div class=\"row flex-nowrap\">\r\n        <div class=\"bg-dark col-auto col-md-2 col-lg-2 min-vh-100 d-flex flex-column justify-content\">\r\n          <div class=\"bg-dark p-2\">\r\n            <ul class=\"nav nav-pills flex-column mainnav mt-5 gap-3\">\r\n              <li class=\"nav-item py-2 py-sm-0\">\r\n                <a href=\"#\" class=\"nav-link text-white\">\r\n                  <i class=\"fa-solid fa-house\"></i><span class=\"fs-4 d-none d-sm-inline\"> Dashboard</span>\r\n                </a>\r\n              </li>\r\n              <li class=\"nav-item py-2 py-sm-0\">\r\n                <a href=\"#\" class=\"nav-link text-white\">\r\n                  <i class=\"fa-solid fa-calendar-days\"></i><span class=\"fs-4 d-none d-sm-inline\"> Attendance</span>\r\n                </a>\r\n              </li>\r\n              <li class=\"nav-item py-2 py-sm-0\">\r\n                <a href=\"#\" class=\"nav-link text-white\">\r\n                  <i class=\"fa-solid fa-users\"></i><span class=\"fs-4 d-none d-sm-inline\"> Team Members</span>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"col p-4 content-area\">\r\n          <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n              <div class=\"col border\">\r\n                <h4 class=\"text-info\">Summary:</h4>\r\n      <div class=\"container mt-5 d-flex justify-content-center  gap-3\">\r\n  <div class=\"card text-center\">\r\n    <div class=\"card-header \">\r\n      <div class=\"d-flex justify-content-center \">\r\n        <div class=\"col\">\r\n          <i class='bx bxs-time attend'></i>\r\n            <h6 class=\"attendHeading\">Avg Hours</h6>\r\n            <h6>{{ averageHours }}</h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card text-center\">\r\n    <div class=\"card-header \">\r\n      <div class=\"d-flex justify-content-center\">\r\n        <div class=\"col\">\r\n          <i class='bx bxs-log-in-circle attend'></i>\r\n          <h6 class=\"attendHeading\">Avg Check-in</h6>\r\n          <h6>{{ this.summaryavgcheckIn }}</h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n      <div class=\"container mt-5 d-flex justify-content-center gap-3 bottom-padding\">\r\n  <div class=\"card text-center\">\r\n    <div class=\"card-header \">\r\n      <div class=\"d-flex justify-content-center align-items-center\">\r\n        <div class=\"col\">\r\n          <i class='bx bxs-time-five attend' ></i>\r\n          <h6 class=\"attendHeading\">On-time</h6>\r\n          <h6>{{ this.ontimePercentage+'%' }}</h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"card text-center\">\r\n    <div class=\"card-header \">\r\n      <div class=\"d-flex justify-content-center\">\r\n        <div class=\"col\">\r\n          <i class='bx bxs-log-out-circle attend' ></i>\r\n          <h6 class=\"attendHeading\">Avg Check-out</h6>\r\n          <h6>{{ this.summaryavgCheckOut }}</h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n    </div>\r\n    <div class=\"col border\">\r\n      <h4>Statistics:</h4>\r\n      <canvas class=\"bargraph2\" ref=\"myChart\" width=\"480\" height=\"390\" style=\"padding-left: -10px;\"></canvas>\r\n    </div>\r\n    <div class=\"col border\">\r\n      <h4>Date Activity:</h4>\r\n      <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div style=\"display: flex;\">\r\n            <h4 class=\"punchheading\">Punch In At:</h4>\r\n          <p style=\"font-size: 20px;\">{{ punchValues.Intime1 }}</p>\r\n        </div>\r\n        <div >\r\n            <h4 >Punch Out At:</h4>\r\n          <p>{{ punchValues.Outtime1 }}</p>\r\n        </div>\r\n        <div >\r\n            <h4 >Punch In At:</h4>\r\n          <p>{{  punchValues.Intime2 }}</p>\r\n        </div>\r\n        <div>\r\n            <h4>Punch Out At:</h4>\r\n          <p >{{punchValues.Outtime2 }}</p>\r\n        </div>\r\n        <div v-if=\"punchValues.Intime3 && punchValues.Intime3.length > 1\" >\r\n          <div>\r\n            <h4>Punch In At:</h4>\r\n          <p>{{  punchValues.Intime3 }}</p>\r\n        </div>\r\n        <div>\r\n            <h4 >Punch Out At:</h4>\r\n          <p>{{punchValues.Outtime3 }}</p>\r\n        </div>\r\n        </div>\r\n     </div>\r\n    </div>\r\n    </div>\r\n    <div class=\"container border\">\r\n      <div class=\"row\">\r\n  <div class=\"col-8\">\r\n    <div class=\"col-sm-3 search\">\r\n      <input type=\"password\" class=\"form-control\" placeholder=\"Search\" v-model=\"Search\">\r\n    </div>\r\n    <div style=\"max-height: 400px; overflow-y: auto;\">\r\n                <table class=\"table table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Date</th>\r\n                            <th scope=\"col\">Intime</th>\r\n                            <th scope=\"col\">Outtime</th>\r\n                            <th scope=\"col\">WorkingHours</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"(record, index) in workingHoursData\" :key=\"index\" @click=\"getPunchDetails(record)\">\r\n                            <td>{{ record.date }}</td>\r\n                            <td>{{ record.Intime[0] }}</td>\r\n                            <td>{{ record.Outtime[1] }}</td>\r\n                            <td>{{ record.totalHours }} hrs {{ record.totalMinutes }} mins</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n  </div>\r\n  <div class=\"col-4\" style=\"height: 500px;\">\r\n    <h4>bargraph</h4>\r\n    <canvas ref=\"myChart3\"></canvas>\r\n  </div>\r\n</div>\r\n    </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  data() {\r\n    return { \r\n      selectedDate: null,\r\n      employeeTable: true,\r\n      hours: true,\r\n      Search: \"\",\r\n      punchValues: {\r\n        Intime1: null,\r\n        Intime2: null,\r\n        Outtime1: null,\r\n        Outtime2: null,\r\n        Intime3: [],\r\n        Outtime3: []\r\n      },\r\n      chart: null, \r\n      chartData3: {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n        datasets: [\r\n          {\r\n          label: 'earlyEntry',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n        {\r\n          label: 'ontime',\r\n          data: [0,0,0,0,0,0]\r\n        },\r\n        {\r\n          label: 'late',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n        {\r\n          label: 'earlyleave',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n        {\r\n          label: 'overtime',\r\n          data: [0,0,0,0,0,0],\r\n        },\r\n      ]\r\n      },\r\n      \r\n      chartOptions3: {\r\n         responsive: true,\r\n          maintainAspectRatio: false,\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: 'Attendance'\r\n            \r\n          }\r\n        },\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n  },\r\n  created() {\r\n    this.initializePunchValues();\r\n  },\r\n  mounted() {\r\n    this.chartVersion = Chart.version;\r\n    this.renderChart();\r\n    const ctx = this.$refs.myChart.getContext('2d');\r\n    new Chart(ctx, {\r\n      type: 'bar',\r\n      data: this.chartData,\r\n      options: this.chartOptions,\r\n      plugins: [this.progressBarPlugin]\r\n    });\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.getters. getUserData && this.$store.getters.getUserData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.getters. getUserData && this.$store.getters.getUserData.length > 0) {\r\n        const userId = this.userDetails ? this.userDetails.userId : null;\r\n        if (userId) {\r\n          const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\r\n          const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n            const key = employee.empId;\r\n            if (!acc[key]) {\r\n              acc[key] = {\r\n                empId: employee.empId,\r\n                empName: employee.empName,\r\n                empRole: employee.empRole,\r\n                attendances: []\r\n              };\r\n            }\r\n            acc[key].attendances.push(employee);\r\n            return acc;\r\n          }, {});\r\n          const uniqueEmployees = Object.values(groupedEmployees);\r\n          return uniqueEmployees;\r\n        }\r\n      }\r\n      return [];\r\n    },\r\n    workingHoursData() {\r\n  const attendanceDates = {};\r\n  const referenceDate = '01/01/2000';\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      const { date, inTime, outTime } = attendance;\r\n      if (!attendanceDates[date]) {\r\n        attendanceDates[date] = {\r\n          date: date,\r\n          Intime: [],\r\n          Outtime: [],\r\n          totalDifference: 0,\r\n        };\r\n      }\r\n      attendanceDates[date].Intime.push(inTime);\r\n      if (outTime) {\r\n        const intimeDate = new Date(`${referenceDate} ${inTime}`);\r\n        const outtimeDate = new Date(`${referenceDate} ${outTime}`);\r\n        const diff = Math.abs(outtimeDate - intimeDate);\r\n        attendanceDates[date].totalDifference += diff;\r\n        attendanceDates[date].Outtime.push(outTime);\r\n      }\r\n    });\r\n  });\r\n \r\n  const result = Object.values(attendanceDates).map(dateInfo => {\r\n    const totalHours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n    const totalMinutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n    return {\r\n      date: dateInfo.date,\r\n      Intime: dateInfo.Intime,\r\n      Outtime: dateInfo.Outtime,\r\n      totalHours: totalHours,\r\n      totalMinutes: totalMinutes\r\n    };\r\n  }).filter(record => record.date.includes(this.Search));\r\n  return result;\r\n},\r\naverageHours() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / this.workingHoursData.length;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength=this.workingHoursData.length;\r\n        console.log(totallength);\r\n        return `${averageHours} hrs ${averageMinutes} mins`;\r\n       \r\n      }\r\n      return null;\r\n    },\r\n\r\nWeekHours() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / 5;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength = this.filteredWorkingHoursData.length;\r\n         console.log(totallength);\r\n        return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n      }\r\n      return null;\r\n    },\r\n    MonthHours() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.WorkingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.WorkingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength = this.filteredWorkingHoursData.length;\r\n         console.log(totallength);\r\n        return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n\r\n      }\r\n      return null;\r\n    },\r\n    chartData() {\r\n      return {\r\n        labels: ['Today', 'Week', 'Month'],\r\n        datasets: [{\r\n          data: [\r\n        { value: 0, max: 9 },\r\n        { value: 0, max: 45 },\r\n        { value: 0, max: 180 }\r\n      ],\r\n          backgroundColor: [\r\n            'rgba(255, 26, 104, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n            'rgba(255, 206, 86, 0.2)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 26, 104, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n          borderSkipped: false,\r\n          borderRadius: 5,\r\n          barPercentage: 0.2,\r\n          categoryPercentage: 0.5,\r\n        }]\r\n      };\r\n    },\r\n    getteam() {\r\n      return this.$store.getters.getTeamMembers;\r\n    },\r\n    chartOptions() {\r\n      return {\r\n        indexAxis: 'y',\r\n        plugins: {\r\n          legend: { display: false }\r\n        },\r\n        scales: {\r\n          x: { grid: { display: false }, ticks: { display: false } },\r\n          y: { beginAtZero: true, grid: { display: false }, ticks: { display: false } }\r\n        }\r\n      };\r\n    },\r\n    progressBarPlugin() {\r\n  return {\r\n    beforeDatasetDraw(chart) {\r\n      const { ctx, chartArea: { left, right, width, height }, scales: { y } } = chart;\r\n      ctx.save();\r\n\r\n      const dataset = chart.data.datasets[0];\r\n      const barHeight = height / y.ticks.length * dataset.barPercentage * dataset.categoryPercentage;\r\n\r\n      dataset.data.forEach((data, index) => {\r\n        const yPosition = y.getPixelForValue(index) - barHeight / 2;\r\n\r\n        ctx.font = '15px sans-serif';\r\n        ctx.fillStyle = 'rgba(102, 102, 102, 1)';\r\n        ctx.textAlign = 'left';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.fillText(chart.data.labels[index], left, yPosition - 10);\r\n        const dataText = `${data.value}/${data.max} Hrs`;\r\n        ctx.font = 'bold 15px sans-serif';\r\n        ctx.textAlign = 'right';\r\n        ctx.fillText(dataText, right, yPosition - 10);\r\n        const barWidth = width * (data.value / data.max);\r\n        ctx.fillStyle = dataset.borderColor[index];\r\n        ctx.fillRect(left, yPosition, barWidth, barHeight);\r\n      });\r\n\r\n      ctx.restore();\r\n    }\r\n  };\r\n}\r\n  },\r\n  methods:{\r\n    initializePunchValues() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const record = this.workingHoursData[0];\r\n        this.punchValues.Intime1 = record.Intime[0];\r\n        this.punchValues.Intime2 = record.Intime[1];\r\n        this.punchValues.Outtime1 = record.Outtime[0];\r\n        this.punchValues.Outtime2 = record.Outtime[1];\r\n        this.punchValues.Intime3 = record.Intime[2] || [];\r\n        this.punchValues.Outtime3 = record.Outtime[2] || [];\r\n      }\r\n      this.updateEnteries();\r\n      this.avgcheckin();\r\n      this.avgCheckOut();\r\n      this.OntimePercentage();\r\n      this.averageHours1();\r\n       this.MonthHours1();\r\n       this.WeekHours1();\r\n    },\r\n    getPunchDetails(record) {\r\n      this.punchValues.Intime1 = record.Intime[0];\r\n      this.punchValues.Intime2 = record.Intime[1];\r\n      this.punchValues.Outtime1 = record.Outtime[0];\r\n      this.punchValues.Outtime2 = record.Outtime[1];\r\n      this.punchValues.Intime3 = record.Intime[2] || [];\r\n      this.punchValues.Outtime3 = record.Outtime[2] || [];\r\n    },\r\n    updateEnteries(){\r\n      const attendanceDates = {};\r\n  const referenceDate = '01/01/2000';\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      const { date, inTime, outTime } = attendance;\r\n      if (!attendanceDates[date]) {\r\n        attendanceDates[date] = {\r\n          date: date,\r\n          Intime: [],\r\n          Outtime: [],\r\n          totalDifference: 0,\r\n        };\r\n      }\r\n      attendanceDates[date].Intime.push(inTime);\r\n      if (outTime) {\r\n        const intimeDate = new Date(`${referenceDate} ${inTime}`);\r\n        const outtimeDate = new Date(`${referenceDate} ${outTime}`);\r\n        const diff = Math.abs(outtimeDate - intimeDate);\r\n        attendanceDates[date].totalDifference += diff;\r\n        attendanceDates[date].Outtime.push(outTime);\r\n      }\r\n    });\r\n  });\r\n  const  marchpresentdays= Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n  const date = new Date(dateInfo.date);\r\n  const month = date.getMonth();\r\n  if (month === 2) {\r\n    return count + 1; \r\n  }\r\n  return count;\r\n}, 0);\r\nconsole.log(\"🚀 ~ no of days present in MarchMonth:\", marchpresentdays);\r\nconst  AprilPresentDays= Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n  const date = new Date(dateInfo.date);\r\n  const month = date.getMonth();\r\n  if (month === 3) {\r\n    return count + 1; \r\n  }\r\n  return count;\r\n}, 0);\r\n\r\nconsole.log(\"🚀 ~ no of days present in April Month:\", AprilPresentDays);\r\n  const earlyentry3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n      const month = new Date(dateInfo.date).getMonth();\r\n      if (month === 2) {\r\n        return count + dateInfo.Intime.filter(time => time <'09:00:00').length;\r\n        \r\n      }\r\n      return count;\r\n    }, 0);\r\n  const ontime3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 2) {\r\n    return count + dateInfo.Intime.filter(time => time === '09:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const lateentry3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 2) {\r\n    return count + dateInfo.Intime.filter(time => time > '09:00:00' && time < '12:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const overtime3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 2) {\r\n    return count + dateInfo.Outtime.filter(time => time > '18:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\nconst earlyLeave3 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n  const month = new Date(dateInfo.date).getMonth();\r\n  if (month === 2) {\r\n  return count + dateInfo.Outtime.filter(time => time > '15:30:00' && time < '18:00:00').length;\r\n  }\r\n  return count;\r\n}, 0);\r\n  // console.log(\"🚀 ~ early:\", earlyentry3);\r\n  // console.log(\"🚀 ~ ontime:\", ontime3);\r\n  // console.log(\"🚀 ~ lateentry:\", lateentry3);\r\n  // console.log(\"🚀 ~ overtime:\", overtime3);\r\n  // console.log(\"🚀 ~ earlyLeave:\", earlyLeave3);\r\n  this.chartData3.datasets[0].data[2] = earlyentry3;\r\n      this.chartData3.datasets[1].data[2] = ontime3;\r\n      this.chartData3.datasets[2].data[2] = lateentry3;\r\n      this.chartData3.datasets[3].data[2] = earlyLeave3;\r\n      this.chartData3.datasets[4].data[2] = overtime3;\r\n\r\n     \r\n  \r\n  const earlyentry4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n      const month = new Date(dateInfo.date).getMonth();\r\n      if (month === 3) {\r\n        return count + dateInfo.Intime.filter(time => time <'09:00:00').length;\r\n      }\r\n      return count;\r\n    }, 0);\r\n  const ontime4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 3) {\r\n    return count + dateInfo.Intime.filter(time => time === '09:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const lateentry4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 3) {\r\n    return count + dateInfo.Intime.filter(time => time > '09:00:00' && time < '12:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\n  const overtime4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n    const month = new Date(dateInfo.date).getMonth();\r\n    if (month === 3) {\r\n    return count + dateInfo.Outtime.filter(time => time > '18:00:00').length;\r\n    }\r\n    return count;\r\n  }, 0);\r\nconst earlyLeave4 = Object.values(attendanceDates).reduce((count, dateInfo) => {\r\n  const month = new Date(dateInfo.date).getMonth();\r\n  if (month === 4) {\r\n  return count + dateInfo.Outtime.filter(time => time > '15:30:00' && time < '18:00:00').length;\r\n  }\r\n  return count;\r\n}, 0);\r\n  \r\n  this.chartData3.datasets[0].data[3] = earlyentry4;\r\n      this.chartData3.datasets[1].data[3] = ontime4;\r\n      this.chartData3.datasets[2].data[3] = lateentry4;\r\n      this.chartData3.datasets[3].data[3] = earlyLeave4;\r\n      this.chartData3.datasets[4].data[3] = overtime4;\r\n\r\n  const result = Object.values(attendanceDates).map(dateInfo => {\r\n    const totalHours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n    const totalMinutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n    return {\r\n      date: dateInfo.date,\r\n      Intime: dateInfo.Intime,\r\n      Outtime: dateInfo.Outtime,\r\n      totalHours: totalHours,\r\n      totalMinutes: totalMinutes\r\n    };\r\n  })\r\n  return result;\r\n},\r\navgcheckin(){\r\n  let totalFilteredTime = 0;\r\n  let filteredEntryCount = 0;\r\n\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      const { inTime } = attendance;\r\n      const timeParts = inTime.split(':').map(part => parseInt(part, 10));\r\n      const hour = timeParts[0];\r\n      const minute = timeParts[1];\r\n      const second = timeParts[2];\r\n\r\n      if (hour >= 8 && hour < 10) {\r\n        const timeMilliseconds = (hour * 3600 + minute * 60 + second) * 1000;\r\n        totalFilteredTime += timeMilliseconds;\r\n        filteredEntryCount++;\r\n      }\r\n    });\r\n  });\r\n\r\n  const averageTimeMilliseconds = filteredEntryCount ? totalFilteredTime / filteredEntryCount : 0;\r\n  const averageHour = Math.floor(averageTimeMilliseconds / (1000 * 60 * 60));\r\n  const averageMinute = Math.floor((averageTimeMilliseconds % (1000 * 60 * 60)) / (1000 * 60));\r\n  const averageSecond = Math.floor((averageTimeMilliseconds % (1000 * 60)) / 1000);\r\n  const averageCheckIn = `${averageHour}:${averageMinute}:${averageSecond}`;\r\n\r\n  console.log(\"🚀 ~ averageCheckIn :\", averageCheckIn);\r\n  this.summaryavgcheckIn=averageCheckIn \r\n  return averageCheckIn;\r\n},\r\navgCheckOut() {\r\n  let totalFilteredTime = 0;\r\n  let filteredEntryCount = 0;\r\n  this.employeeList.forEach(employee => {\r\n    if (employee.attendances && Array.isArray(employee.attendances)) {\r\n      employee.attendances.forEach(attendance => {\r\n        if (attendance.inTime) {\r\n          const timeParts = attendance.inTime.split(':').map(part => parseInt(part, 10));\r\n          if (timeParts.length === 3) { \r\n            const hour = timeParts[0];\r\n            const minute = timeParts[1];\r\n            const second = timeParts[2];\r\n\r\n            if (hour >= 17 && hour < 18) {\r\n              const timeMilliseconds = (hour * 3600 + minute * 60 + second) * 1000;\r\n              totalFilteredTime += timeMilliseconds;\r\n              filteredEntryCount++;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  const averageTimeMilliseconds = filteredEntryCount ? totalFilteredTime / filteredEntryCount : 0;\r\n  const averageHour = Math.floor(averageTimeMilliseconds / (1000 * 60 * 60));\r\n  const averageMinute = Math.floor((averageTimeMilliseconds % (1000 * 60 * 60)) / (1000 * 60));\r\n  const averageSecond = Math.floor((averageTimeMilliseconds % (1000 * 60)) / 1000);\r\n\r\n  const formattedHour = String(averageHour).padStart(2, '0');\r\n  const formattedMinute = String(averageMinute).padStart(2, '0');\r\n  const formattedSecond = String(averageSecond).padStart(2, '0');\r\n\r\n  const averageCheckOut = `${formattedHour}:${formattedMinute}:${formattedSecond}`;\r\n\r\n  console.log(\"🚀 ~ averageCheckOut :\", averageCheckOut);\r\n  this.summaryavgCheckOut = averageCheckOut;\r\n  return averageCheckOut;\r\n},\r\nOntimePercentage(){\r\n  let onTimeCount = 0;\r\n  let totalEntriesCount = 0;\r\n\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      const { inTime } = attendance;\r\n      const timeParts = inTime.split(':').map(part => parseInt(part, 10));\r\n      const hour = timeParts[0];\r\n      const minute = timeParts[1];\r\n      const second = timeParts[2];\r\n      totalEntriesCount++;\r\n      if (hour === 9 && minute === 0 && second === 0) {\r\n        onTimeCount++; \r\n      }\r\n    });\r\n  });\r\n\r\n  const onTimePercentage = Math.round((onTimeCount / totalEntriesCount) * 100);\r\n  console.log(\"🚀 ~ onTimePercentage:\", onTimePercentage + '%');\r\nthis.ontimePercentage= onTimePercentage\r\n  return onTimePercentage + '%';\r\n},\r\n    renderChart() {\r\n      const ctx = this.$refs.myChart3.getContext('2d');\r\n      this.chart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: this.chartData3,\r\n        options: this.chartOptions3\r\n      });\r\n    },\r\n    WeekHours1() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / 5;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength = this.workingHoursData.length;\r\n         console.log(totallength);\r\n         this.chartData.datasets[0].data[1] = { value: averageHours, max: 45 };\r\n        return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n      }\r\n      return null;\r\n    },\r\n     MonthHours1() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength = this.workingHoursData.length;\r\n         console.log(totallength);\r\n          this.chartData.datasets[0].data[2] = { value: averageHours, max: 180 };\r\n        return `${averageHours} Hrs ${averageMinutes} Mins`;\r\n      }\r\n      return null;\r\n    },\r\n    averageHours1() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / this.workingHoursData.length;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength=this.workingHoursData.length;\r\n        console.log(totallength);\r\n        this.chartData.datasets[0].data[0] = { value: averageHours, max: 9 };\r\n        return `${averageHours} hrs ${averageMinutes} mins`;\r\n       \r\n      }\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\n</script>\r\n<style>\r\n.mainHeading {\r\n  background-color: aqua;\r\n}\r\n\r\n.mainContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n\r\n.bg-dark {\r\n  background-color: #343a40 !important;\r\n}\r\n\r\n.nav-link {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.nav-link i {\r\n  margin-right: 5px;\r\n}\r\n\r\n.content-area {\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  flex-grow: 1;\r\n  overflow-y: auto;\r\n}\r\n.custom-icon-size {\r\n  font-size: 3em; \r\n}\r\n.card-header {\r\n  border-bottom: none; \r\n}\r\n.table {\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n}\r\n.MainHeading {\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n  color: red;\r\n}\r\n.search {\r\n   padding-top: 12px;\r\n}\r\n.mainnav{\r\n  padding-top: 40px;\r\n} \r\n@media (max-width: 768px) {\r\n  .mainHeading {\r\n    text-align: center;\r\n  }\r\n\r\n  .nav-link span {\r\n    display: inline !important;\r\n  }\r\n}\r\n.bottom-padding {\r\n        padding-bottom: 40px; \r\n    }\r\n    .punchValues{\r\n      padding-top: 40px;\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}