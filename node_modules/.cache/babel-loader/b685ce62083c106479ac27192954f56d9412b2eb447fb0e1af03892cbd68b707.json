{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      name: \"\",\n      password: \"\",\n      goals: [],\n      editGoals: []\n    };\n  },\n  methods: {\n    async login() {\n      const currentDate = new Date();\n      const presentDate = currentDate.toISOString();\n      const presentTime = currentDate.toLocaleTimeString('en-US', {\n        hour12: false\n      });\n      const [hours, minutes, seconds] = presentTime.split(':');\n      const formattedTime = `${hours.padStart(2, '0')}:${minutes.padStart(2, '0')}:${seconds.padStart(2, '0')}`;\n      const userData = {\n        name: this.name,\n        date: presentDate,\n        signin: formattedTime\n      };\n      try {\n        const response = await axios.post(\"https://655ee27d879575426b44185a.mockapi.io/users\", userData);\n        this.goals.push(response.data);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n      this.name = \"\";\n      this.password = \"\";\n    },\n    logout() {\n      const logoutTime = new Date().toLocaleTimeString('en-US', {\n        hour12: false\n      });\n      const lastUser = this.goals[this.goals.length - 1];\n      if (lastUser) {\n        lastUser.signout = logoutTime;\n        const difference = this.calculateDifference(lastUser.signin, lastUser.signout);\n        const totalHours = difference / 3600000;\n        this.editGoals.push({\n          date: lastUser.date,\n          totalHours: totalHours\n        });\n      }\n    },\n    calculateDifference(startTime, endTime) {\n      try {\n        const startTimestamp = Date.parse(`1970-01-01T${startTime}`);\n        const endTimestamp = Date.parse(`1970-01-01T${endTime}`);\n        if (isNaN(startTimestamp) || isNaN(endTimestamp)) {\n          throw new Error('error');\n        }\n        const difference = Math.round(endTimestamp - startTimestamp);\n        return difference;\n      } catch (error) {\n        console.error('Error', error);\n        return 0;\n      }\n    },\n    showDetails(selectedDate) {\n      this.goals = this.goals.filter(goal => goal.date === selectedDate);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","name","password","goals","editGoals","methods","login","currentDate","Date","presentDate","toISOString","presentTime","toLocaleTimeString","hour12","hours","minutes","seconds","split","formattedTime","padStart","userData","date","signin","response","post","push","error","console","logout","logoutTime","lastUser","length","signout","difference","calculateDifference","totalHours","startTime","endTime","startTimestamp","parse","endTimestamp","isNaN","Error","Math","round","showDetails","selectedDate","filter","goal"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\rouchat\\src\\components\\attendenceForm.vue"],"sourcesContent":["\r\n<template>\r\n  <div>\r\n    <h1>Welcome to the Dashboard, {{ $route.params.username }}</h1> \r\n  \r\n  </div>\r\n  <div>\r\n    <div class=\"form\">\r\n      <div>\r\n        <label>Username:</label>\r\n        <input type=\"text\" v-model=\"name\"   placeholder=\"Username\"/>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <label>Password:</label>\r\n        <input type=\"password\" v-model=\"password\"  placeholder=\"Password\"/>\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <button @click=\"login\" class=\"btn btn-secondary\">Login</button>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div >\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>WorkingHours</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"editGoal in editGoals\" :key=\"editGoal.id\">\r\n              <td @click=\"showDetails(editGoal.date)\" class=\"display\">{{editGoal.date}}</td>\r\n              <td>{{ editGoal.totalHours}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        <table class=\"table table-bordered\" >\r\n          <thead class=\"table-dark\">\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Name</th>\r\n              <th>Date</th>\r\n              <th>signIN</th>\r\n              <th>SignOut</th>\r\n              <th>SignOut</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"goal in goals\" :key=\"goal.id\">\r\n              <td>{{ goal.id }}</td>\r\n              <td>{{ goal.name }}</td>\r\n              <td>{{ goal.date }}</td>\r\n              <td>{{ goal.signin }}</td>\r\n              <td>{{ goal.signout }}</td>\r\n              <td><button @click=\"logout\" class=\"btn btn-secondary\">Sign Out</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      password: \"\",\r\n      goals: [],\r\n      editGoals: [],\r\n    \r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      const currentDate = new Date();\r\n      const presentDate = currentDate.toISOString();\r\n      const presentTime = currentDate.toLocaleTimeString('en-US', { hour12: false });\r\n      const [hours, minutes, seconds] = presentTime.split(':');\r\n      const formattedTime = `${hours.padStart(2, '0')}:${minutes.padStart(2, '0')}:${seconds.padStart(2, '0')}`;\r\n      const userData = {\r\n        name: this.name,\r\n        date: presentDate,\r\n        signin: formattedTime,\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post(\"https://655ee27d879575426b44185a.mockapi.io/users\", userData);\r\n        this.goals.push(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error:\", error); \r\n      }\r\n      this.name = \"\";\r\n      this.password = \"\";\r\n    },\r\n\r\n    logout() {\r\n      const logoutTime = new Date().toLocaleTimeString('en-US', { hour12: false });\r\n      const lastUser = this.goals[this.goals.length - 1];\r\n      if (lastUser) {\r\n        lastUser.signout = logoutTime;\r\n        const difference =this.calculateDifference(lastUser.signin, lastUser.signout);\r\n        const totalHours = difference / 3600000;\r\n        this.editGoals.push({\r\n          date: lastUser.date,\r\n          totalHours: totalHours,\r\n        });\r\n      }\r\n    },\r\n\r\n    calculateDifference(startTime, endTime) {\r\n      try {\r\n        const startTimestamp = Date.parse(`1970-01-01T${startTime}`);\r\n        const endTimestamp = Date.parse(`1970-01-01T${endTime}`);\r\n\r\n        if (isNaN(startTimestamp) || isNaN(endTimestamp)) {\r\n          throw new Error('error');\r\n        }\r\n        const difference =Math.round(endTimestamp - startTimestamp);\r\n        return difference;\r\n      } catch (error) {\r\n        console.error('Error', error);\r\n        return 0;\r\n      }\r\n    },\r\n\r\n    showDetails(selectedDate) {\r\n      this.goals = this.goals.filter((goal) => goal.date === selectedDate);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.form {\r\n  border: 1px solid;\r\n  width: 25%;\r\n  padding: 12px 20px;\r\n  margin: 8px 0;\r\n  box-sizing: border-box;\r\n  margin-left: 600px;\r\n  border-radius: 4px;\r\n  padding-top: 20px;\r\n  background-color: rgb(161, 190, 190);\r\n}\r\n\r\n.display {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n\r\n"],"mappings":";AAoEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE;IAEb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,MAAMC,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;MAC9B,MAAMC,WAAU,GAAIF,WAAW,CAACG,WAAW,CAAC,CAAC;MAC7C,MAAMC,WAAU,GAAIJ,WAAW,CAACK,kBAAkB,CAAC,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAM,CAAC,CAAC;MAC9E,MAAM,CAACC,KAAK,EAAEC,OAAO,EAAEC,OAAO,IAAIL,WAAW,CAACM,KAAK,CAAC,GAAG,CAAC;MACxD,MAAMC,aAAY,GAAK,GAAEJ,KAAK,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGJ,OAAO,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGH,OAAO,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;MACzG,MAAMC,QAAO,GAAI;QACfnB,IAAI,EAAE,IAAI,CAACA,IAAI;QACfoB,IAAI,EAAEZ,WAAW;QACjBa,MAAM,EAAEJ;MACV,CAAC;MAED,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMxB,KAAK,CAACyB,IAAI,CAAC,mDAAmD,EAAEJ,QAAQ,CAAC;QAChG,IAAI,CAACjB,KAAK,CAACsB,IAAI,CAACF,QAAQ,CAACvB,IAAI,CAAC;MAChC,EAAE,OAAO0B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;MACA,IAAI,CAACzB,IAAG,GAAI,EAAE;MACd,IAAI,CAACC,QAAO,GAAI,EAAE;IACpB,CAAC;IAED0B,MAAMA,CAAA,EAAG;MACP,MAAMC,UAAS,GAAI,IAAIrB,IAAI,CAAC,CAAC,CAACI,kBAAkB,CAAC,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAM,CAAC,CAAC;MAC5E,MAAMiB,QAAO,GAAI,IAAI,CAAC3B,KAAK,CAAC,IAAI,CAACA,KAAK,CAAC4B,MAAK,GAAI,CAAC,CAAC;MAClD,IAAID,QAAQ,EAAE;QACZA,QAAQ,CAACE,OAAM,GAAIH,UAAU;QAC7B,MAAMI,UAAS,GAAG,IAAI,CAACC,mBAAmB,CAACJ,QAAQ,CAACR,MAAM,EAAEQ,QAAQ,CAACE,OAAO,CAAC;QAC7E,MAAMG,UAAS,GAAIF,UAAS,GAAI,OAAO;QACvC,IAAI,CAAC7B,SAAS,CAACqB,IAAI,CAAC;UAClBJ,IAAI,EAAES,QAAQ,CAACT,IAAI;UACnBc,UAAU,EAAEA;QACd,CAAC,CAAC;MACJ;IACF,CAAC;IAEDD,mBAAmBA,CAACE,SAAS,EAAEC,OAAO,EAAE;MACtC,IAAI;QACF,MAAMC,cAAa,GAAI9B,IAAI,CAAC+B,KAAK,CAAE,cAAaH,SAAU,EAAC,CAAC;QAC5D,MAAMI,YAAW,GAAIhC,IAAI,CAAC+B,KAAK,CAAE,cAAaF,OAAQ,EAAC,CAAC;QAExD,IAAII,KAAK,CAACH,cAAc,KAAKG,KAAK,CAACD,YAAY,CAAC,EAAE;UAChD,MAAM,IAAIE,KAAK,CAAC,OAAO,CAAC;QAC1B;QACA,MAAMT,UAAS,GAAGU,IAAI,CAACC,KAAK,CAACJ,YAAW,GAAIF,cAAc,CAAC;QAC3D,OAAOL,UAAU;MACnB,EAAE,OAAOP,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7B,OAAO,CAAC;MACV;IACF,CAAC;IAEDmB,WAAWA,CAACC,YAAY,EAAE;MACxB,IAAI,CAAC3C,KAAI,GAAI,IAAI,CAACA,KAAK,CAAC4C,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAC3B,IAAG,KAAMyB,YAAY,CAAC;IACtE;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}