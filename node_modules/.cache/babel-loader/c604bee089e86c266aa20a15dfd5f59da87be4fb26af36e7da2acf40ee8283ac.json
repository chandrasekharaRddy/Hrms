{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      selectedEmployee: null\n    };\n  },\n  computed: {\n    userData() {\n      const userData = this.$store.getters.getUserData.user || {};\n      console.log(userData);\n      return userData;\n    },\n    employeeData() {\n      return this.$store.getters.getUserData.employeeData || [];\n    },\n    uniqueEmployeeData() {\n      const uniqueIds = new Set();\n      return this.employeeData.filter(employee => {\n        if (!uniqueIds.has(employee.id)) {\n          uniqueIds.add(employee.id);\n          return true;\n        }\n        return false;\n      });\n    },\n    workingHoursData() {\n      // Assuming you have fetched working hours data from Vuex store\n      return this.$store.getters.getWorkingHoursData || [];\n    },\n    matchingWorkingHours() {\n      const matchingHours = [];\n      for (const employee of this.employeeData) {\n        for (const hours of this.workingHoursData) {\n          if (employee.date === hours.date) {\n            const difference = this.calculateDifference(employee.intime, employee.outtime);\n            matchingHours.push({\n              date: employee.date,\n              workingHours: difference\n            });\n            break; // break after finding a match\n          }\n        }\n      }\n      return matchingHours;\n    }\n  },\n  methods: {\n    userDetails(id) {\n      console.log(id);\n    },\n    calculateDifference(startTime, endTime) {\n      // If output time is not provided, consider the difference as zero\n      if (!endTime || endTime.trim() === '') {\n        return 0;\n      }\n\n      // Implement your logic to calculate the difference between start time and end time\n      // Example implementation:\n      const start = new Date(startTime);\n      const end = new Date(endTime);\n      const difference = end - start; // Difference in milliseconds\n      // Convert difference to hours, minutes, seconds if needed\n      return difference;\n    }\n  }\n};","map":{"version":3,"names":["data","selectedEmployee","computed","userData","$store","getters","getUserData","user","console","log","employeeData","uniqueEmployeeData","uniqueIds","Set","filter","employee","has","id","add","workingHoursData","getWorkingHoursData","matchingWorkingHours","matchingHours","hours","date","difference","calculateDifference","intime","outtime","push","workingHours","methods","userDetails","startTime","endTime","trim","start","Date","end"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- User Table -->\r\n    <table v-if=\"userData\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ userData.id }}</td>\r\n          <td>{{ userData.name }}</td>\r\n          <td>{{ userData.email }}</td>\r\n          <td>{{ userData.role }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <!-- Employee Table -->\r\n    <table v-if=\"uniqueEmployeeData.length > 0\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in uniqueEmployeeData\" :key=\"index\">\r\n          <td @click=\"userDetails(employee.id)\">{{ employee.id }}</td>\r\n          <td>{{ employee.name }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>No employee data available.</p>\r\n  </div>\r\n  <div>\r\n    <!-- Working Hours Table -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(entry, index) in matchingWorkingHours\" :key=\"index\">\r\n          <td>{{ entry.date }}</td>\r\n          <td>{{ entry.workingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <!-- Employee Details Table -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Date</th>\r\n          <th>Intime</th>\r\n          <th>Outtime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in employeeData\" :key=\"index\">\r\n          <td>{{ employee.id }}</td>\r\n          <td>{{ employee.date }}</td>\r\n          <td>{{ employee.intime }}</td>\r\n          <td>{{ employee.outtime }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      const userData = this.$store.getters.getUserData.user || {};\r\n      console.log(userData); \r\n      return userData;\r\n    },\r\n    employeeData() {\r\n      return this.$store.getters.getUserData.employeeData || [];\r\n    },\r\n    uniqueEmployeeData() {\r\n      const uniqueIds = new Set();\r\n      return this.employeeData.filter(employee => {\r\n        if (!uniqueIds.has(employee.id)) {\r\n          uniqueIds.add(employee.id);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    },\r\n    workingHoursData() {\r\n      // Assuming you have fetched working hours data from Vuex store\r\n      return this.$store.getters.getWorkingHoursData || [];\r\n    },\r\n    matchingWorkingHours() {\r\n      const matchingHours = [];\r\n      for (const employee of this.employeeData) {\r\n        for (const hours of this.workingHoursData) {\r\n          if (employee.date === hours.date) {\r\n            const difference = this.calculateDifference(employee.intime, employee.outtime);\r\n            matchingHours.push({ date: employee.date, workingHours: difference });\r\n            break; // break after finding a match\r\n          }\r\n        }\r\n      }\r\n      return matchingHours;\r\n    },\r\n  },\r\n  methods: {\r\n    userDetails(id) {\r\n      console.log(id);\r\n    },\r\n    calculateDifference(startTime, endTime) {\r\n      // If output time is not provided, consider the difference as zero\r\n      if (!endTime || endTime.trim() === '') {\r\n        return 0;\r\n      }\r\n\r\n      // Implement your logic to calculate the difference between start time and end time\r\n      // Example implementation:\r\n      const start = new Date(startTime);\r\n      const end = new Date(endTime);\r\n      const difference = end - start; // Difference in milliseconds\r\n      // Convert difference to hours, minutes, seconds if needed\r\n      return difference;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your CSS styles */\r\n</style>\r\n"],"mappings":";AAiFA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,MAAMA,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,WAAW,CAACC,IAAG,IAAK,CAAC,CAAC;MAC3DC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MACrB,OAAOA,QAAQ;IACjB,CAAC;IACDO,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACN,MAAM,CAACC,OAAO,CAACC,WAAW,CAACI,YAAW,IAAK,EAAE;IAC3D,CAAC;IACDC,kBAAkBA,CAAA,EAAG;MACnB,MAAMC,SAAQ,GAAI,IAAIC,GAAG,CAAC,CAAC;MAC3B,OAAO,IAAI,CAACH,YAAY,CAACI,MAAM,CAACC,QAAO,IAAK;QAC1C,IAAI,CAACH,SAAS,CAACI,GAAG,CAACD,QAAQ,CAACE,EAAE,CAAC,EAAE;UAC/BL,SAAS,CAACM,GAAG,CAACH,QAAQ,CAACE,EAAE,CAAC;UAC1B,OAAO,IAAI;QACb;QACA,OAAO,KAAK;MACd,CAAC,CAAC;IACJ,CAAC;IACDE,gBAAgBA,CAAA,EAAG;MACjB;MACA,OAAO,IAAI,CAACf,MAAM,CAACC,OAAO,CAACe,mBAAkB,IAAK,EAAE;IACtD,CAAC;IACDC,oBAAoBA,CAAA,EAAG;MACrB,MAAMC,aAAY,GAAI,EAAE;MACxB,KAAK,MAAMP,QAAO,IAAK,IAAI,CAACL,YAAY,EAAE;QACxC,KAAK,MAAMa,KAAI,IAAK,IAAI,CAACJ,gBAAgB,EAAE;UACzC,IAAIJ,QAAQ,CAACS,IAAG,KAAMD,KAAK,CAACC,IAAI,EAAE;YAChC,MAAMC,UAAS,GAAI,IAAI,CAACC,mBAAmB,CAACX,QAAQ,CAACY,MAAM,EAAEZ,QAAQ,CAACa,OAAO,CAAC;YAC9EN,aAAa,CAACO,IAAI,CAAC;cAAEL,IAAI,EAAET,QAAQ,CAACS,IAAI;cAAEM,YAAY,EAAEL;YAAW,CAAC,CAAC;YACrE,MAAK,CAAE;UACT;QACF;MACF;MACA,OAAOH,aAAa;IACtB;EACF,CAAC;EACDS,OAAO,EAAE;IACPC,WAAWA,CAACf,EAAE,EAAE;MACdT,OAAO,CAACC,GAAG,CAACQ,EAAE,CAAC;IACjB,CAAC;IACDS,mBAAmBA,CAACO,SAAS,EAAEC,OAAO,EAAE;MACtC;MACA,IAAI,CAACA,OAAM,IAAKA,OAAO,CAACC,IAAI,CAAC,MAAM,EAAE,EAAE;QACrC,OAAO,CAAC;MACV;;MAEA;MACA;MACA,MAAMC,KAAI,GAAI,IAAIC,IAAI,CAACJ,SAAS,CAAC;MACjC,MAAMK,GAAE,GAAI,IAAID,IAAI,CAACH,OAAO,CAAC;MAC7B,MAAMT,UAAS,GAAIa,GAAE,GAAIF,KAAK,EAAE;MAChC;MACA,OAAOX,UAAU;IACnB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}