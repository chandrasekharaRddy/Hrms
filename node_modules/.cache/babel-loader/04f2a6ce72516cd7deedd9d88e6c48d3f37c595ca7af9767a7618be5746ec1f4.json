{"ast":null,"code":"export default {\n  data() {\n    return {\n      workingHours: [],\n      goals: [],\n      selectedDateGoals: []\n    };\n  },\n  computed: {\n    userData() {\n      return this.$store.getters.getUserData;\n    }\n  },\n  watch: {\n    userData: {\n      handler(newValue) {\n        if (Array.isArray(newValue.details)) {\n          this.workingHours = newValue.details.map(detail => ({\n            Date: detail.Date,\n            WorkingHours: this.calculateWorkingHours(detail.InTime1, detail.OutTime2)\n          }));\n          this.goals = newValue.users.map(user => ({\n            employeeName: user.name,\n            Date: user.Date,\n            InTime1: user.InTime1,\n            OutTime1: user.OutTime1,\n            InTime2: user.InTime2,\n            OutTime2: user.OutTime2\n          }));\n        } else {\n          this.workingHours = [];\n          this.goals = [];\n        }\n      },\n      immediate: true\n    }\n  }\n};","map":{"version":3,"names":["data","workingHours","goals","selectedDateGoals","computed","userData","$store","getters","getUserData","watch","handler","newValue","Array","isArray","details","map","detail","Date","WorkingHours","calculateWorkingHours","InTime1","OutTime2","users","user","employeeName","name","OutTime1","InTime2","immediate"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"table table-bordered\" >\r\n      <!-- Working Hours Table -->\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(hours, index) in workingHours\" :key=\"index\" @click=\"showGoals(hours.Date)\">\r\n          <td>{{ hours.Date }}</td>\r\n          <td>{{ hours.WorkingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n</div>\r\n<div>\r\n    <!-- Goals Table -->\r\n    <table class=\"table table-bordered\" >\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime1</th>\r\n          <th>OutTime1</th>\r\n          <th>InTime2</th>\r\n          <th>OutTime2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in selectedDateGoals\" :key=\"index\">\r\n          <td>{{ goal.employeeName }}</td>\r\n          <td>{{ goal.Date }}</td>\r\n          <td>{{ goal.InTime1 }}</td>\r\n          <td>{{ goal.OutTime1 }}</td>\r\n          <td>{{ goal.InTime2 }}</td>\r\n          <td>{{ goal.OutTime2 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n      goals: [],\r\n      selectedDateGoals: [],\r\n      \r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  watch: {\r\n    userData: {\r\n      handler(newValue) {\r\n        if (Array.isArray(newValue.details)) {\r\n          this.workingHours = newValue.details.map((detail) => ({\r\n            Date: detail.Date,\r\n            WorkingHours: this.calculateWorkingHours(detail.InTime1, detail.OutTime2),\r\n          }));\r\n\r\n          this.goals = newValue.users.map((user) => ({\r\n            employeeName: user.name,\r\n            Date: user.Date,\r\n            InTime1: user.InTime1,\r\n            OutTime1: user.OutTime1,\r\n            InTime2: user.InTime2,\r\n            OutTime2: user.OutTime2,\r\n          }));\r\n        } else {\r\n          this.workingHours = [];\r\n          this.goals = [];\r\n        }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  \r\n};\r\n</script>\r\n"],"mappings":"AA8CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE,EAAE;MACTC,iBAAiB,EAAE;IAErB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,WAAW;IACxC;EACF,CAAC;EACDC,KAAK,EAAE;IACLJ,QAAQ,EAAE;MACRK,OAAOA,CAACC,QAAQ,EAAE;QAChB,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAACG,OAAO,CAAC,EAAE;UACnC,IAAI,CAACb,YAAW,GAAIU,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAEC,MAAM,KAAM;YACpDC,IAAI,EAAED,MAAM,CAACC,IAAI;YACjBC,YAAY,EAAE,IAAI,CAACC,qBAAqB,CAACH,MAAM,CAACI,OAAO,EAAEJ,MAAM,CAACK,QAAQ;UAC1E,CAAC,CAAC,CAAC;UAEH,IAAI,CAACnB,KAAI,GAAIS,QAAQ,CAACW,KAAK,CAACP,GAAG,CAAEQ,IAAI,KAAM;YACzCC,YAAY,EAAED,IAAI,CAACE,IAAI;YACvBR,IAAI,EAAEM,IAAI,CAACN,IAAI;YACfG,OAAO,EAAEG,IAAI,CAACH,OAAO;YACrBM,QAAQ,EAAEH,IAAI,CAACG,QAAQ;YACvBC,OAAO,EAAEJ,IAAI,CAACI,OAAO;YACrBN,QAAQ,EAAEE,IAAI,CAACF;UACjB,CAAC,CAAC,CAAC;QACL,OAAO;UACL,IAAI,CAACpB,YAAW,GAAI,EAAE;UACtB,IAAI,CAACC,KAAI,GAAI,EAAE;QACjB;MACF,CAAC;MACD0B,SAAS,EAAE;IACb;EACF;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}