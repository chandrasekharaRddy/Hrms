{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"table\", {\n  class: \"table table-bordered\"\n}, [/*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeName\")])]), /*#__PURE__*/_createElementVNode(\"tbody\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\"), /*#__PURE__*/_createElementVNode(\"td\")])])])], -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0,\n  class: \"table table-bordered\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Working Hours\")])], -1 /* HOISTED */);\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"table table-bordered\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"InTime\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"OutTime\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", null, [$data.dateVisible ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_createCommentVNode(\" Working Hours Table \"), _hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.workingHours, (hour, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", {\n      onClick: $event => $options.getDate(hour.Date)\n    }, _toDisplayString(hour.Date), 9 /* TEXT, PROPS */, _hoisted_4), _createElementVNode(\"td\", null, _toDisplayString(hour.WorkingHours), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_createCommentVNode(\" Goals Table \"), $data.selectedDate ? (_openBlock(), _createElementBlock(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredGoals, (goal, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(goal.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.Date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.InTime1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.OutTime1), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","$data","dateVisible","_createElementBlock","_hoisted_2","_createCommentVNode","_hoisted_3","_Fragment","_renderList","workingHours","hour","index","key","onClick","$event","$options","getDate","Date","_hoisted_4","_toDisplayString","WorkingHours","selectedDate","_hoisted_5","_hoisted_6","filteredGoals","goal","name","InTime1","OutTime1"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\hrmsoutAttendenceLevel.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <table class=\"table table-bordered\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>EmployeeId</th>\r\n            <th>EmployeeName</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td></td>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div>\r\n      <table v-if=\"dateVisible\" class=\"table table-bordered\">\r\n        <!-- Working Hours Table -->\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Working Hours</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(hour, index) in workingHours\" :key=\"index\">\r\n            <td @click=\"getDate(hour.Date)\">{{ hour.Date }}</td>\r\n            <td>{{ hour.WorkingHours }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div>\r\n      <!-- Goals Table -->\r\n      <table v-if=\"selectedDate\" class=\"table table-bordered\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Date</th>\r\n            <th>InTime</th>\r\n            <th>OutTime</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(goal, index) in filteredGoals\" :key=\"index\">\r\n            <td>{{ goal.name }}</td>\r\n            <td>{{ goal.Date }}</td>\r\n            <td>{{ goal.InTime1 }}</td>\r\n            <td>{{ goal.OutTime1 }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        workingHours: [],\r\n        goals: [],\r\n        filteredGoals: [],\r\n        selectedDate: null,\r\n        dateVisible: true\r\n      };\r\n    },\r\n    computed: {\r\n      userData() {\r\n        return this.$store.getters.getUserData;\r\n      },\r\n    },\r\n    watch: {\r\n      userData: {\r\n        handler(newValue) {\r\n          if (Array.isArray(newValue)) {\r\n            this.workingHours = [];\r\n            const uniqueDates = [];\r\n            newValue.forEach(detail => {\r\n              const date = detail.Date;\r\n              if (!uniqueDates.includes(date)) {\r\n                uniqueDates.push(date);\r\n                const workingHours = this.calculateWorkingHours(\r\n                  ...newValue\r\n                    .filter(item => item.Date === date)\r\n                    .map(item => [item.InTime1, item.OutTime1])\r\n                    .flat()\r\n                );\r\n                this.workingHours.push({ Date: date, WorkingHours: workingHours });\r\n              }\r\n            });\r\n            this.goals = newValue.map((user) => ({\r\n              name: user.name,\r\n              Date: user.Date,\r\n              InTime1: user.InTime1,\r\n              OutTime1: user.OutTime1,\r\n            }));\r\n          } else {\r\n            this.workingHours = [];\r\n            this.goals = [];\r\n            this.clearFilteredGoals();\r\n          }\r\n        },\r\n        immediate: true,\r\n      },\r\n    },\r\n    methods: {\r\n      calculateWorkingHours(...timePairs) {\r\n        let totalHours = 0;\r\n        for (let i = 0; i < timePairs.length; i += 2) {\r\n          const inTime = new Date(`2000-01-01T${timePairs[i]}`);\r\n          const outTime = new Date(`2000-01-01T${timePairs[i + 1]}`);\r\n          const diff = outTime - inTime;\r\n          const hours = diff / (1000 * 60 * 60);\r\n          totalHours += hours;\r\n        }\r\n        return totalHours.toFixed(2);\r\n      },\r\n      getDate(date) {\r\n        if (this.selectedDate === date) {\r\n          this.selectedDate = null; \r\n        } else {\r\n          this.selectedDate = date;\r\n          this.filteredGoals = this.goals.filter((goal) => goal.Date === date);\r\n          this.dateVisible = false;\r\n        }\r\n      },\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";gCACIA,mBAAA,CAeM,c,aAdJA,mBAAA,CAaQ;EAbDC,KAAK,EAAC;AAAsB,I,aACjCD,mBAAA,CAKQ;EALDC,KAAK,EAAC;AAAY,I,aACvBD,mBAAA,CAGK,a,aAFHA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAqB,YAAjB,cAAY,E,kBAGpBA,mBAAA,CAKQ,gB,aAJNA,mBAAA,CAGK,a,aAFHA,mBAAA,CAAS,O,aACTA,mBAAA,CAAS,M;;;EAMWC,KAAK,EAAC;;gCAE9BD,mBAAA,CAKQ;EALDC,KAAK,EAAC;AAAY,I,aACvBD,mBAAA,CAGK,a,aAFHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAsB,YAAlB,eAAa,E;;;;EAaIC,KAAK,EAAC;;gCAC/BD,mBAAA,CAOQ;EAPDC,KAAK,EAAC;AAAY,I,aACvBD,mBAAA,CAKK,a,aAJHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAgB,YAAZ,SAAO,E;;6DAzCnBE,UAeM,EACNF,mBAAA,CAgBM,cAfSG,KAAA,CAAAC,WAAW,I,cAAxBC,mBAAA,CAcQ,SAdRC,UAcQ,GAbNC,mBAAA,yBAA4B,EAC5BC,UAKQ,EACRR,mBAAA,CAKQ,iB,kBAJNK,mBAAA,CAGKI,SAAA,QAAAC,WAAA,CAHuBP,KAAA,CAAAQ,YAAY,GAA5BC,IAAI,EAAEC,KAAK;yBAAvBR,mBAAA,CAGK;MAHsCS,GAAG,EAAED;IAAK,IACnDb,mBAAA,CAAoD;MAA/Ce,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,OAAO,CAACN,IAAI,CAACO,IAAI;wBAAMP,IAAI,CAACO,IAAI,wBAAAC,UAAA,GAC5CpB,mBAAA,CAAgC,YAAAqB,gBAAA,CAAzBT,IAAI,CAACU,YAAY,iB;6EAKhCtB,mBAAA,CAoBM,cAnBJO,mBAAA,iBAAoB,EACPJ,KAAA,CAAAoB,YAAY,I,cAAzBlB,mBAAA,CAiBQ,SAjBRmB,UAiBQ,GAhBNC,UAOQ,EACRzB,mBAAA,CAOQ,iB,kBANNK,mBAAA,CAKKI,SAAA,QAAAC,WAAA,CALuBP,KAAA,CAAAuB,aAAa,GAA7BC,IAAI,EAAEd,KAAK;yBAAvBR,mBAAA,CAKK;MALuCS,GAAG,EAAED;IAAK,IACpDb,mBAAA,CAAwB,YAAAqB,gBAAA,CAAjBM,IAAI,CAACC,IAAI,kBAChB5B,mBAAA,CAAwB,YAAAqB,gBAAA,CAAjBM,IAAI,CAACR,IAAI,kBAChBnB,mBAAA,CAA2B,YAAAqB,gBAAA,CAApBM,IAAI,CAACE,OAAO,kBACnB7B,mBAAA,CAA4B,YAAAqB,gBAAA,CAArBM,IAAI,CAACG,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}