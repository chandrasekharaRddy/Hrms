{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  computed: {\n    userData() {\n      // Your user data computation\n    },\n    employeeData() {\n      // Your employee data computation\n    },\n    uniqueEmployeeData() {\n      // Your computation for unique employee data\n    },\n    uniqueWorkingHoursData() {\n      return this.getUniqueDates();\n    }\n  },\n  methods: {\n    userDetails(id) {\n      // Your method to handle user details\n    },\n    getUniqueDates() {\n      const uniqueDates = {};\n      for (const employee of this.employeeData) {\n        if (!uniqueDates[employee.id]) {\n          uniqueDates[employee.id] = {};\n        }\n        uniqueDates[employee.id][employee.date] = true;\n      }\n      const result = [];\n      for (const employeeId in uniqueDates) {\n        const dates = Object.keys(uniqueDates[employeeId]);\n        for (const date of dates) {\n          result.push({\n            id: employeeId,\n            date: date,\n            totalWorkingHours: this.calculateTotalWorkingHours(employeeId, date)\n          });\n        }\n      }\n      return result;\n    },\n    calculateTotalWorkingHours(employeeId, date) {\n      let totalHours = 0;\n      for (const employee of this.employeeData) {\n        if (employee.id === employeeId && employee.date === date) {\n          totalHours += this.calculateWorkingHours(employee.intime, employee.outtime);\n        }\n      }\n      return totalHours;\n    },\n    calculateWorkingHours(intime, outtime) {\n      // Your method to calculate working hours\n    }\n  }\n};","map":{"version":3,"names":["computed","userData","employeeData","uniqueEmployeeData","uniqueWorkingHoursData","getUniqueDates","methods","userDetails","id","uniqueDates","employee","date","result","employeeId","dates","Object","keys","push","totalWorkingHours","calculateTotalWorkingHours","totalHours","calculateWorkingHours","intime","outtime"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- User Table -->\r\n    <table v-if=\"userData\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ userData.id }}</td>\r\n          <td>{{ userData.name }}</td>\r\n          <td>{{ userData.email }}</td>\r\n          <td>{{ userData.role }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <!-- Employee Table -->\r\n    <table v-if=\"uniqueEmployeeData.length > 0\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in uniqueEmployeeData\" :key=\"index\">\r\n          <td @click=\"userDetails(employee.id)\">{{ employee.id }}</td>\r\n          <td>{{ employee.name }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>No employee data available.</p>\r\n  </div>\r\n  <div>\r\n    <!-- Working Hours Table -->\r\n    <div v-if=\"uniqueWorkingHoursData.length > 0\">\r\n      <table class=\"table table-bordered\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Total Working Hours</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(entry, index) in uniqueWorkingHoursData\" :key=\"index\">\r\n            <td>{{ entry.date }}</td>\r\n            <td>{{ entry.totalWorkingHours }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <p v-else>No working hours data available.</p>\r\n  </div>\r\n  <div>\r\n    <!-- Employee Details Table -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Date</th>\r\n          <th>Intime</th>\r\n          <th>Outtime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in employeeData\" :key=\"index\">\r\n          <td>{{ employee.id }}</td>\r\n          <td>{{ employee.date }}</td>\r\n          <td>{{ employee.intime }}</td>\r\n          <td>{{ employee.outtime }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  computed: {\r\n    userData() {\r\n      // Your user data computation\r\n    },\r\n    employeeData() {\r\n      // Your employee data computation\r\n    },\r\n    uniqueEmployeeData() {\r\n      // Your computation for unique employee data\r\n    },\r\n    uniqueWorkingHoursData() {\r\n      return this.getUniqueDates();\r\n    }\r\n  },\r\n  methods: {\r\n    userDetails(id) {\r\n      // Your method to handle user details\r\n    },\r\n    getUniqueDates() {\r\n      const uniqueDates = {};\r\n      for (const employee of this.employeeData) {\r\n        if (!uniqueDates[employee.id]) {\r\n          uniqueDates[employee.id] = {};\r\n        }\r\n        uniqueDates[employee.id][employee.date] = true;\r\n      }\r\n      const result = [];\r\n      for (const employeeId in uniqueDates) {\r\n        const dates = Object.keys(uniqueDates[employeeId]);\r\n        for (const date of dates) {\r\n          result.push({\r\n            id: employeeId,\r\n            date: date,\r\n            totalWorkingHours: this.calculateTotalWorkingHours(employeeId, date)\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n    calculateTotalWorkingHours(employeeId, date) {\r\n      let totalHours = 0;\r\n      for (const employee of this.employeeData) {\r\n        if (employee.id === employeeId && employee.date === date) {\r\n          totalHours += this.calculateWorkingHours(employee.intime, employee.outtime);\r\n        }\r\n      }\r\n      return totalHours;\r\n    },\r\n    calculateWorkingHours(intime, outtime) {\r\n      // Your method to calculate working hours\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your CSS styles */\r\n</style>\r\n"],"mappings":";AAoFA,eAAe;EACbA,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT;IAAA,CACD;IACDC,YAAYA,CAAA,EAAG;MACb;IAAA,CACD;IACDC,kBAAkBA,CAAA,EAAG;MACnB;IAAA,CACD;IACDC,sBAAsBA,CAAA,EAAG;MACvB,OAAO,IAAI,CAACC,cAAc,CAAC,CAAC;IAC9B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACC,EAAE,EAAE;MACd;IAAA,CACD;IACDH,cAAcA,CAAA,EAAG;MACf,MAAMI,WAAU,GAAI,CAAC,CAAC;MACtB,KAAK,MAAMC,QAAO,IAAK,IAAI,CAACR,YAAY,EAAE;QACxC,IAAI,CAACO,WAAW,CAACC,QAAQ,CAACF,EAAE,CAAC,EAAE;UAC7BC,WAAW,CAACC,QAAQ,CAACF,EAAE,IAAI,CAAC,CAAC;QAC/B;QACAC,WAAW,CAACC,QAAQ,CAACF,EAAE,CAAC,CAACE,QAAQ,CAACC,IAAI,IAAI,IAAI;MAChD;MACA,MAAMC,MAAK,GAAI,EAAE;MACjB,KAAK,MAAMC,UAAS,IAAKJ,WAAW,EAAE;QACpC,MAAMK,KAAI,GAAIC,MAAM,CAACC,IAAI,CAACP,WAAW,CAACI,UAAU,CAAC,CAAC;QAClD,KAAK,MAAMF,IAAG,IAAKG,KAAK,EAAE;UACxBF,MAAM,CAACK,IAAI,CAAC;YACVT,EAAE,EAAEK,UAAU;YACdF,IAAI,EAAEA,IAAI;YACVO,iBAAiB,EAAE,IAAI,CAACC,0BAA0B,CAACN,UAAU,EAAEF,IAAI;UACrE,CAAC,CAAC;QACJ;MACF;MACA,OAAOC,MAAM;IACf,CAAC;IACDO,0BAA0BA,CAACN,UAAU,EAAEF,IAAI,EAAE;MAC3C,IAAIS,UAAS,GAAI,CAAC;MAClB,KAAK,MAAMV,QAAO,IAAK,IAAI,CAACR,YAAY,EAAE;QACxC,IAAIQ,QAAQ,CAACF,EAAC,KAAMK,UAAS,IAAKH,QAAQ,CAACC,IAAG,KAAMA,IAAI,EAAE;UACxDS,UAAS,IAAK,IAAI,CAACC,qBAAqB,CAACX,QAAQ,CAACY,MAAM,EAAEZ,QAAQ,CAACa,OAAO,CAAC;QAC7E;MACF;MACA,OAAOH,UAAU;IACnB,CAAC;IACDC,qBAAqBA,CAACC,MAAM,EAAEC,OAAO,EAAE;MACrC;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}