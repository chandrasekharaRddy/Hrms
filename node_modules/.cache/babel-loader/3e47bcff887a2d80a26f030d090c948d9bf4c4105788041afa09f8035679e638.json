{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"date1\"\n}, \"Select Date 1:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"date2\"\n}, \"Select Date 2:\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Working Hours\")])], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  class: \"table-dark\"\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"InTime1\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"OutTime1\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"InTime2\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"OutTime2\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"date1\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedDate1 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedDate1]]), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"date2\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedDate2 = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedDate2]]), _createCommentVNode(\" Table for working hours \"), _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.workingHours, hours => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: hours.Date\n    }, [_createElementVNode(\"td\", null, _toDisplayString(hours.Date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(hours.WorkingHours), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Table for user details \"), _createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.goals, goal => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: goal.employeeName\n    }, [_createElementVNode(\"td\", null, _toDisplayString(goal.employeeName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.Date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.InTime1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.OutTime1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.InTime2), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(goal.OutTime2), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","for","class","_createElementBlock","_hoisted_1","type","id","$data","selectedDate1","$event","_hoisted_2","selectedDate2","_createCommentVNode","_hoisted_3","_hoisted_4","_Fragment","_renderList","workingHours","hours","key","Date","_toDisplayString","WorkingHours","_hoisted_5","_hoisted_6","goals","goal","employeeName","InTime1","OutTime1","InTime2","OutTime2"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<!-- <template>\r\n  <div>\r\n   \r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"hours in workingHours\" :key=\"hours.Date\">\r\n          <td>{{ hours.Date }}</td>\r\n          <td>{{ hours.WorkingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime1</th>\r\n          <th>OutTime1</th>\r\n          <th>InTime2</th>\r\n          <th>OutTime2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"goal in goals\" :key=\"goal.employeeName\">\r\n          <td>{{ goal.employeeName }}</td>\r\n          <td>{{ goal.Date }}</td>\r\n          <td>{{ goal.InTime1 }}</td>\r\n          <td>{{ goal.OutTime1 }}</td>\r\n          <td>{{ goal.InTime2 }}</td>\r\n          <td>{{ goal.OutTime2 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n      goals: [], // assuming this is an array of user data\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  watch: {\r\n    userData: {\r\n      handler(newValue) {\r\n        if (Array.isArray(newValue)) {\r\n          // Assuming workingHours is an array of objects with Date and WorkingHours properties\r\n          this.workingHours = newValue.map((user) => ({\r\n            Date: user.Date,\r\n            WorkingHours: this.calculateWorkingHours(user.InTime1, user.OutTime1, user.InTime2, user.OutTime2),\r\n          }));\r\n          \r\n          this.goals = newValue;\r\n        } else if (newValue) {\r\n          // Handle the case when newValue is a single object\r\n          this.workingHours = [{\r\n            Date: newValue.Date,\r\n            WorkingHours: this.calculateWorkingHours(newValue.InTime1, newValue.OutTime1, newValue.InTime2, newValue.OutTime2),\r\n          }];\r\n\r\n          this.goals = [newValue];\r\n        } else {\r\n          // Handle other cases or set goals to an empty array if needed\r\n          this.workingHours = [];\r\n          this.goals = [];\r\n        }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    calculateWorkingHours(inTime1, outTime1, inTime2, outTime2) {\r\n    \r\n      const startTime = new Date(`2000-01-01T${inTime1}`);\r\n      const endTime = new Date(`2000-01-01T${outTime2}`);\r\n      const diff = endTime - startTime;\r\n\r\n      // Convert milliseconds to hours and minutes\r\n      const hours = Math.floor(diff / (1000 * 60 * 60));\r\n      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n      return `${hours} hours ${minutes} minutes`;\r\n    },\r\n  },\r\n};\r\n</script> -->\r\n<template>\r\n  <div>\r\n    <label for=\"date1\">Select Date 1:</label>\r\n    <input type=\"date\" id=\"date1\" v-model=\"selectedDate1\">\r\n    <label for=\"date2\">Select Date 2:</label>\r\n    <input type=\"date\" id=\"date2\" v-model=\"selectedDate2\">\r\n\r\n    <!-- Table for working hours -->\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"hours in workingHours\" :key=\"hours.Date\">\r\n          <td>{{ hours.Date }}</td>\r\n          <td>{{ hours.WorkingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Table for user details -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime1</th>\r\n          <th>OutTime1</th>\r\n          <th>InTime2</th>\r\n          <th>OutTime2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"goal in goals\" :key=\"goal.employeeName\">\r\n          <td>{{ goal.employeeName }}</td>\r\n          <td>{{ goal.Date }}</td>\r\n          <td>{{ goal.InTime1 }}</td>\r\n          <td>{{ goal.OutTime1 }}</td>\r\n          <td>{{ goal.InTime2 }}</td>\r\n          <td>{{ goal.OutTime2 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDate1: \"\",\r\n      selectedDate2: \"\",\r\n      workingHours: [],\r\n      goals: [],\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  watch: {\r\n    userData: {\r\n      handler(newValue) {\r\n        if (Array.isArray(newValue)) {\r\n          \r\n          this.goals = newValue.filter(user => user.Date === this.selectedDate1 || user.Date === this.selectedDate2);\r\n          this.workingHours = this.goals.map((user) => ({\r\n            Date: user.Date,\r\n            WorkingHours: this.calculateWorkingHours(user.InTime1, user.OutTime1, user.InTime2, user.OutTime2),\r\n          }));\r\n        }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    calculateWorkingHours(inTime1, outTime1, inTime2, outTime2) {\r\n   \r\n      const startTime = new Date(`2000-01-01T${inTime1}`);\r\n      const endTime = new Date(`2000-01-01T${outTime2}`);\r\n      const diff = endTime - startTime;\r\n\r\n      const hours = Math.floor(diff / (1000 * 60 * 60));\r\n      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n      return `${hours} hours ${minutes} minutes`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":";gCAuGIA,mBAAA,CAAyC;EAAlCC,GAAG,EAAC;AAAO,GAAC,gBAAc;gCAEjCD,mBAAA,CAAyC;EAAlCC,GAAG,EAAC;AAAO,GAAC,gBAAc;;EAI1BC,KAAK,EAAC;AAAsB;gCACjCF,mBAAA,CAKQ,gB,aAJNA,mBAAA,CAGK,a,aAFHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAsB,YAAlB,eAAa,E;;EAYhBE,KAAK,EAAC;AAAsB;gCACjCF,mBAAA,CASQ;EATDE,KAAK,EAAC;AAAY,I,aACvBF,mBAAA,CAOK,a,aANHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAiB,YAAb,UAAQ,E;;uBA/BpBG,mBAAA,CA6CM,cA5CJC,UAAyC,E,gBACzCJ,mBAAA,CAAsD;IAA/CK,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;+DAAUC,KAAA,CAAAC,aAAa,GAAAC,MAAA;iDAAbF,KAAA,CAAAC,aAAa,E,GACpDE,UAAyC,E,gBACzCV,mBAAA,CAAsD;IAA/CK,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;+DAAUC,KAAA,CAAAI,aAAa,GAAAF,MAAA;iDAAbF,KAAA,CAAAI,aAAa,E,GAEpDC,mBAAA,6BAAgC,EAChCZ,mBAAA,CAaQ,SAbRa,UAaQ,GAZNC,UAKQ,EACRd,mBAAA,CAKQ,iB,kBAJNG,mBAAA,CAGKY,SAAA,QAAAC,WAAA,CAHeT,KAAA,CAAAU,YAAY,EAArBC,KAAK;yBAAhBf,mBAAA,CAGK;MAH8BgB,GAAG,EAAED,KAAK,CAACE;QAC5CpB,mBAAA,CAAyB,YAAAqB,gBAAA,CAAlBH,KAAK,CAACE,IAAI,kBACjBpB,mBAAA,CAAiC,YAAAqB,gBAAA,CAA1BH,KAAK,CAACI,YAAY,iB;sCAK/BV,mBAAA,4BAA+B,EAC/BZ,mBAAA,CAqBQ,SArBRuB,UAqBQ,GApBNC,UASQ,EACRxB,mBAAA,CASQ,iB,kBARNG,mBAAA,CAOKY,SAAA,QAAAC,WAAA,CAPcT,KAAA,CAAAkB,KAAK,EAAbC,IAAI;yBAAfvB,mBAAA,CAOK;MAPsBgB,GAAG,EAAEO,IAAI,CAACC;QACnC3B,mBAAA,CAAgC,YAAAqB,gBAAA,CAAzBK,IAAI,CAACC,YAAY,kBACxB3B,mBAAA,CAAwB,YAAAqB,gBAAA,CAAjBK,IAAI,CAACN,IAAI,kBAChBpB,mBAAA,CAA2B,YAAAqB,gBAAA,CAApBK,IAAI,CAACE,OAAO,kBACnB5B,mBAAA,CAA4B,YAAAqB,gBAAA,CAArBK,IAAI,CAACG,QAAQ,kBACpB7B,mBAAA,CAA2B,YAAAqB,gBAAA,CAApBK,IAAI,CAACI,OAAO,kBACnB9B,mBAAA,CAA4B,YAAAqB,gBAAA,CAArBK,IAAI,CAACK,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}