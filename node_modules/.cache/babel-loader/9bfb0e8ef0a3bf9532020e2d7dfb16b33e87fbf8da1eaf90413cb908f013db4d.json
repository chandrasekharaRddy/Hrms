{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      selectedEmployee: null,\n      workingHours: false,\n      selectedDate: null\n    };\n  },\n  computed: {\n    userDetails() {\n      return this.$store.state.userData && this.$store.state.userData.length > 0 ? this.$store.state.userData[0] : null;\n    },\n    employeeList() {\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\n        const groupedEmployees = this.$store.state.userData.reduce((acc, employee) => {\n          const key = employee.empId;\n          if (!acc[key]) {\n            acc[key] = {\n              empId: employee.empId,\n              empName: employee.empName,\n              attendances: []\n            };\n          }\n          acc[key].attendances.push(employee);\n          return acc;\n        }, {});\n        const uniqueEmployees = Object.values(groupedEmployees);\n        return uniqueEmployees;\n      }\n      return [];\n    },\n    filteredAttendances() {\n      if (this.selectedEmployee && this.selectedDate) {\n        return this.selectedEmployee.attendances.filter(attendance => attendance.date === this.selectedDate);\n      }\n      return [];\n    }\n  },\n  methods: {\n    showEmployeeDetails(employee) {\n      console.log(\"Selected Employee:\", employee);\n      this.selectedEmployee = employee;\n      this.workingHours = true;\n    },\n    calculateWorkingHours(attendances) {\n      let totalDiff = 0;\n      for (let i = 0; i < attendances.length; i += 2) {\n        const attendance1 = attendances[i];\n        const attendance2 = attendances[i + 1];\n        if (!attendance1 || !attendance1.outTime || !attendance2 || !attendance2.outTime) {\n          continue;\n        }\n        const intime1Date = new Date(`01/01/2000 ${attendance1.inTime}`);\n        const outtime1Date = new Date(`01/01/2000 ${attendance1.outTime}`);\n        const intime2Date = new Date(`01/01/2000 ${attendance2.inTime}`);\n        const outtime2Date = new Date(`01/01/2000 ${attendance2.outTime}`);\n        totalDiff += Math.abs(outtime1Date - intime1Date) + Math.abs(outtime2Date - intime2Date);\n      }\n      const totalHours = Math.floor(totalDiff / (1000 * 60 * 60));\n      const totalMinutes = Math.floor(totalDiff % (1000 * 60 * 60) / (1000 * 60));\n      return `${totalHours} hours ${totalMinutes} minutes`;\n    }\n  }\n};","map":{"version":3,"names":["data","selectedEmployee","workingHours","selectedDate","computed","userDetails","$store","state","userData","length","employeeList","groupedEmployees","reduce","acc","employee","key","empId","empName","attendances","push","uniqueEmployees","Object","values","filteredAttendances","filter","attendance","date","methods","showEmployeeDetails","console","log","calculateWorkingHours","totalDiff","i","attendance1","attendance2","outTime","intime1Date","Date","inTime","outtime1Date","intime2Date","outtime2Date","Math","abs","totalHours","floor","totalMinutes"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- User Table -->\r\n    <table v-if=\"userDetails\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\" id=\"tbl\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ userDetails.userId }}</td>\r\n          <td>{{ userDetails.userName }}</td>\r\n          <td>{{ userDetails.email }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <!-- Employee Table -->\r\n    <table v-if=\"employeeList && employeeList.length > 0\" class=\"table table-bordered\" id=\"tbl\">\r\n      <thead class=\"table-dark\">\r\n        <tr >\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in employeeList\" :key=\"index\" >\r\n          <td @click=\"showEmployeeDetails(employee)\">{{ employee.empId }}</td>\r\n          <td>{{ employee.empName }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div v-if=\"workingHours\">\r\n    <table class=\"table table-bordered\" id=\"tbl\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>WorkingHours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(attendance, index) in selectedEmployee.attendances\" :key=\"'work_' + index\">\r\n          <td @click=\"getValues(attendance.date)\">{{ attendance.date }}</td>\r\n          <td>{{ calculateWorkingHours(attendance.inTime, attendance.outTime) }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <!-- Employee Details Table -->\r\n  <div v-if=\"selectedEmployee\">\r\n    <table class=\"table table-bordered\" id=\"tbl\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>Date</th>\r\n          <th>Intime</th>\r\n          <th>Outtime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(attendance, index) in filteredAttendances\" :key=\"index\">\r\n          <td>{{ selectedEmployee.empId }}</td>\r\n          <td>{{ attendance.date }}</td>\r\n          <td>{{ attendance.inTime }}</td>\r\n          <td>{{ attendance.outTime }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      workingHours: false,\r\n      selectedDate: null\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n        const groupedEmployees = this.$store.state.userData.reduce((acc, employee) => {\r\n          const key = employee.empId;\r\n          if (!acc[key]) {\r\n            acc[key] = {\r\n              empId: employee.empId,\r\n              empName: employee.empName,\r\n              attendances: []\r\n            };\r\n          }\r\n          acc[key].attendances.push(employee);\r\n          return acc;\r\n        }, {});\r\n        const uniqueEmployees = Object.values(groupedEmployees);\r\n        return uniqueEmployees;\r\n      }\r\n      return [];\r\n    },\r\n    filteredAttendances() {\r\n      if (this.selectedEmployee && this.selectedDate) {\r\n        return this.selectedEmployee.attendances.filter(attendance => attendance.date === this.selectedDate);\r\n      }\r\n      return [];\r\n    }\r\n  },\r\n  methods: {\r\n    showEmployeeDetails(employee) {\r\n      console.log(\"Selected Employee:\", employee);\r\n      this.selectedEmployee = employee;\r\n      this.workingHours = true;\r\n    },\r\n    calculateWorkingHours(attendances) {\r\n  let totalDiff = 0;\r\n\r\n  for (let i = 0; i < attendances.length; i += 2) {\r\n    const attendance1 = attendances[i];\r\n    const attendance2 = attendances[i + 1];\r\n\r\n    if (!attendance1 || !attendance1.outTime || !attendance2 || !attendance2.outTime) {\r\n      continue; \r\n    }\r\n\r\n    const intime1Date = new Date(`01/01/2000 ${attendance1.inTime}`);\r\n    const outtime1Date = new Date(`01/01/2000 ${attendance1.outTime}`);\r\n    const intime2Date = new Date(`01/01/2000 ${attendance2.inTime}`);\r\n    const outtime2Date = new Date(`01/01/2000 ${attendance2.outTime}`);\r\n\r\n    totalDiff += Math.abs(outtime1Date - intime1Date) + Math.abs(outtime2Date - intime2Date);\r\n  }\r\n\r\n  const totalHours = Math.floor(totalDiff / (1000 * 60 * 60));\r\n  const totalMinutes = Math.floor((totalDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n  return `${totalHours} hours ${totalMinutes} minutes`;\r\n}\r\n\r\n  }\r\n};\r\n</script>\r\n<style>\r\n#tbl tr:nth-child(even){\r\n  background:#ccc;\r\n}\r\n#tbl tr:hover td{\r\n  background: #839192;\r\n  color: #000;\r\n  transition: all 0.3s ease-in;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}