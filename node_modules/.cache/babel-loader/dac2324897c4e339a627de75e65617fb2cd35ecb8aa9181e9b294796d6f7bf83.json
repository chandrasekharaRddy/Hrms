{"ast":null,"code":"export default {\n  computed: {\n    userDetails() {\n      return this.$store.state.userData && this.$store.state.userData.length > 0 ? this.$store.state.userData[0] : null;\n    },\n    employeeList() {\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\n        const employeeMap = new Map(); // Using a Map to store unique employees\n        // Iterate over userData to populate employeeMap\n        this.$store.state.userData.forEach(user => {\n          if (!employeeMap.has(user.empId)) {\n            employeeMap.set(user.empId, user);\n          }\n        });\n        return Array.from(employeeMap.values()); // Convert Map values to array\n      }\n      return [];\n    }\n  },\n  methods: {\n    showEmployeeDetails(employee) {\n      console.log(\"Selected Employee:\", employee);\n      // You can do something with the selected employee here if needed\n    }\n  }\n};","map":{"version":3,"names":["computed","userDetails","$store","state","userData","length","employeeList","employeeMap","Map","forEach","user","has","empId","set","Array","from","values","methods","showEmployeeDetails","employee","console","log"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- User Table -->\r\n    <table v-if=\"userDetails\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ userDetails.userId }}</td>\r\n          <td>{{ userDetails.userName }}</td>\r\n          <td>{{ userDetails.email }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Employee Table -->\r\n    <table v-if=\"employeeList && employeeList.length > 0\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in employeeList\" :key=\"index\">\r\n          <td @click=\"showEmployeeDetails(employee)\">{{ employee.empId }}</td>\r\n          <td>{{ employee.empName }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n        const employeeMap = new Map(); // Using a Map to store unique employees\r\n        // Iterate over userData to populate employeeMap\r\n        this.$store.state.userData.forEach(user => {\r\n          if (!employeeMap.has(user.empId)) {\r\n            employeeMap.set(user.empId, user);\r\n          }\r\n        });\r\n        return Array.from(employeeMap.values()); // Convert Map values to array\r\n      }\r\n      return [];\r\n    }\r\n  },\r\n  methods: {\r\n    showEmployeeDetails(employee) {\r\n      console.log(\"Selected Employee:\", employee);\r\n      // You can do something with the selected employee here if needed\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAuCA,eAAe;EACbA,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,QAAO,IAAK,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAK,GAAI,IACrE,IAAI,CAACH,MAAM,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAC,IAC5B,IAAI;IACV,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACJ,MAAM,CAACC,KAAK,CAACC,QAAO,IAAK,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAK,GAAI,CAAC,EAAE;QACvE,MAAME,WAAU,GAAI,IAAIC,GAAG,CAAC,CAAC,EAAE;QAC/B;QACA,IAAI,CAACN,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACK,OAAO,CAACC,IAAG,IAAK;UACzC,IAAI,CAACH,WAAW,CAACI,GAAG,CAACD,IAAI,CAACE,KAAK,CAAC,EAAE;YAChCL,WAAW,CAACM,GAAG,CAACH,IAAI,CAACE,KAAK,EAAEF,IAAI,CAAC;UACnC;QACF,CAAC,CAAC;QACF,OAAOI,KAAK,CAACC,IAAI,CAACR,WAAW,CAACS,MAAM,CAAC,CAAC,CAAC,EAAE;MAC3C;MACA,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,mBAAmBA,CAACC,QAAQ,EAAE;MAC5BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;MAC3C;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}