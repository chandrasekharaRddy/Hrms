{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\");\n}","map":{"version":3,"names":["_createElementBlock"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\theNavigation.vue"],"sourcesContent":["<template>\r\n  <div></div>\r\n</template>\r\n\r\n\r\n<!-- <template>\r\n  <div class=\"mainHeading\">\r\n    <p>HRMS- Human Resource Management System</p>\r\n  </div>\r\n  <div class=\"mainContainer\">\r\n    <div class=\"tableContainer\">\r\n      <div class=\"table1\">\r\n        <h3 class=\"Heading\">Leave Summary</h3>\r\n        <div class=\"leavesContainer \">\r\n    <div class=\"leavesBox1\">\r\n    <label class=\"label\">Total Leaves</label>\r\n      <div class=\"leavebalance1\">{{ userDetails ? userDetails.totalLeaveBalance : ''  }} / 24</div>\r\n    </div><br>\r\n    <div class=\"leavesBox2\">\r\n     <label class=\"label\">NormalLeaves</label>\r\n      <div class=\"leavebalance2\">{{ userDetails ? userDetails.normalLeaveBalance : ''  }} / 12</div>\r\n    </div><br>\r\n    <div class=\"leavesBox3\">\r\n      <label class=\"label\">SickLeaves</label>\r\n      <div class=\"leavebalance3\">{{ userDetails ? userDetails.sickLeaveBalance : '' }} / 12</div>\r\n    </div>\r\n  </div>\r\n        <h3 class=\"Heading\">Leave Application</h3>\r\n        <div class=\"From\">\r\n<div><input type=\"hidden\" v-model=\"email\"></div>\r\n<div><input type=\"hidden\" v-model=\"name\"></div>\r\n<div>\r\n  <label class=\"Label\">Leave_type:</label>\r\n  <select class=\"select\" v-model=\"leave\">\r\n    <option>Normal Leave</option>\r\n    <option>Sick Leave</option>\r\n  </select>\r\n</div>\r\n<div><label class=\"Label\">From:</label><input type=\"date\" v-model=\"date1\" :min=\"getCurrentDate()\" ></div>\r\n<div><label class=\"Label\">To:</label><input type=\"date\" style=\"margin-left: 71px;\" v-model=\"date2\" :min=\"getCurrentDate()\"></div>\r\n<div><label class=\"Label\">Days:</label><div class=\"datedifference\"><span v-show=\"!daysDifference\"> </span><span v-show=\"daysDifference\"> {{ daysDifference }}</span></div></div>\r\n<div><label class=\"Label\">Reason:</label><input type=\"textArea\" v-model=\"reason\"></div><br>\r\n<div><input type=\"hidden\" v-model=\"Status\"></div>\r\n<button type=\"submit\" @click=\"submit\">Apply</button>\r\n        </div>\r\n        <div>\r\n          <br>\r\n <div class=\"table4\" >\r\n     <div class=\"Heading\"><h3>leaveHistory</h3></div>\r\n      <table class=\"table table-bordered\" >\r\n        <thead>\r\n          <th>Employee_name</th>\r\n          <th>Leave_Type</th>\r\n          <th>FormDate</th>\r\n          <th>ToDate</th>\r\n          <th>Days</th>\r\n          <th>Reason</th>\r\n          <th>Status</th>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(leave, index) in leavehistory\" :key=\"index\" >\r\n            <td>{{ leave.emp_name }}</td>\r\n            <td>{{ leave.leaveType}}</td>\r\n            <td>{{leave.startDate}}</td>\r\n            <td>{{leave.endDate}}</td>\r\n            <td>{{leave.days}}</td>\r\n            <td>{{leave.reason}}</td>\r\n            <td>{{leave.status}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"table2\">\r\n        <div class=\"Heading\"><h3>Attendence Summary</h3></div>\r\n        <div class=\"leavesContainer \">\r\n    <div class=\"AvgHours\">\r\n    <label class=\"label\">AvgHrs/Day</label>\r\n      <div class=\"AvgBalance\">{{ averageHours }} / 9Hrs</div>\r\n    </div><br>\r\n    <div>\r\n    <div class=\"presentDays\">\r\n     <label class=\"label\">PresntDays/Month</label>\r\n     <div class=\"leavebalance2\">{{ this.workingHoursData.length }}/31</div>\r\n     \r\n    </div>\r\n  </div><br>\r\n    </div>\r\n        <h3 class=\"Heading\">Holidays</h3>\r\n        <table class=\"table table-bordered \">\r\n          <tbody>\r\n            <tr>\r\n              <td>01-Jan-2024</td>\r\n              <td>Monday</td>\r\n              <td>New Year</td>\r\n            </tr>\r\n            <tr>\r\n              <td>15-Jan-2024</td>\r\n              <td>Monday</td>\r\n              <td>Sankranti</td>\r\n            </tr>\r\n            <tr>\r\n              <td>26-Jan-2024</td>\r\n              <td>Friday</td>\r\n              <td>Republic Day</td>\r\n            </tr>\r\n            <tr>\r\n              <td>08-Mar-2024</td>\r\n              <td>Friday</td>\r\n              <td>Maha Shivaratri</td>\r\n            </tr>\r\n            <tr>\r\n              <td>09-Apr-2024</td>\r\n              <td>Tuesday</td>\r\n              <td>Ugadi</td>\r\n            </tr>\r\n            <tr>\r\n              <td>15-Aug-2024</td>\r\n              <td>Thursday</td>\r\n              <td>Independence Day</td>\r\n            </tr>\r\n            <tr>\r\n              <td>19-Aug-2024</td>\r\n              <td>Monday</td>\r\n              <td>Rakhi</td>\r\n            </tr>\r\n            <tr>\r\n              <td>06-Sep-2024</td>\r\n              <td>Friday</td>\r\n              <td>Ganesh chaturthi</td>\r\n            </tr>\r\n            \r\n            <tr>\r\n              <td>02-Oct-2024</td>\r\n              <td>Wednesday</td>\r\n              <td>Gandhi Jayanti</td>\r\n            </tr>\r\n            <tr>\r\n              <td>14-Oct-2024</td>\r\n              <td>Monday</td>\r\n              <td>Vijaya Dashami</td>\r\n            </tr>\r\n            <tr>\r\n              <td>31-Oct-2024</td>\r\n              <td>Thursday</td>\r\n              <td>Deepavali</td>\r\n            </tr>\r\n            <tr>\r\n              <td>25-Dec-2024</td>\r\n              <td>Wednesday</td>\r\n              <td>Christmas Day</td>\r\n            </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div></div>\r\n      <div class=\"table3\">\r\n        <div class=\"userDetails\">\r\n          <div class=\"head\"> <i class=' font bx bxs-user-circle'></i><br>\r\n            <h3  >{{ userDetails.userName}}</h3>\r\n            <h4>{{userDetails.designation  }}</h4>\r\n          </div>\r\n          <div class=\"paragraph\">\r\n            <p>Gender: {{ userDetails.gender}}</p>\r\n            <p>Date Of Birth : {{ userDetails.dob }}</p>\r\n            <p>Email :{{ userDetails.email }}</p>\r\n            <p>Phone : {{ userDetails.phone }}</p>\r\n            <p>Address :{{userDetails.address}}</p>\r\n            <p>Department : {{ userDetails.dept }}</p>\r\n            <p>Joining Date : {{userDetails.joiningDate}}</p>\r\n            <p>Manager : {{ userDetails.manager }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n    <div class=\"sidebar\">\r\n      <div class=\"nav\">\r\n        <div class=\"menu\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"#\">\r\n                <i class='bx bx-home'></i>\r\n                <span class=\"text\" style=\"padding-left:9px;\">Home</span>\r\n              </a>\r\n            </li>\r\n            <li class=\"active\" v-if=\"getteam\">\r\n              <a href=\"#\">\r\n                <i class=\"fa-solid fa-users\"></i>\r\n                <RouterLink to=\"/members\" class=\"text\" > Team Members</RouterLink>\r\n              </a>\r\n            </li>\r\n            <li class=\"active\">\r\n              <a href=\"#\">\r\n                <i class='bx bxs-calendar'></i>\r\n              \r\n                <RouterLink to=\"/attendence\" class=\"text\" style=\"padding-left:9px;\">Attendence</RouterLink>\r\n              </a>\r\n            </li>\r\n            \r\n          </ul>\r\n        </div>\r\n        <div class=\"menu\" id=\"logout\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"#\">\r\n                <i class='bx bx-info-circle'></i>\r\n                <span class=\"text\" style=\"padding-left:9px;\">Help</span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">\r\n                <i class='bx bx-log-out'></i>\r\n                <RouterLink to=\"/\" class=\"text\" @click=\"logout\" style=\"padding-left:9px;\"> Logout</RouterLink>\r\n              </a>\r\n            </li>\r\n            \r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n  export default {\r\n    data() {\r\n      return {\r\n        id: \"\",\r\n        name: \"\",\r\n        leave: \"\",\r\n        date1: \"\",\r\n        date2: \"\",\r\n        email: \"\",\r\n        reason:\"\",\r\n        Status:\"\",\r\n        daysDifference: \"\",\r\n      goals: [],\r\n      totallength:'',\r\n      leavehistory:'',\r\n      month: new Date().toISOString().slice(0, 7),\r\n      datesLength: 0\r\n      };\r\n    },\r\n    computed: {\r\n      daysInMonth() {\r\n      const [year, month] = this.month.split('-');\r\n      return new Date(year, month, 0).getDate();\r\n    },\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    getteam(){\r\n      return this.$store.getters.getTeamMembers;\r\n    },\r\n    employeeList() {\r\n  if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n    const userId = this.userDetails ? this.userDetails.userId : null;\r\n    if (userId) {\r\n      const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\r\n      console.log(\"ðŸš€ ~ employeeList ~ filteredEmployees:\", filteredEmployees)\r\n      const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n        const key = employee.empId;\r\n        if (!acc[key]) {\r\n          acc[key] = {\r\n            empId: employee.empId,\r\n            empName: employee.empName,\r\n            empRole: employee.empRole,\r\n            attendances: []\r\n          };\r\n        }\r\n        acc[key].attendances.push(employee);\r\n        return acc;\r\n      }, {});\r\n      console.log(\"ðŸš€ ~ groupedEmployees ~ groupedEmployees:\", groupedEmployees)\r\n      const uniqueEmployees = Object.values(groupedEmployees);\r\n      return uniqueEmployees;\r\n    }\r\n  }\r\n  return [];\r\n},\r\n    workingHoursData() {\r\n  const attendanceDates = {};\r\n  this.employeeList.forEach(employee => {\r\n    employee.attendances.forEach(attendance => {\r\n      if (!attendanceDates[attendance.date]) {\r\n        attendanceDates[attendance.date] = {\r\n          date: attendance.date,\r\n          year: new Date(attendance.date).getFullYear(),\r\n          month: new Date(attendance.date).getMonth() + 1,\r\n          totalDifference: 0\r\n        };\r\n      }\r\n      this.datesLength = Object.keys(attendanceDates).length;\r\n      if (attendance.outTime) {\r\n        const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\r\n        const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\r\n        const diff = Math.abs(outtimeDate - intimeDate);\r\n        attendanceDates[attendance.date].totalDifference += diff;\r\n      }\r\n    });\r\n  });\r\n  const result = Object.values(attendanceDates).map(dateInfo => {\r\n    const hours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n    const minutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n    return {\r\n      date: dateInfo.date,\r\n      totalHours: hours,\r\n      totalMinutes: minutes,\r\n    };\r\n  });\r\n  return result;},\r\n    averageHours() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / this.workingHoursData.length;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        const totallength=this.workingHoursData.length;\r\n        console.log(totallength);\r\n        return `${averageHours} hrs ${averageMinutes} mins`; \r\n      }\r\n      return null;\r\n    }\r\n  },\r\n  watch:{\r\ndate1(newValue){\r\n  this.calculateDaysDifference();\r\n  console.log(newValue);\r\n},\r\ndate2(newValue){\r\n  this.calculateDaysDifference();\r\n  console.log(newValue);\r\n},\r\nmonth(newMonth) {\r\n      this.updateDatesLength();\r\n      console.log(newMonth)\r\n    }\r\n    },\r\n  created(){\r\n   this.getHistoryTable();\r\n   this.updateDatesLength();\r\n},\r\nmethods: {\r\n  getCurrentDate() {\r\n        const today = new Date();\r\n        const year = today.getFullYear();\r\n        let month = today.getMonth() + 1;\r\n        let day = today.getDate();\r\n        if (month < 10) {\r\n            month = '0' + month; \r\n        }\r\n        if (day < 10) {\r\n            day = '0' + day; \r\n        }\r\n        return `${year}-${month}-${day}`;\r\n    },\r\n  MonthChange() {\r\n      this.updateDatesLength();\r\n    },\r\n    updateDatesLength() {\r\n      const [year, month] = this.month.split('-');\r\n      this.datesLength = this.workingHoursData.filter(data => {\r\n        const date = new Date(data.date);\r\n        return date.getFullYear() === parseInt(year) && date.getMonth() + 1 === parseInt(month);\r\n      }).length;\r\n    },\r\n  calculateDaysDifference() {\r\n      const date1 = new Date(this.date1)\r\n      const date2 = new Date(this.date2)\r\n      const timeDiff = date2.getTime() - date1.getTime()\r\n      this.daysDifference = Math.floor(timeDiff / (1000 * 60 * 60 * 24))+1\r\n    },\r\n      logout(){\r\n        this.$router.push({ path: '/' });\r\n      },\r\n      async submit() {\r\n    const today = new Date();\r\n    const startDate = new Date(this.date1);\r\n    const endDate = new Date(this.date2);\r\n    \r\n    if (startDate < today) {\r\n        alert(\"We cannot apply the previous date\");\r\n        return;\r\n    }\r\n    if (endDate < startDate) {\r\n        alert(\"ToDate must be after the FormDate\");\r\n        return;\r\n    }\r\n    if (this.leave === '') {\r\n        alert(\"LeaveType Will be required\");\r\n        return;\r\n    }\r\n    const diff = (endDate - startDate) / (1000 * 60 * 60 * 24) + 1;\r\n    if ( this.leave === \"Normal Leave\" && diff > 4) {\r\n        alert(\"You can't apply for leaves because you cannot have permission to apply for more than 4 days\");\r\n        return;\r\n    }\r\n    if (this.leave === \"Normal Leave\"  && this.userDetails.normalLeaveBalance <= 0) {\r\n        alert(\"You do not have sufficient normal leaves\");\r\n        return;\r\n    }\r\n    else if ( this.leave === \"Sick Leave\" && this.userDetails.sickLeaveBalance <= 0) {\r\n        alert(\"You do not have sufficient sick leaves\");\r\n        return;\r\n    }\r\n    else{\r\n      const leaveExists  = this.leavehistory.some(leave => {\r\n        const leaveStartDate = new Date(leave.startDate);\r\n        const leaveEndDate = new Date(leave.endDate);\r\n        return (\r\n            leaveStartDate <= startDate || leaveEndDate >= endDate\r\n        );\r\n    });\r\n      console.log(\"ðŸš€ ~ leaveExists ~ leaveExists:\", leaveExists)\r\n    // if (leaveExists) {\r\n    //     alert(\"Leave for the selected period already exists.\");\r\n    //     return;\r\n    // }\r\n    const leaveData = {\r\n        leaveType: this.leave,\r\n        startDate: this.date1,\r\n        endDate: this.date2,\r\n        reason: this.reason,\r\n        days: diff,\r\n        emp_name: this.name,\r\n        email: this.email,\r\n        Status: this.Status\r\n    };\r\n    try {\r\n        const response = await axios.post('https://localhost:7188/api/User/createleave',leaveData);\r\n        const leaveDetails = response.data;\r\n        console.log(leaveDetails);\r\n        this.goals.push({ leaveDetails, day: diff });\r\n            this.userDetails.normalLeaveBalance = leaveDetails.normalLeaveBalance;\r\n            this.userDetails.sickLeaveBalance = leaveDetails.sickLeaveBalance;\r\n            this.userDetails.totalLeaveBalance = leaveDetails.totalLeaveBalance;\r\n        this.getHistoryTable();\r\n        this.date1 = '';\r\n        this.date2 = '';\r\n        this.leave = '';\r\n        this.reason = '';\r\n        this.name = '';\r\n        this.email = '';\r\n        this.Status = ''; \r\n    } catch (error) {\r\n        alert(error);\r\n    }\r\n  }\r\n},\r\n  getHistoryTable() {\r\n  const empId = this.userDetails.userId;\r\n  axios.get('https://localhost:7188/api/User/getleave')\r\n    .then(response => {\r\n      this.leavehistory = response.data.filter(leave => leave.emp_id === empId);\r\n      console.log(\"ðŸš€ ~ getHistoryTable ~ this.leavehistory:\", this.leavehistory)\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching leave data:', error);\r\n    });\r\n},\r\n    }\r\n  };\r\n  </script>\r\n<style>\r\n@import url(https://fonts.googleapis.com/css?family=Inter:100,200,300,regular,500,600,700,800,900);\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n/* .mainHeading {\r\n  font-family:'Calibri Light';\r\n  color: black;\r\n  font-size: 22px;\r\n  background-color: aqua;\r\n  text-align: left;\r\n  padding-left: 38px;\r\n  height: 40px;\r\n  position: fixed;\r\n  width: 2000px;\r\n  margin-top: -4px;\r\n} */\r\n.tableContainer {\r\n  display: flex;\r\n  margin-top: 4px;\r\n  padding-top: 40px;\r\n  padding-left: 30px;\r\n  padding-right: 10px;\r\n  background-color:whitesmoke;\r\n  margin-left: 10px;\r\n  border-radius: 10px;\r\n  margin-right: 20px;\r\n  margin-bottom: 10px;\r\n  padding-bottom: 10px;\r\n}\r\nbody {\r\n  background-color: white;\r\n  background-size: 20%;\r\n  background-repeat: no-repeat;\r\n  background-position: 55% center;\r\n}\r\n.sidebar {\r\n  position: fixed;\r\n  top: 38px;\r\n  left: 0;\r\n  width: 275px;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #1f3050;\r\n  padding: 24px;\r\n  gap: 40px;\r\n  transition: all 0.3s;\r\n  padding-left: 0%;\r\n  padding-top: 100px;\r\n}\r\n.menu .title {\r\n  position: absolute;\r\n  padding-left: 20px;\r\n  font-size: 10px;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  margin-bottom: 10px;\r\n}\r\n.menu ul li {\r\n  position: relative;\r\n  list-style: none;\r\n  margin-bottom: 5px;\r\n}\r\n.menu ul li a.bx {\r\n  font-size: 20px;\r\n}\r\n.menu ul li a.bi {\r\n  font-size: 20px;\r\n}\r\n.menu ul li a {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-decoration: none;\r\n  padding: 10px 4px;\r\n  padding-left: 5px;\r\n  border-radius: 8px;\r\n  transition: all 0.3s;\r\n  font-family: Arial, Helvetica, sans-serif\r\n}\r\n.menu ul li a:hover{\r\n  background-color: blue;\r\n}\r\n.nav {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 230px;\r\n}\r\n#logout {\r\n  padding-bottom: 0px;\r\n  margin-bottom: 0px;\r\n}\r\n.table1 {\r\n  margin-left: 0px;\r\n  margin-right: -10px;\r\n  padding-right: 18px;\r\n  padding-left:-10px ;\r\n}\r\n.table2{\r\n  margin-left: -12px;\r\n}\r\n.table2 table{\r\n  width: 450px;\r\n  margin-right: 5px;\r\n  padding-right: 5px;\r\n  padding-left: 10px;\r\n  height: 509px;\r\n}\r\n.table2 td{\r\n  font-family:Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\r\n  width: 200px;\r\n} \r\n.paragraph {\r\n  align-items: center;\r\n  padding-top: 40px;\r\n  font-size: 20px;\r\n  font-family:'Calibri';\r\n}\r\n.mainContainer {\r\n  margin-top: 1px;\r\n  border-radius: 20px;\r\n  margin-left: 17%;\r\n  margin-right: 4px;\r\n}\r\n.userDetails {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-top: 20px;\r\n}\r\n.userDetails h3{\r\n margin-bottom: 20px;\r\n}\r\n.head {\r\n  flex: 1;\r\n  padding: 10px;\r\n  text-align: center;\r\n}\r\n.font {\r\n  font-size: 100px;\r\n  padding-right: 10px;\r\n}\r\n.table3 {\r\n  border: 1px solid;\r\n  width: 400px;\r\n  margin-left: 30px;\r\n  height: 90vh;\r\n  background-color:antiquewhite;\r\n  border-radius: 10px;\r\n  margin-top: 59px;\r\n}\r\n.leavesBox1{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color: palevioletred;\r\n  width:130px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\nheight: 100px;\r\n}\r\n.AvgHours{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color: palevioletred;\r\n  width:160px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\nheight: 102px;\r\nmargin-top: -5px;\r\n}\r\n.leavesBox2{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color:rgb(70, 206, 70);\r\n  width:140px;\r\nmargin-left: 20px;\r\nheight: 100px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\n}\r\n.leavesBox3{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color:rgb(231, 14, 14);\r\n  width:130px;\r\nmargin-left: 20px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\nheight: 100px;\r\nmargin-right: 10px;\r\n}\r\n.leavebalance1{\r\n  font-size: 30px;\r\n  text-align: left;\r\n  padding-left: 15px;\r\n  font-family:'Times New Roman', Times, serif;\r\n  color:  palevioletred;\r\n}\r\n.AvgBalance{\r\n  font-size: 20px;\r\n  text-align: left;\r\n  padding-left: 9px;\r\n  font-family:'Times New Roman', Times, serif;\r\n  color:  palevioletred;\r\n}\r\n.leavebalance2{\r\n  font-size: 30px;\r\n  text-align: left;\r\n  padding-left: 9px;\r\n  color: rgb(70, 206, 70);\r\n  font-family:'Times New Roman', Times, serif;\r\n}\r\n.leavebalance3{\r\n  font-size: 30px;\r\n  text-align: left;\r\n  padding-left: 30px;\r\n  color: rgb(231, 14, 14);\r\n  font-family:'Times New Roman', Times, serif;\r\n}\r\n.presentDays{\r\n  display: inline-block;\r\n  border-left: 6px solid;\r\n  border-color:rgb(70, 206, 70);\r\n  width:180px;\r\nmargin-left: 20px;\r\nheight: 102px;\r\nbox-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);\r\nmargin-top: -5px;\r\n}\r\n\r\n.leavesContainer{\r\n  margin-left: -18px;\r\n  padding-left: 19px;\r\n  height: 120px;\r\n  padding-top: 10px;\r\n  display: flex;\r\n  border-radius: 10px;\r\n  padding-bottom: 2px;\r\n}\r\n.Heading{\r\n  padding-top: 10px;\r\n  padding-bottom: 5px;\r\n  padding-left: 13px;\r\n  font-size: 25px;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  color: rgb(214, 60, 32);\r\n}\r\n.From {\r\n  border: 1px solid;\r\n  width: 450px;\r\n  border-radius: 15px;\r\n  padding-left: 40px;\r\n  margin-left: -2px;\r\n  padding-top: 20px;\r\n  padding-bottom: 30px;\r\n  margin-top: 10px;\r\n}\r\n.From div {\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\nmargin-bottom: 16px;\r\npadding-top: 10px;\r\nwidth: 400px;\r\ncolor:#000;\r\nmargin-right: 97px;\r\n}\r\n\r\n.From label {\r\ndisplay: block;\r\nmargin-right: 3px; \r\nmargin-top: 4px;\r\npadding-left: 2px;\r\nfont-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\nfont-size: 20px;\r\n}\r\n\r\n.From input,\r\n.From select{\r\nwidth: 200px;\r\npadding: 10px; \r\nmargin-bottom: 3px; \r\nborder: 1px solid;\r\nborder-radius: 4px;\r\n}\r\n.From input[type=\"date\"] {\r\n    margin-left: 52px;\r\n}\r\n.From input[type=\"textArea\"] {\r\n    margin-left: 35px;\r\n}\r\n.From input[type=\"number\"]{\r\n  margin-left: 52px;\r\n}\r\n.datedifference{\r\n  border: 1px solid;\r\n  border-radius: 5px;\r\n  width: 10px;\r\n  margin-left: 52px;\r\n  padding-left: 30px;\r\n  font-size: 20px;\r\n  padding-bottom: 3px;\r\n  height: 50px;\r\n}\r\n.From button {\r\nbackground-color: #8db422;\r\ncolor: white;\r\nborder: none;\r\nborder-radius: 4px;\r\ncursor: pointer;\r\nmargin-left: 120px;\r\nwidth: 120px;\r\nheight: 40px;\r\n}\r\n.form button:hover {\r\nbackground-color: #45a049;\r\n}\r\n.select {\r\nwidth: 250px;\r\nheight: 40px;\r\nborder-radius: 10px;\r\nmargin: 5px;\r\ndisplay: inline-block;\r\n}\r\n.table4{\r\n  margin-top: 20px;\r\n}\r\n.table4 td{\r\n  font-family:'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n}\r\n.table4 th{\r\n  font-family: sans-serif;\r\n}\r\n.HolidaysTable{\r\n  height: 10px;\r\n}\r\n\r\n</style> -->"],"mappings":";;uBACEA,mBAAA,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}