{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    useData: Array\n  },\n  data() {\n    return {\n      goals: [],\n      workingHours: []\n    };\n  },\n  created() {\n    this.addItem();\n  },\n  methods: {\n    addItem() {\n      const newItem = {\n        date: this.useData.presentDate,\n        signIn: this.useData.presentTime,\n        signOut: \"\",\n        username: this.useData.username\n      };\n      this.goals.push(newItem);\n      console.log(this.goals);\n    },\n    logout(goal) {\n      const logoutUser = this.goals.find(u => u.username === goal.username);\n      if (logoutUser) {\n        const currentDate = new Date();\n        logoutUser.signOut = currentDate.toLocaleTimeString();\n      }\n    },\n    selectDate(date) {\n      const selectedGoals = this.goals.filter(goal => goal.date === date);\n      this.workingHours = selectedGoals.map(goal => ({\n        date: goal.date,\n        hours: this.calculate(goal.signIn, goal.signOut)\n      }));\n    }\n    // calculate(signIn, signOut) {\n    //   // Calculation logic remains unchanged\n    // },\n  }\n};","map":{"version":3,"names":["props","useData","Array","data","goals","workingHours","created","addItem","methods","newItem","date","presentDate","signIn","presentTime","signOut","username","push","console","log","logout","goal","logoutUser","find","u","currentDate","Date","toLocaleTimeString","selectDate","selectedGoals","filter","map","hours","calculate"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Working Hours Table -->\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Goals Table -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>SignIn</th>\r\n          <th>SignOut</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n          <td>{{ goal.username }}</td>\r\n          <td>{{ goal.date }}</td>\r\n          <td @click=\"selectDate(goal.date)\">{{ goal.signIn }}</td>\r\n          <td>{{ goal.signOut }}</td>\r\n          <td><button @click=\"logout(goal)\">Sign Out</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    useData: Array,\r\n  },\r\n  data() {\r\n    return {\r\n      goals: [],\r\n      workingHours: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.addItem();\r\n  },\r\n  methods: {\r\n    addItem() {\r\n      const newItem = {\r\n        date: this.useData.presentDate,\r\n        signIn: this.useData.presentTime,\r\n        signOut: \"\",\r\n        username: this.useData.username,\r\n      };\r\n      this.goals.push(newItem);\r\n      console.log(this.goals);\r\n    },\r\n    logout(goal) {\r\n      const logoutUser = this.goals.find((u) => u.username === goal.username);\r\n      if (logoutUser) {\r\n        const currentDate = new Date();\r\n        logoutUser.signOut = currentDate.toLocaleTimeString();\r\n      }\r\n    },\r\n    selectDate(date) {\r\n      const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n      this.workingHours = selectedGoals.map((goal) => ({\r\n        date: goal.date,\r\n        hours: this.calculate(goal.signIn, goal.signOut),\r\n      }));\r\n    },\r\n    // calculate(signIn, signOut) {\r\n    //   // Calculation logic remains unchanged\r\n    // },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Styles remain unchanged */\r\n</style>\r\n\r\n<!-- \r\n <template>\r\n  <div>\r\n      <table class=\"table table-bordered\">\r\n          <thead>\r\n             <tr>\r\n               <th>Date</th>\r\n               <th>WorkingHours</th>\r\n              </tr>\r\n          </thead>\r\n              <tbody>\r\n                <tr v-for=\"(workingHour, index) in workingHours\" :key=\"index\">\r\n          <td>{{ workingHour.date }}</td>\r\n          <td>{{ workingHour.hours }}</td>\r\n        </tr>\r\n              </tbody>\r\n          </table>\r\n  </div>\r\n  <div>\r\n      <table  class=\"table table-bordered\">\r\n          <thead class=\"table-dark\">\r\n              <tr>\r\n              <th>Name</th>\r\n              <th>Date</th>\r\n              <th>SignIn</th>\r\n              <th>signOut</th>\r\n              <th>signOut</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n            <td>{{ goal.username }}</td>\r\n            <td>{{ goal.date}}</td>\r\n            <td @click=\"selectDate(goal.date)\">{{ goal.date }}</td> \r\n            <td>{{ goal.signIn}}</td>\r\n            <td>{{goal.signOut}}</td>\r\n            <td><button @click=\"logout(goal)\">signOut</button></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: {\r\n    useData:Array\r\n  }, \r\n  data() {\r\n    return {\r\n      goals: [],\r\n      workingHours: [], \r\n    };\r\n  },\r\n  created() {\r\n    this.addItem();\r\n  },\r\n  methods: {\r\n    addItem() {\r\n      const newItem = {\r\n        date: this.useData.presentDate,\r\n        signIn: this.useData.presentTime,\r\n        signOut: \"\",\r\n        username: this.useData.username,\r\n      };\r\n      this.goals.push(newItem);\r\n      console.log(this.useData);\r\n    },\r\n  },\r\n};\r\n</script>\r\n \r\n// logout() {\r\n//     const logoutUser = this.goals.find((u) => u.username === this.goals.username);\r\n//     if (logoutUser) {\r\n//       const currentDate = new Date();\r\n//       logoutUser.signOut = currentDate.toLocaleTimeString();\r\n      \r\n//     }\r\n//   },\r\n// selectDate(date) {\r\n//     const selectedGoals = this.goals.filter((goal) => goal.date === date);\r\n//     this.workingHours = selectedGoals.map((goal) => ({\r\n//       date: goal.date,\r\n//       hours: this.calculate(goal.signIn, goal.signOut),\r\n//     }));\r\n//   },\r\n// //workingHours\r\n//   calculate(signIn, signOut) {\r\n//     if (signIn && signOut) {\r\n//       const signInTime = new Date(`2000-01-01 ${signIn}`);\r\n//       const signOutTime = new Date(`2000-01-01 ${signOut}`);\r\n//       const timeDiff = signOutTime - signInTime;\r\n//       const hours = Math.floor(timeDiff / (1000 * 60 * 60));\r\n//       const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));\r\n//       return `${hours} hrs ${minutes} mins `;\r\n//     } else {\r\n//       return \"0\";\r\n//     }\r\n//   }\r\n\r\n -->\r\n"],"mappings":";AA2CA,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAEC;EACX,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAAC,CAAC;EAChB,CAAC;EACDC,OAAO,EAAE;IACPD,OAAOA,CAAA,EAAG;MACR,MAAME,OAAM,GAAI;QACdC,IAAI,EAAE,IAAI,CAACT,OAAO,CAACU,WAAW;QAC9BC,MAAM,EAAE,IAAI,CAACX,OAAO,CAACY,WAAW;QAChCC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE,IAAI,CAACd,OAAO,CAACc;MACzB,CAAC;MACD,IAAI,CAACX,KAAK,CAACY,IAAI,CAACP,OAAO,CAAC;MACxBQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,KAAK,CAAC;IACzB,CAAC;IACDe,MAAMA,CAACC,IAAI,EAAE;MACX,MAAMC,UAAS,GAAI,IAAI,CAACjB,KAAK,CAACkB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACR,QAAO,KAAMK,IAAI,CAACL,QAAQ,CAAC;MACvE,IAAIM,UAAU,EAAE;QACd,MAAMG,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;QAC9BJ,UAAU,CAACP,OAAM,GAAIU,WAAW,CAACE,kBAAkB,CAAC,CAAC;MACvD;IACF,CAAC;IACDC,UAAUA,CAACjB,IAAI,EAAE;MACf,MAAMkB,aAAY,GAAI,IAAI,CAACxB,KAAK,CAACyB,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACV,IAAG,KAAMA,IAAI,CAAC;MACrE,IAAI,CAACL,YAAW,GAAIuB,aAAa,CAACE,GAAG,CAAEV,IAAI,KAAM;QAC/CV,IAAI,EAAEU,IAAI,CAACV,IAAI;QACfqB,KAAK,EAAE,IAAI,CAACC,SAAS,CAACZ,IAAI,CAACR,MAAM,EAAEQ,IAAI,CAACN,OAAO;MACjD,CAAC,CAAC,CAAC;IACL;IACA;IACA;IACA;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}