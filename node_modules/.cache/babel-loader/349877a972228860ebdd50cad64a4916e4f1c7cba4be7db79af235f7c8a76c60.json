{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Working Hours\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"InTime1\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"OutTime1\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"InTime2\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"OutTime2\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userEntries, (entry, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(entry.Date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(entry.WorkingHours), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(entry.employeeName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(entry.InTime1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(entry.OutTime1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(entry.InTime2), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(entry.OutTime2), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","userEntries","entry","index","key","_toDisplayString","Date","WorkingHours","employeeName","InTime1","OutTime1","InTime2","OutTime2"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n          <th>Name</th>\r\n          <th>InTime1</th>\r\n          <th>OutTime1</th>\r\n          <th>InTime2</th>\r\n          <th>OutTime2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(entry, index) in userEntries\" :key=\"index\">\r\n          <td>{{ entry.Date }}</td>\r\n          <td>{{ entry.WorkingHours }}</td>\r\n          <td>{{ entry.employeeName }}</td>\r\n          <td>{{ entry.InTime1 }}</td>\r\n          <td>{{ entry.OutTime1 }}</td>\r\n          <td>{{ entry.InTime2 }}</td>\r\n          <td>{{ entry.OutTime2 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      userEntries: [],\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  watch: {\r\n    userData: {\r\n      handler(newValue) {\r\n        if (Array.isArray(newValue)) {\r\n          this.userEntries = newValue.map((user) => ({\r\n            Date: user.Date,\r\n            WorkingHours: this.calculateWorkingHours(user.InTime1, user.OutTime1, user.InTime2, user.OutTime2),\r\n            employeeName: user.employeeName,\r\n            InTime1: user.InTime1,\r\n            OutTime1: user.OutTime1,\r\n            InTime2: user.InTime2,\r\n            OutTime2: user.OutTime2,\r\n          }));\r\n        } else if (newValue) {\r\n          this.userEntries = [{\r\n            Date: newValue.Date,\r\n            WorkingHours: this.calculateWorkingHours(newValue.InTime1, newValue.OutTime1, newValue.InTime2, newValue.OutTime2),\r\n            employeeName: newValue.employeeName,\r\n            InTime1: newValue.InTime1,\r\n            OutTime1: newValue.OutTime1,\r\n            InTime2: newValue.InTime2,\r\n            OutTime2: newValue.OutTime2,\r\n          }];\r\n        } else {\r\n          this.userEntries = [];\r\n        }\r\n      },\r\n      immediate: true,\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    calculateWorkingHours(inTime1, outTime1, inTime2, outTime2) {\r\n      // Your existing calculateWorkingHours method\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EAEWA,KAAK,EAAC;AAAsB;gCACjCC,mBAAA,CAUQ,gB,aATNA,mBAAA,CAQK,a,aAPHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAsB,YAAlB,eAAa,G,aACjBA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAiB,YAAb,UAAQ,E;;uBAVpBC,mBAAA,CAyBM,cAxBJD,mBAAA,CAuBQ,SAvBRE,UAuBQ,GAtBNC,UAUQ,EACRH,mBAAA,CAUQ,iB,kBATNC,mBAAA,CAQKG,SAAA,QAAAC,WAAA,CARwBC,KAAA,CAAAC,WAAW,GAA5BC,KAAK,EAAEC,KAAK;yBAAxBR,mBAAA,CAQK;MARsCS,GAAG,EAAED;IAAK,IACnDT,mBAAA,CAAyB,YAAAW,gBAAA,CAAlBH,KAAK,CAACI,IAAI,kBACjBZ,mBAAA,CAAiC,YAAAW,gBAAA,CAA1BH,KAAK,CAACK,YAAY,kBACzBb,mBAAA,CAAiC,YAAAW,gBAAA,CAA1BH,KAAK,CAACM,YAAY,kBACzBd,mBAAA,CAA4B,YAAAW,gBAAA,CAArBH,KAAK,CAACO,OAAO,kBACpBf,mBAAA,CAA6B,YAAAW,gBAAA,CAAtBH,KAAK,CAACQ,QAAQ,kBACrBhB,mBAAA,CAA4B,YAAAW,gBAAA,CAArBH,KAAK,CAACS,OAAO,kBACpBjB,mBAAA,CAA6B,YAAAW,gBAAA,CAAtBH,KAAK,CAACU,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}