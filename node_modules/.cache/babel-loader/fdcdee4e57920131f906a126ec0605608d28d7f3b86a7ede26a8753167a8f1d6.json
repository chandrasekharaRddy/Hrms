{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"col\"\n};\nconst _hoisted_5 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  style: {\n    \"width\": \"33%\"\n  }\n}, \"Employee_Id\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  style: {\n    \"width\": \"33%\"\n  }\n}, \"EmployeeName\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  style: {\n    \"width\": \"33%\"\n  }\n}, \"EmployeeRole\")])], -1 /* HOISTED */);\nconst _hoisted_7 = {\n  style: {\n    \"width\": \"33%\"\n  }\n};\nconst _hoisted_8 = {\n  style: {\n    \"width\": \"33%\"\n  }\n};\nconst _hoisted_9 = {\n  style: {\n    \"width\": \"33%\"\n  }\n};\nconst _hoisted_10 = {\n  key: 2,\n  class: \"row\"\n};\nconst _hoisted_11 = {\n  class: \"col\"\n};\nconst _hoisted_12 = {\n  class: \"table table-bordered\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Total Working Hours\")])], -1 /* HOISTED */);\nconst _hoisted_14 = {\n  key: 3,\n  class: \"row\"\n};\nconst _hoisted_15 = {\n  class: \"col\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  class: \"table table-bordered\"\n};\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"EmployeeId\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Intime\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Outtime\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$options.averageHours !== null ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"Average Hours: \" + _toDisplayString($options.averageHours), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Employee Table \"), $data.employeeTable && $options.employeeList && $options.employeeList.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.employeeList, (employee, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", _hoisted_7, _toDisplayString(employee.empId), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_8, _toDisplayString(employee.empName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_9, _toDisplayString(employee.empRole), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Working Hours Table \"), $data.workingHours ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"table\", _hoisted_12, [_hoisted_13, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.workingHoursData, (record, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(record.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(record.totalHours) + \" hours \" + _toDisplayString(record.totalMinutes) + \" minutes\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Employee Details Table \"), $data.EmployeeDetailsTable ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [$data.selectedEmployee ? (_openBlock(), _createElementBlock(\"table\", _hoisted_16, [_hoisted_17, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredAttendances, (attendance, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString($data.selectedEmployee.empId), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(attendance.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(attendance.inTime), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(attendance.outTime), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","$options","averageHours","_hoisted_2","_toDisplayString","_createCommentVNode","$data","employeeTable","employeeList","length","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","employee","index","key","_hoisted_7","empId","_hoisted_8","empName","_hoisted_9","empRole","workingHours","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","workingHoursData","record","date","totalHours","totalMinutes","EmployeeDetailsTable","_hoisted_14","_hoisted_15","selectedEmployee","_hoisted_16","_hoisted_17","filteredAttendances","attendance","inTime","outTime"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <p v-if=\"averageHours !== null\">Average Hours: {{ averageHours }}</p>\r\n\r\n    <!-- Employee Table -->\r\n    <div v-if=\"employeeTable && employeeList && employeeList.length > 0\" class=\"row\">\r\n      <div class=\"col\">\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th style=\"width: 33%;\">Employee_Id</th>\r\n              <th style=\"width: 33%;\">EmployeeName</th>\r\n              <th style=\"width: 33%;\">EmployeeRole</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(employee, index) in employeeList\" :key=\"index\">\r\n              <td style=\"width: 33%;\">{{ employee.empId }}</td>\r\n              <td style=\"width: 33%;\">{{ employee.empName }}</td>\r\n              <td style=\"width: 33%;\">{{ employee.empRole }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Working Hours Table -->\r\n    <div v-if=\"workingHours\" class=\"row\">\r\n      <div class=\"col\">\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Total Working Hours</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(record, index) in workingHoursData\" :key=\"index\">\r\n              <td>{{ record.date }}</td>\r\n              <td>{{ record.totalHours }} hours {{ record.totalMinutes }} minutes</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Employee Details Table -->\r\n    <div v-if=\"EmployeeDetailsTable\" class=\"row\">\r\n      <div class=\"col\">\r\n        <table v-if=\"selectedEmployee\" class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>EmployeeId</th>\r\n              <th>Date</th>\r\n              <th>Intime</th>\r\n              <th>Outtime</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(attendance, index) in filteredAttendances\" :key=\"index\">\r\n              <td>{{ selectedEmployee.empId }}</td>\r\n              <td>{{ attendance.date }}</td>\r\n              <td>{{ attendance.inTime }}</td>\r\n              <td>{{ attendance.outTime }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      selectedDate: null,\r\n      employeeTable: true,\r\n      workingHours: true,\r\n      EmployeeDetailsTable: true,\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n        const userId = this.userDetails ? this.userDetails.userId : null;\r\n        if (userId) {\r\n          const filteredEmployees = this.$store.state.userData.filter(employee => employee.empId === userId);\r\n          const groupedEmployees = filteredEmployees.reduce((acc, employee) => {\r\n            const key = employee.empId;\r\n            if (!acc[key]) {\r\n              acc[key] = {\r\n                empId: employee.empId,\r\n                empName: employee.empName,\r\n                empRole: employee.empRole,\r\n                attendances: []\r\n              };\r\n            }\r\n            acc[key].attendances.push(employee);\r\n            return acc;\r\n          }, {});\r\n          const uniqueEmployees = Object.values(groupedEmployees);\r\n          return uniqueEmployees;\r\n        }\r\n      }\r\n      return [];\r\n    },\r\n    filteredAttendances() {\r\n      if (this.selectedEmployee && this.selectedDate) {\r\n        return this.selectedEmployee.attendances.filter(attendance => attendance.date === this.selectedDate);\r\n      }\r\n      return [];\r\n    },\r\n    workingHoursData() {\r\n      if (this.selectedEmployee) {\r\n        const attendanceDates = {};\r\n        this.selectedEmployee.attendances.forEach(attendance => {\r\n          if (!attendanceDates[attendance.date]) {\r\n            attendanceDates[attendance.date] = {\r\n              date: attendance.date,\r\n              totalDifference: 0\r\n            };\r\n          }\r\n          if (attendance.outTime) {\r\n            const intimeDate = new Date(`01/01/2000 ${attendance.inTime}`);\r\n            const outtimeDate = new Date(`01/01/2000 ${attendance.outTime}`);\r\n            const diff = Math.abs(outtimeDate - intimeDate);\r\n            attendanceDates[attendance.date].totalDifference += diff;\r\n          }\r\n        });\r\n\r\n        const result = Object.values(attendanceDates).map(dateInfo => {\r\n          const hours = Math.floor(dateInfo.totalDifference / (1000 * 60 * 60));\r\n          const minutes = Math.floor((dateInfo.totalDifference % (1000 * 60 * 60)) / (1000 * 60));\r\n          return {\r\n            date: dateInfo.date,\r\n            totalHours: hours,\r\n            totalMinutes: minutes,\r\n          };\r\n        });\r\n\r\n        return result;\r\n      }\r\n      return [];\r\n    },\r\n    averageHours() {\r\n      if (this.workingHoursData.length > 0) {\r\n        const totalHours = this.workingHoursData.reduce((acc, curr) => acc + curr.totalHours, 0);\r\n        const totalMinutes = this.workingHoursData.reduce((acc, curr) => acc + curr.totalMinutes, 0);\r\n        const totalInMinutes = totalHours * 60 + totalMinutes;\r\n        const averageInMinutes = totalInMinutes / this.workingHoursData.length;\r\n        const averageHours = Math.floor(averageInMinutes / 60);\r\n        const averageMinutes = Math.floor(averageInMinutes % 60);\r\n        return `${averageHours} hours ${averageMinutes} minutes`;\r\n      }\r\n      return null;\r\n    }\r\n  },\r\n  methods: {\r\n    getValues(date) {\r\n      this.selectedDate = date;\r\n      this.employeeTable = false; \r\n      this.workingHours = true;\r\n      this.EmployeeDetailsTable = true;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\ntbody tr:nth-child(odd) {\r\n  background: #ccc;\r\n}\r\n\r\ntable tr:hover td {\r\n  background: #839192;\r\n  color: #000;\r\n  transition: all 0.3s ease-in;\r\n  cursor: pointer;\r\n}\r\n\r\nth {\r\n  border-bottom: 1px solid black, 3px double black;  \r\n}\r\n\r\ntd {\r\n  font-family: 'Roboto';\r\n} \r\n\r\nth {\r\n  font-family: 'Arial';\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}