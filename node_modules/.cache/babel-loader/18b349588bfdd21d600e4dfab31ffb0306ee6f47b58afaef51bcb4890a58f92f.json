{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  computed: {\n    userData() {\n      const userData = this.$store.getters.getUserData.user || {};\n      return userData;\n    },\n    employeeData() {\n      return this.$store.getters.getUserData.employeeData || [];\n    },\n    uniqueEmployeeData() {\n      const uniqueIds = new Set();\n      return this.employeeData.filter(employee => {\n        if (!uniqueIds.has(employee.id)) {\n          uniqueIds.add(employee.id);\n          return true;\n        }\n        return false;\n      });\n    },\n    workingHoursData() {\n      return this.matchingWorkingHours();\n    }\n  },\n  methods: {\n    userDetails(id) {\n      console.log(id);\n    },\n    matchingWorkingHours() {\n      const workingHours = [];\n      for (const employee of this.employeeData) {\n        const workingHourEntry = {\n          date: employee.date,\n          workingHours: this.calculateWorkingHours(employee.intime, employee.outtime)\n        };\n        workingHours.push(workingHourEntry);\n      }\n      return workingHours;\n    },\n    calculateWorkingHours(intime, outtime) {\n      if (!outtime || outtime.trim() === '' || outtime === '0') {\n        return 0; // If outtime is zero or not provided, consider working hours as zero\n      }\n\n      // Calculate difference between intime and outtime\n      const startTime = new Date(intime);\n      const endTime = new Date(outtime);\n      const differenceInMilliseconds = endTime - startTime;\n\n      // Convert difference to hours\n      const differenceInHours = differenceInMilliseconds / (1000 * 60 * 60);\n      return differenceInHours;\n    }\n  }\n};","map":{"version":3,"names":["computed","userData","$store","getters","getUserData","user","employeeData","uniqueEmployeeData","uniqueIds","Set","filter","employee","has","id","add","workingHoursData","matchingWorkingHours","methods","userDetails","console","log","workingHours","workingHourEntry","date","calculateWorkingHours","intime","outtime","push","trim","startTime","Date","endTime","differenceInMilliseconds","differenceInHours"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- User Table -->\r\n    <table v-if=\"userData\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Role</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ userData.id }}</td>\r\n          <td>{{ userData.name }}</td>\r\n          <td>{{ userData.email }}</td>\r\n          <td>{{ userData.role }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div>\r\n    <!-- Employee Table -->\r\n    <table v-if=\"uniqueEmployeeData.length > 0\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in uniqueEmployeeData\" :key=\"index\">\r\n          <td @click=\"userDetails(employee.id)\">{{ employee.id }}</td>\r\n          <td>{{ employee.name }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>No employee data available.</p>\r\n  </div>\r\n  <div>\r\n    <!-- Working Hours Table -->\r\n    <div v-if=\"workingHoursData.length > 0\">\r\n      <table class=\"table table-bordered\">\r\n        <thead class=\"table-dark\">\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Working Hours</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(entry, index) in workingHoursData\" :key=\"index\">\r\n            <td>{{ entry.date }}</td>\r\n            <td>{{ entry.workingHours }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <p v-else>No working hours data available.</p>\r\n  </div>\r\n  <div>\r\n    <!-- Employee Details Table -->\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Id</th>\r\n          <th>Date</th>\r\n          <th>Intime</th>\r\n          <th>Outtime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in employeeData\" :key=\"index\">\r\n          <td>{{ employee.id }}</td>\r\n          <td>{{ employee.date }}</td>\r\n          <td>{{ employee.intime }}</td>\r\n          <td>{{ employee.outtime }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  computed: {\r\n    userData() {\r\n      const userData = this.$store.getters.getUserData.user || {};\r\n      return userData;\r\n    },\r\n    employeeData() {\r\n      return this.$store.getters.getUserData.employeeData || [];\r\n    },\r\n    uniqueEmployeeData() {\r\n      const uniqueIds = new Set();\r\n      return this.employeeData.filter(employee => {\r\n        if (!uniqueIds.has(employee.id)) {\r\n          uniqueIds.add(employee.id);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    },\r\n    workingHoursData() {\r\n      return this.matchingWorkingHours();\r\n    }\r\n  },\r\n  methods: {\r\n    userDetails(id) {\r\n      console.log(id);\r\n    },\r\n    matchingWorkingHours() {\r\n      const workingHours = [];\r\n      for (const employee of this.employeeData) {\r\n        const workingHourEntry = {\r\n          date: employee.date,\r\n          workingHours: this.calculateWorkingHours(employee.intime, employee.outtime)\r\n        };\r\n        workingHours.push(workingHourEntry);\r\n      }\r\n      return workingHours;\r\n    },\r\n    calculateWorkingHours(intime, outtime) {\r\n      if (!outtime || outtime.trim() === '' || outtime === '0') {\r\n        return 0; // If outtime is zero or not provided, consider working hours as zero\r\n      }\r\n\r\n      // Calculate difference between intime and outtime\r\n      const startTime = new Date(intime);\r\n      const endTime = new Date(outtime);\r\n      const differenceInMilliseconds = endTime - startTime;\r\n\r\n      // Convert difference to hours\r\n      const differenceInHours = differenceInMilliseconds / (1000 * 60 * 60);\r\n      return differenceInHours;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your CSS styles */\r\n</style>\r\n"],"mappings":";AAoFA,eAAe;EACbA,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,MAAMA,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,WAAW,CAACC,IAAG,IAAK,CAAC,CAAC;MAC3D,OAAOJ,QAAQ;IACjB,CAAC;IACDK,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACJ,MAAM,CAACC,OAAO,CAACC,WAAW,CAACE,YAAW,IAAK,EAAE;IAC3D,CAAC;IACDC,kBAAkBA,CAAA,EAAG;MACnB,MAAMC,SAAQ,GAAI,IAAIC,GAAG,CAAC,CAAC;MAC3B,OAAO,IAAI,CAACH,YAAY,CAACI,MAAM,CAACC,QAAO,IAAK;QAC1C,IAAI,CAACH,SAAS,CAACI,GAAG,CAACD,QAAQ,CAACE,EAAE,CAAC,EAAE;UAC/BL,SAAS,CAACM,GAAG,CAACH,QAAQ,CAACE,EAAE,CAAC;UAC1B,OAAO,IAAI;QACb;QACA,OAAO,KAAK;MACd,CAAC,CAAC;IACJ,CAAC;IACDE,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACC,oBAAoB,CAAC,CAAC;IACpC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACL,EAAE,EAAE;MACdM,OAAO,CAACC,GAAG,CAACP,EAAE,CAAC;IACjB,CAAC;IACDG,oBAAoBA,CAAA,EAAG;MACrB,MAAMK,YAAW,GAAI,EAAE;MACvB,KAAK,MAAMV,QAAO,IAAK,IAAI,CAACL,YAAY,EAAE;QACxC,MAAMgB,gBAAe,GAAI;UACvBC,IAAI,EAAEZ,QAAQ,CAACY,IAAI;UACnBF,YAAY,EAAE,IAAI,CAACG,qBAAqB,CAACb,QAAQ,CAACc,MAAM,EAAEd,QAAQ,CAACe,OAAO;QAC5E,CAAC;QACDL,YAAY,CAACM,IAAI,CAACL,gBAAgB,CAAC;MACrC;MACA,OAAOD,YAAY;IACrB,CAAC;IACDG,qBAAqBA,CAACC,MAAM,EAAEC,OAAO,EAAE;MACrC,IAAI,CAACA,OAAM,IAAKA,OAAO,CAACE,IAAI,CAAC,MAAM,EAAC,IAAKF,OAAM,KAAM,GAAG,EAAE;QACxD,OAAO,CAAC,EAAE;MACZ;;MAEA;MACA,MAAMG,SAAQ,GAAI,IAAIC,IAAI,CAACL,MAAM,CAAC;MAClC,MAAMM,OAAM,GAAI,IAAID,IAAI,CAACJ,OAAO,CAAC;MACjC,MAAMM,wBAAuB,GAAID,OAAM,GAAIF,SAAS;;MAEpD;MACA,MAAMI,iBAAgB,GAAID,wBAAuB,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC;MACrE,OAAOC,iBAAiB;IAC1B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}