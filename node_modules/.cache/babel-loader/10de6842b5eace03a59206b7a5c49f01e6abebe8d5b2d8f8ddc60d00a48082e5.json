{"ast":null,"code":"export default {\n  data() {\n    return {\n      selectedEmployee: null,\n      workingHours: false\n    };\n  },\n  computed: {\n    userDetails() {\n      return this.$store.state.userData && this.$store.state.userData.length > 0 ? this.$store.state.userData[0] : null;\n    },\n    employeeList() {\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\n        const groupedEmployees = this.$store.state.userData.reduce((acc, employee) => {\n          const key = `${employee.empId}_${employee.empName}`;\n          if (!acc[key]) {\n            acc[key] = {\n              empId: employee.empId,\n              empName: employee.empName\n            };\n          }\n          return acc;\n        }, {});\n        const uniqueEmployees = Object.values(groupedEmployees);\n        return uniqueEmployees;\n      }\n      return [];\n    }\n  },\n  methods: {\n    showEmployeeDetails(employee) {\n      console.log(\"Selected Employee:\", employee);\n      this.selectedEmployee = employee;\n      this.workingHours = false;\n    },\n    calculateWorkingHours(intime, outtime) {\n      if (!outtime) {\n        return \"0 hours 0 minutes\";\n      }\n      const intimeDate = new Date(`01/01/2000 ${intime}`);\n      const outtimeDate = new Date(`01/01/2000 ${outtime}`);\n      const diff = Math.abs(outtimeDate - intimeDate);\n      const hours = Math.floor(diff / (1000 * 60 * 60));\n      const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n      return `${hours} hours ${minutes} minutes`;\n    },\n    getWorkingHoursTable() {\n      this.workingHours = true;\n    }\n  }\n};","map":{"version":3,"names":["data","selectedEmployee","workingHours","computed","userDetails","$store","state","userData","length","employeeList","groupedEmployees","reduce","acc","employee","key","empId","empName","uniqueEmployees","Object","values","methods","showEmployeeDetails","console","log","calculateWorkingHours","intime","outtime","intimeDate","Date","outtimeDate","diff","Math","abs","hours","floor","minutes","getWorkingHoursTable"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- User Table -->\r\n    <table v-if=\"userDetails\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>UserId</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>{{ userDetails.userId }}</td>\r\n          <td>{{ userDetails.userName }}</td>\r\n          <td>{{ userDetails.email }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <!-- Employee Table -->\r\n    <table v-if=\"employeeList && employeeList.length > 0\" class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>EmployeeName</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(employee, index) in employeeList\" :key=\"'emp_' + index\">\r\n          <td @click=\"showEmployeeDetails(employee)\">{{ employee.empId }}</td>\r\n          <td>{{ employee.empName }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <!-- Employee Details Table -->\r\n  <div v-if=\"selectedEmployee\">\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>EmployeeId</th>\r\n          <th>Date</th>\r\n          <th>Intime</th>\r\n          <th>Outtime</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(attendance, index) in selectedEmployee\" :key=\"index\">\r\n          <td>{{ attendance.empId }}</td>\r\n          <td @click=\"getWorkingHoursTable()\">{{ attendance.date }}</td>\r\n          <td>{{ attendance.inTime }}</td>\r\n          <td>{{ attendance.outTime }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <!-- Employee Working Hours Table -->\r\n  <div v-if=\"workingHours\">\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>WorkingHours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(attendance, index) in selectedEmployee\" :key=\"'work_' + index\">\r\n          <td>{{ attendance.date }}</td>\r\n          <td>{{ calculateWorkingHours(attendance.inTime, attendance.outTime) }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedEmployee: null,\r\n      workingHours: false\r\n    };\r\n  },\r\n  computed: {\r\n    userDetails() {\r\n      return this.$store.state.userData && this.$store.state.userData.length > 0\r\n        ? this.$store.state.userData[0]\r\n        : null;\r\n    },\r\n    employeeList() {\r\n      if (this.$store.state.userData && this.$store.state.userData.length > 0) {\r\n        const groupedEmployees = this.$store.state.userData.reduce((acc, employee) => {\r\n          const key = `${employee.empId}_${employee.empName}`;\r\n          if (!acc[key]) {\r\n            acc[key] = {\r\n              empId: employee.empId,\r\n              empName: employee.empName\r\n            };\r\n          }\r\n          return acc;\r\n        }, {});\r\n        const uniqueEmployees = Object.values(groupedEmployees);\r\n        return uniqueEmployees;\r\n      }\r\n      return [];\r\n    }\r\n  },\r\n  methods: {\r\n    showEmployeeDetails(employee) {\r\n      console.log(\"Selected Employee:\", employee);\r\n      this.selectedEmployee = employee;\r\n      this.workingHours = false;\r\n    },\r\n    calculateWorkingHours(intime, outtime) {\r\n      if (!outtime) {\r\n        return \"0 hours 0 minutes\";\r\n      }\r\n      const intimeDate = new Date(`01/01/2000 ${intime}`);\r\n      const outtimeDate = new Date(`01/01/2000 ${outtime}`);\r\n      const diff = Math.abs(outtimeDate - intimeDate);\r\n      const hours = Math.floor(diff / (1000 * 60 * 60));\r\n      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n      return `${hours} hours ${minutes} minutes`;\r\n    },\r\n    getWorkingHoursTable() {\r\n      this.workingHours = true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AA4EA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,IAAI;MACtBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,QAAO,IAAK,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAK,GAAI,IACrE,IAAI,CAACH,MAAM,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAC,IAC5B,IAAI;IACV,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACJ,MAAM,CAACC,KAAK,CAACC,QAAO,IAAK,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAK,GAAI,CAAC,EAAE;QACvE,MAAME,gBAAe,GAAI,IAAI,CAACL,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;UAC5E,MAAMC,GAAE,GAAK,GAAED,QAAQ,CAACE,KAAM,IAAGF,QAAQ,CAACG,OAAQ,EAAC;UACnD,IAAI,CAACJ,GAAG,CAACE,GAAG,CAAC,EAAE;YACbF,GAAG,CAACE,GAAG,IAAI;cACTC,KAAK,EAAEF,QAAQ,CAACE,KAAK;cACrBC,OAAO,EAAEH,QAAQ,CAACG;YACpB,CAAC;UACH;UACA,OAAOJ,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QACN,MAAMK,eAAc,GAAIC,MAAM,CAACC,MAAM,CAACT,gBAAgB,CAAC;QACvD,OAAOO,eAAe;MACxB;MACA,OAAO,EAAE;IACX;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,mBAAmBA,CAACR,QAAQ,EAAE;MAC5BS,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEV,QAAQ,CAAC;MAC3C,IAAI,CAACZ,gBAAe,GAAIY,QAAQ;MAChC,IAAI,CAACX,YAAW,GAAI,KAAK;IAC3B,CAAC;IACDsB,qBAAqBA,CAACC,MAAM,EAAEC,OAAO,EAAE;MACrC,IAAI,CAACA,OAAO,EAAE;QACZ,OAAO,mBAAmB;MAC5B;MACA,MAAMC,UAAS,GAAI,IAAIC,IAAI,CAAE,cAAaH,MAAO,EAAC,CAAC;MACnD,MAAMI,WAAU,GAAI,IAAID,IAAI,CAAE,cAAaF,OAAQ,EAAC,CAAC;MACrD,MAAMI,IAAG,GAAIC,IAAI,CAACC,GAAG,CAACH,WAAU,GAAIF,UAAU,CAAC;MAC/C,MAAMM,KAAI,GAAIF,IAAI,CAACG,KAAK,CAACJ,IAAG,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;MACjD,MAAMK,OAAM,GAAIJ,IAAI,CAACG,KAAK,CAAEJ,IAAG,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAE,CAAC,CAAC;MACnE,OAAQ,GAAEG,KAAK,UAAUE,OAAO,UAAU;IAC5C,CAAC;IACDC,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAClC,YAAW,GAAI,IAAI;IAC1B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}