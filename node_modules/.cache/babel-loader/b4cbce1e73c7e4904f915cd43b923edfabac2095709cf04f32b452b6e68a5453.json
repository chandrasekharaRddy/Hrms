{"ast":null,"code":"export default {\n  data() {\n    return {\n      workingHours: [],\n      goals: []\n    };\n  },\n  computed: {\n    userData() {\n      return this.$store.getters.getUserData;\n    }\n  },\n  watch: {\n    userData: {\n      handler(newValue) {\n        if (Array.isArray(newValue.details)) {\n          this.workingHours = newValue.details.map(detail => ({\n            Date: detail.Date,\n            WorkingHours: this.calculateWorkingHours(detail.InTime1, detail.OutTime1, detail.InTime2, detail.OutTime2)\n          }));\n          this.goals = newValue.details.map(detail => ({\n            employeeName: newValue.employeeName,\n            Date: detail.Date,\n            InTime1: detail.InTime1,\n            OutTime1: detail.OutTime1,\n            InTime2: detail.InTime2,\n            OutTime2: detail.OutTime2\n          }));\n        } else {\n          this.workingHours = [];\n          this.goals = [];\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    calculateWorkingHours(inTime1, outTime1, inTime2, outTime2) {\n      const startTime = new Date(`2000-01-01T${inTime1}`);\n      const endTime = new Date(`2000-01-01T${outTime2}`);\n      const diff = endTime - startTime;\n      const hours = Math.floor(diff / (1000 * 60 * 60));\n      const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n      return `${hours} hours ${minutes} minutes`;\n    }\n  }\n};","map":{"version":3,"names":["data","workingHours","goals","computed","userData","$store","getters","getUserData","watch","handler","newValue","Array","isArray","details","map","detail","Date","WorkingHours","calculateWorkingHours","InTime1","OutTime1","InTime2","OutTime2","employeeName","immediate","deep","methods","inTime1","outTime1","inTime2","outTime2","startTime","endTime","diff","hours","Math","floor","minutes"],"sources":["C:\\Users\\IMPEGNOABS010\\Desktop\\HRMSROUT\\src\\components\\attendenceForm.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Working Hours</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(hours, index) in workingHours\" :key=\"index\">\r\n          <td>{{ hours.Date }}</td>\r\n          <td>{{ hours.WorkingHours }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Date</th>\r\n          <th>InTime1</th>\r\n          <th>OutTime1</th>\r\n          <th>InTime2</th>\r\n          <th>OutTime2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(goal, index) in goals\" :key=\"index\">\r\n          <td>{{ goal.employeeName }}</td>\r\n          <td>{{ goal.Date }}</td>\r\n          <td>{{ goal.InTime1 }}</td>\r\n          <td>{{ goal.OutTime1 }}</td>\r\n          <td>{{ goal.InTime2 }}</td>\r\n          <td>{{ goal.OutTime2 }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      workingHours: [],\r\n      goals: [],\r\n    };\r\n  },\r\n  computed: {\r\n    userData() {\r\n      return this.$store.getters.getUserData;\r\n    },\r\n  },\r\n  watch: {\r\n    userData: {\r\n      handler(newValue) {\r\n        if (Array.isArray(newValue.details)) {\r\n          this.workingHours = newValue.details.map((detail) => ({\r\n            Date: detail.Date,\r\n            WorkingHours: this.calculateWorkingHours(detail.InTime1, detail.OutTime1, detail.InTime2, detail.OutTime2),\r\n          }));\r\n\r\n          this.goals = newValue.details.map((detail) => ({\r\n            employeeName: newValue.employeeName,\r\n            Date: detail.Date,\r\n            InTime1: detail.InTime1,\r\n            OutTime1: detail.OutTime1,\r\n            InTime2: detail.InTime2,\r\n            OutTime2: detail.OutTime2,\r\n          }));\r\n        } else {\r\n          this.workingHours = [];\r\n          this.goals = [];\r\n        }\r\n      },\r\n      immediate: true,\r\n      deep: true,\r\n    },\r\n  },\r\n  methods: {\r\n    calculateWorkingHours(inTime1, outTime1, inTime2, outTime2) {\r\n      const startTime = new Date(`2000-01-01T${inTime1}`);\r\n      const endTime = new Date(`2000-01-01T${outTime2}`);\r\n      const diff = endTime - startTime;\r\n      const hours = Math.floor(diff / (1000 * 60 * 60));\r\n      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\r\n      return `${hours} hours ${minutes} minutes`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Your existing styles remain unchanged */\r\n</style>\r\n"],"mappings":"AA0CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,WAAW;IACxC;EACF,CAAC;EACDC,KAAK,EAAE;IACLJ,QAAQ,EAAE;MACRK,OAAOA,CAACC,QAAQ,EAAE;QAChB,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAACG,OAAO,CAAC,EAAE;UACnC,IAAI,CAACZ,YAAW,GAAIS,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAEC,MAAM,KAAM;YACpDC,IAAI,EAAED,MAAM,CAACC,IAAI;YACjBC,YAAY,EAAE,IAAI,CAACC,qBAAqB,CAACH,MAAM,CAACI,OAAO,EAAEJ,MAAM,CAACK,QAAQ,EAAEL,MAAM,CAACM,OAAO,EAAEN,MAAM,CAACO,QAAQ;UAC3G,CAAC,CAAC,CAAC;UAEH,IAAI,CAACpB,KAAI,GAAIQ,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAEC,MAAM,KAAM;YAC7CQ,YAAY,EAAEb,QAAQ,CAACa,YAAY;YACnCP,IAAI,EAAED,MAAM,CAACC,IAAI;YACjBG,OAAO,EAAEJ,MAAM,CAACI,OAAO;YACvBC,QAAQ,EAAEL,MAAM,CAACK,QAAQ;YACzBC,OAAO,EAAEN,MAAM,CAACM,OAAO;YACvBC,QAAQ,EAAEP,MAAM,CAACO;UACnB,CAAC,CAAC,CAAC;QACL,OAAO;UACL,IAAI,CAACrB,YAAW,GAAI,EAAE;UACtB,IAAI,CAACC,KAAI,GAAI,EAAE;QACjB;MACF,CAAC;MACDsB,SAAS,EAAE,IAAI;MACfC,IAAI,EAAE;IACR;EACF,CAAC;EACDC,OAAO,EAAE;IACPR,qBAAqBA,CAACS,OAAO,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,QAAQ,EAAE;MAC1D,MAAMC,SAAQ,GAAI,IAAIf,IAAI,CAAE,cAAaW,OAAQ,EAAC,CAAC;MACnD,MAAMK,OAAM,GAAI,IAAIhB,IAAI,CAAE,cAAac,QAAS,EAAC,CAAC;MAClD,MAAMG,IAAG,GAAID,OAAM,GAAID,SAAS;MAChC,MAAMG,KAAI,GAAIC,IAAI,CAACC,KAAK,CAACH,IAAG,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;MACjD,MAAMI,OAAM,GAAIF,IAAI,CAACC,KAAK,CAAEH,IAAG,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAE,CAAC,CAAC;MACnE,OAAQ,GAAEC,KAAK,UAAUG,OAAO,UAAU;IAC5C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}